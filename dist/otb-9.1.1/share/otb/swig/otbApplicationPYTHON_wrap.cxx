/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_DIRECTORS
#define SWIG_PYTHON_THREADS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *newstr = 0;
  str = PyUnicode_AsUTF8String(str);
  if (str) {
    char *cstr;
    Py_ssize_t len;
    PyBytes_AsStringAndSize(str, &cstr, &len);
    newstr = (char *) malloc(len+1);
    memcpy(newstr, cstr, len+1);
    Py_XDECREF(str);
  }
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

// SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user
// interface files check for it.
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    Py_XDECREF(value);
    PyErr_Restore(type, newvalue, traceback);
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03020000
# error "This version of SWIG only supports Python 3 >= 3.2"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
      data->delargs = !(flags & (METH_O));
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        SwigPyObject_acquire(v,args);
      } else {
        SwigPyObject_disown(v,args);
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          PyObject_SetAttr(inst, SWIG_This(), swig_this);
          Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, "__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, "type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        return -1;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



#ifdef __cplusplus
extern "C" {
#endif

/* Method creation and docstring support functions */

SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name);
SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);
SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);

#ifdef __cplusplus
}
#endif


  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object. */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_AddProcessToWatchEvent swig_types[0]
#define SWIGTYPE_p_Application swig_types[1]
#define SWIGTYPE_p_Application_Pointer swig_types[2]
#define SWIGTYPE_p_ImageBaseType swig_types[3]
#define SWIGTYPE_p_KWIML_INT_int16_t swig_types[4]
#define SWIGTYPE_p_KWIML_INT_int32_t swig_types[5]
#define SWIGTYPE_p_KWIML_INT_int64_t swig_types[6]
#define SWIGTYPE_p_KWIML_INT_int8_t swig_types[7]
#define SWIGTYPE_p_KWIML_INT_uint16_t swig_types[8]
#define SWIGTYPE_p_KWIML_INT_uint32_t swig_types[9]
#define SWIGTYPE_p_KWIML_INT_uint64_t swig_types[10]
#define SWIGTYPE_p_KWIML_INT_uint8_t swig_types[11]
#define SWIGTYPE_p_Logger swig_types[12]
#define SWIGTYPE_p_NumericTraitsT_double_t__RealType swig_types[13]
#define SWIGTYPE_p_Parameter swig_types[14]
#define SWIGTYPE_p_ProgressReporterManager swig_types[15]
#define SWIGTYPE_p_ProgressReporterManager_Pointer swig_types[16]
#define SWIGTYPE_p_PythonLogOutput swig_types[17]
#define SWIGTYPE_p_PythonLogOutput_Pointer swig_types[18]
#define SWIGTYPE_p_RealValueType swig_types[19]
#define SWIGTYPE_p_Registry swig_types[20]
#define SWIGTYPE_p_allocator_type swig_types[21]
#define SWIGTYPE_p_boost__any swig_types[22]
#define SWIGTYPE_p_char swig_types[23]
#define SWIGTYPE_p_const_reference swig_types[24]
#define SWIGTYPE_p_difference_type swig_types[25]
#define SWIGTYPE_p_double swig_types[26]
#define SWIGTYPE_p_int swig_types[27]
#define SWIGTYPE_p_itkAbortCheckEvent swig_types[28]
#define SWIGTYPE_p_itkAnyEvent swig_types[29]
#define SWIGTYPE_p_itkCommand swig_types[30]
#define SWIGTYPE_p_itkCommand_Pointer swig_types[31]
#define SWIGTYPE_p_itkDeleteEvent swig_types[32]
#define SWIGTYPE_p_itkEndEvent swig_types[33]
#define SWIGTYPE_p_itkEndPickEvent swig_types[34]
#define SWIGTYPE_p_itkEventObject swig_types[35]
#define SWIGTYPE_p_itkExitEvent swig_types[36]
#define SWIGTYPE_p_itkIndent swig_types[37]
#define SWIGTYPE_p_itkIterationEvent swig_types[38]
#define SWIGTYPE_p_itkLightObject swig_types[39]
#define SWIGTYPE_p_itkLightObject_Pointer swig_types[40]
#define SWIGTYPE_p_itkLogOutput swig_types[41]
#define SWIGTYPE_p_itkMetaDataDictionary swig_types[42]
#define SWIGTYPE_p_itkMetaDataObjectBase swig_types[43]
#define SWIGTYPE_p_itkMetaDataObjectBase_Pointer swig_types[44]
#define SWIGTYPE_p_itkModifiedEvent swig_types[45]
#define SWIGTYPE_p_itkNoEvent swig_types[46]
#define SWIGTYPE_p_itkObject swig_types[47]
#define SWIGTYPE_p_itkObjectFactoryBase swig_types[48]
#define SWIGTYPE_p_itkObjectFactoryBase_Pointer swig_types[49]
#define SWIGTYPE_p_itkObject_Pointer swig_types[50]
#define SWIGTYPE_p_itkPickEvent swig_types[51]
#define SWIGTYPE_p_itkProcessObject swig_types[52]
#define SWIGTYPE_p_itkProcessObject_Pointer swig_types[53]
#define SWIGTYPE_p_itkProgressEvent swig_types[54]
#define SWIGTYPE_p_itkPyCommand swig_types[55]
#define SWIGTYPE_p_itkPyCommand_Pointer swig_types[56]
#define SWIGTYPE_p_itkStartEvent swig_types[57]
#define SWIGTYPE_p_itkStartPickEvent swig_types[58]
#define SWIGTYPE_p_itkUserEvent swig_types[59]
#define SWIGTYPE_p_itk__FixedArrayT_double_2_t swig_types[60]
#define SWIGTYPE_p_itk__ImageRegionT_2_t swig_types[61]
#define SWIGTYPE_p_itk__IndexT_2_t swig_types[62]
#define SWIGTYPE_p_itk__PointT_double_2_t swig_types[63]
#define SWIGTYPE_p_itk__SizeT_2_t swig_types[64]
#define SWIGTYPE_p_itk__VectorT_double_2_t swig_types[65]
#define SWIGTYPE_p_key_type swig_types[66]
#define SWIGTYPE_p_long swig_types[67]
#define SWIGTYPE_p_mapped_type swig_types[68]
#define SWIGTYPE_p_otb__GCP swig_types[69]
#define SWIGTYPE_p_otb__ImageMetadata swig_types[70]
#define SWIGTYPE_p_otb__ImageMetadataBase swig_types[71]
#define SWIGTYPE_p_otb__MetaData__LUT1D swig_types[72]
#define SWIGTYPE_p_otb__MetaData__LUT2D swig_types[73]
#define SWIGTYPE_p_otb__MetaData__LUTAxis swig_types[74]
#define SWIGTYPE_p_otb__MetaData__LUTT_1_t swig_types[75]
#define SWIGTYPE_p_otb__MetaData__LUTT_2_t swig_types[76]
#define SWIGTYPE_p_otb__MetaData__TimePoint swig_types[77]
#define SWIGTYPE_p_otb__SwigPrintCallback swig_types[78]
#define SWIGTYPE_p_otb__VectorDataKeywordlist swig_types[79]
#define SWIGTYPE_p_otb__Wrapper__ComplexImagePixelType swig_types[80]
#define SWIGTYPE_p_otb__Wrapper__ImagePixelType swig_types[81]
#define SWIGTYPE_p_otb__Wrapper__ParameterGroup swig_types[82]
#define SWIGTYPE_p_otb__Wrapper__ParameterType swig_types[83]
#define SWIGTYPE_p_otb__Wrapper__Role swig_types[84]
#define SWIGTYPE_p_otb__Wrapper__UserLevel swig_types[85]
#define SWIGTYPE_p_p_PyObject swig_types[86]
#define SWIGTYPE_p_p_double swig_types[87]
#define SWIGTYPE_p_p_float swig_types[88]
#define SWIGTYPE_p_p_int swig_types[89]
#define SWIGTYPE_p_p_short swig_types[90]
#define SWIGTYPE_p_p_std__complexT_double_t swig_types[91]
#define SWIGTYPE_p_p_std__complexT_float_t swig_types[92]
#define SWIGTYPE_p_p_unsigned_char swig_types[93]
#define SWIGTYPE_p_p_unsigned_int swig_types[94]
#define SWIGTYPE_p_p_unsigned_short swig_types[95]
#define SWIGTYPE_p_ptrdiff_t swig_types[96]
#define SWIGTYPE_p_size_t swig_types[97]
#define SWIGTYPE_p_size_type swig_types[98]
#define SWIGTYPE_p_std__allocatorT_bool_t swig_types[99]
#define SWIGTYPE_p_std__allocatorT_double_t swig_types[100]
#define SWIGTYPE_p_std__allocatorT_std__pairT_std__string_const_std__string_t_t swig_types[101]
#define SWIGTYPE_p_std__allocatorT_std__string_t swig_types[102]
#define SWIGTYPE_p_std__complexT_double_t swig_types[103]
#define SWIGTYPE_p_std__complexT_float_t swig_types[104]
#define SWIGTYPE_p_std__invalid_argument swig_types[105]
#define SWIGTYPE_p_std__lessT_std__string_t swig_types[106]
#define SWIGTYPE_p_std__listT_bool_t swig_types[107]
#define SWIGTYPE_p_std__listT_itkLightObject_Pointer_t swig_types[108]
#define SWIGTYPE_p_std__listT_itkObjectFactoryBase_p_t swig_types[109]
#define SWIGTYPE_p_std__listT_std__string_t swig_types[110]
#define SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t swig_types[111]
#define SWIGTYPE_p_std__ostream swig_types[112]
#define SWIGTYPE_p_std__type_info swig_types[113]
#define SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t swig_types[114]
#define SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t swig_types[115]
#define SWIGTYPE_p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t swig_types[116]
#define SWIGTYPE_p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t swig_types[117]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t swig_types[118]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[119]
#define SWIGTYPE_p_unsigned_int swig_types[120]
#define SWIGTYPE_p_unsigned_long swig_types[121]
#define SWIGTYPE_p_value_type swig_types[122]
static swig_type_info *swig_types[124];
static swig_module_info swig_module = {swig_types, 123, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _otbApplication.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__otbApplication

#else
#  define SWIG_init    init_otbApplication

#endif
#define SWIG_name    "_otbApplication"

#define SWIGVERSION 0x040001 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include "itkBase.includes"
#include "otbWrapperSWIGIncludes.h"
#include <string>         // std::string
#include <locale>
#define SWIG_FILE_WITH_INIT


#include <string>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <typeinfo>
#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <vector>


#include <utility>


#include <map>


#include <algorithm>


#include <complex> 


namespace swig {
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  /*
    Partial specialization for pointers (traits_info)
  */
  template <class Type> struct traits_info<Type *> {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers (traits)
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category>
  struct traits_as { };

  template <class Type, class Category>
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p = 0;
      swig_type_info *descriptor = type_info<Type>();
      int res = descriptor ? SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0) : SWIG_ERROR;
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj) {
    return traits_as<Type, typename traits<Type>::category>::as(obj);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size, i <= j
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if (j < 0) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
      if (jj < ii)
        jj = ii;
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1, i >= j
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
      if (ii < jj)
        ii = jj;
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence>
  inline void
  erase(Sequence* seq, const typename Sequence::iterator& position) {
    seq->erase(position);
  }

  template <class Sequence>
  struct traits_reserve {
    static void reserve(Sequence & /*seq*/, typename Sequence::size_type /*n*/) {
      // This should be specialized for types that support reserve
    }
  };

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        swig::traits_reserve<Sequence>::reserve(*sequence, (jj - ii + step - 1) / step);
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      swig::traits_reserve<Sequence>::reserve(*sequence, (ii - jj - step - 1) / -step);
      typename Sequence::const_reverse_iterator sb = self->rbegin();
      typename Sequence::const_reverse_iterator se = self->rbegin();
      std::advance(sb,size-ii-1);
      std::advance(se,size-jj-1);
      typename Sequence::const_reverse_iterator it = sb;
      while (it!=se) {
        sequence->push_back(*it);
        for (Py_ssize_t c=0; c<-step && it!=se; ++c)
          it++;
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          swig::traits_reserve<Sequence>::reserve(*self, self->size() - ssize + is.size());
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount && it != self->end(); ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount && it != self->rend(); ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      typename Sequence::iterator sb = self->begin();
      std::advance(sb,ii);
      if (step == 1) {
        typename Sequence::iterator se = self->begin();
        std::advance(se,jj);
        self->erase(sb,se);
      } else {
        typename Sequence::iterator it = sb;
        size_t delcount = (jj - ii + step - 1) / step;
        while (delcount) {
          it = self->erase(it);
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
          delcount--;
        }
      }
    } else {
      typename Sequence::reverse_iterator sb = self->rbegin();
      std::advance(sb,size-ii-1);
      typename Sequence::reverse_iterator it = sb;
      size_t delcount = (ii - jj - step - 1) / -step;
      while (delcount) {
        it = typename Sequence::reverse_iterator(self->erase((++it).base()));
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
        delcount--;
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyForwardIteratorOpen_T<OutIterator>(curr, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

  protected:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> base0;
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>(curr, first, last, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == base0::begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }
  };


  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorOpen_T<OutIter>(current, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item);
      } catch (const std::invalid_argument& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", (int)_index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    Py_ssize_t _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  // STL container wrapper around a Python sequence
  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;
    typedef size_t size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check() const
    {
      Py_ssize_t s = size();
      for (Py_ssize_t i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item))
	  return false;
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    int ret = SWIG_OK;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if (!obj)
      return SWIG_TypeError;
    if (alloc)
      *alloc = SWIG_NEWOBJ;
#endif
    PyBytes_AsStringAndSize(obj, &cstr, &len);
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
        if (!*cptr)
          ret = SWIG_TypeError;
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERN int
SWIG_AsVal_std_string (PyObject * obj, std::string *val)
{
  std::string* v = (std::string *) 0;
  int res = SWIG_AsPtr_std_string (obj, &v);
  if (!SWIG_IsOK(res)) return res;
  if (v) {
    if (val) *val = *v;
    if (SWIG_IsNewObj(res)) {
      delete v;
      res = SWIG_DelNewMask(res);
    }
    return res;
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


namespace swig {
  template <> struct traits< std::string > {
    typedef value_category category;
    static const char* type_name() { return"std::string"; }
  };
  template <>  struct traits_asval< std::string > {
    typedef std::string value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_std_string (obj, val);
    }
  };
  template <>  struct traits_from< std::string > {
    typedef std::string value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_std_string  (val);
    }
  };
}


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	swig_type_info *descriptor = swig::type_info<sequence>();
	if (descriptor && SWIG_IsOK(::SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0))) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_InternalNewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((Py_ssize_t)size);
	Py_ssize_t i = 0;
	for (const_iterator it = seq.begin(); it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_reserve<std::vector<T> > {
      static void reserve(std::vector<T> &seq, typename std::vector<T>::size_type n) {
        seq.reserve(n);
      }
    };

    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector< std::string, std::allocator< std::string > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::string" "," "std::allocator< std::string >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_std_string_Sg__iterator(std::vector< std::string > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_std_string_Sg____nonzero__(std::vector< std::string > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_std_string_Sg____bool__(std::vector< std::string > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< std::string >::size_type std_vector_Sl_std_string_Sg____len__(std::vector< std::string > const *self){
      return self->size();
    }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}

SWIGINTERN std::vector< std::string,std::allocator< std::string > > *std_vector_Sl_std_string_Sg____getslice__(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setslice____SWIG_0(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< std::string,std::allocator< std::string > >());
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setslice____SWIG_1(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::difference_type j,std::vector< std::string,std::allocator< std::string > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delslice__(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delitem____SWIG_0(std::vector< std::string > *self,std::vector< std::string >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< std::string,std::allocator< std::string > > *std_vector_Sl_std_string_Sg____getitem____SWIG_0(std::vector< std::string > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector< std::string,std::allocator< std::string > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setitem____SWIG_0(std::vector< std::string > *self,PySliceObject *slice,std::vector< std::string,std::allocator< std::string > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector< std::string,std::allocator< std::string > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setitem____SWIG_1(std::vector< std::string > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector< std::string,std::allocator< std::string > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delitem____SWIG_1(std::vector< std::string > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector< std::string,std::allocator< std::string > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< std::string >::value_type const &std_vector_Sl_std_string_Sg____getitem____SWIG_1(std::vector< std::string > const *self,std::vector< std::string >::difference_type i){
      return *(swig::cgetpos(self, i));
    }

namespace swig {
  static PyObject* container_owner_attribute() {
    static PyObject* attr = SWIG_Python_str_FromChar("__swig_container");
    return attr;
  }

  template <typename T>
  struct container_owner {
    // By default, do not add the back-reference (for value types)
    // Specialization below will check the reference for pointer types.
    static bool back_reference(PyObject* child, PyObject* owner) {
      return false;
    }
  };

  template <>
  struct container_owner<swig::pointer_category> {  
    /*
     * Call to add a back-reference to the owning object when returning a 
     * reference from a container.  Will only set the reference if child
     * is a SWIG wrapper object that does not own the pointer.
     *
     * returns whether the reference was set or not
     */
    static bool back_reference(PyObject* child, PyObject* owner) {
      SwigPyObject* swigThis = SWIG_Python_GetSwigThis(child);
      if (swigThis && (swigThis->own & SWIG_POINTER_OWN) != SWIG_POINTER_OWN) {
        PyObject_SetAttr(child, container_owner_attribute(), owner);
        return true;
      }
      return false;
    }
  };
}

SWIGINTERN void std_vector_Sl_std_string_Sg____setitem____SWIG_2(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< std::string >::value_type std_vector_Sl_std_string_Sg__pop(std::vector< std::string > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< std::string,std::allocator< std::string > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_std_string_Sg__append(std::vector< std::string > *self,std::vector< std::string >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< std::string >::iterator std_vector_Sl_std_string_Sg__erase__SWIG_0(std::vector< std::string > *self,std::vector< std::string >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< std::string >::iterator std_vector_Sl_std_string_Sg__erase__SWIG_1(std::vector< std::string > *self,std::vector< std::string >::iterator first,std::vector< std::string >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< std::string >::iterator std_vector_Sl_std_string_Sg__insert__SWIG_0(std::vector< std::string > *self,std::vector< std::string >::iterator pos,std::vector< std::string >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_std_string_Sg__insert__SWIG_1(std::vector< std::string > *self,std::vector< std::string >::iterator pos,std::vector< std::string >::size_type n,std::vector< std::string >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {


















































    template <class T, class U >
    struct traits_asptr<std::pair<T,U> >  {
      typedef std::pair<T,U> value_type;

      static int get_pair(PyObject* first, PyObject* second,
			  std::pair<T,U> **val) 
      {
	if (val) {
	  value_type *vp = (new std::pair<T,U>());
	  T *pfirst = &(vp->first);
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) {
	    delete vp;
	    return res1;
	  }
	  U *psecond = &(vp->second);
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) {
	    delete vp;
	    return res2;
	  }
	  *val = vp;
	  return SWIG_AddNewMask(res1 > res2 ? res1 : res2);
	} else {
	  T *pfirst = 0;
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) return res1;
	  U *psecond = 0;
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) return res2;
	  return res1 > res2 ? res1 : res2;
	}
      }

      static int asptr(PyObject *obj, std::pair<T,U> **val) {
	int res = SWIG_ERROR;
	if (PyTuple_Check(obj)) {
	  if (PyTuple_GET_SIZE(obj) == 2) {
	    res = get_pair(PyTuple_GET_ITEM(obj,0),PyTuple_GET_ITEM(obj,1), val);
	  }
	} else if (PySequence_Check(obj)) {
	  if (PySequence_Size(obj) == 2) {
	    swig::SwigVar_PyObject first = PySequence_GetItem(obj,0);
	    swig::SwigVar_PyObject second = PySequence_GetItem(obj,1);
	    res = get_pair(first, second, val);
	  }
	} else {
	  value_type *p;
	  swig_type_info *descriptor = swig::type_info<value_type>();
	  res = descriptor ? SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0) : SWIG_ERROR;
	  if (SWIG_IsOK(res) && val)  *val = p;
	}
	return res;
      }
    };


    template <class T, class U >
    struct traits_from<std::pair<T,U> >   {
      static PyObject *from(const std::pair<T,U>& val) {
	PyObject* obj = PyTuple_New(2);
	PyTuple_SetItem(obj,0,swig::from(val.first));
	PyTuple_SetItem(obj,1,swig::from(val.second));
	return obj;
      }
    };
  }





































      namespace swig {
	template <>  struct traits<std::pair< std::string, std::string > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::pair<" "std::string" "," "std::string" " >";
	  }
	};
      }
    

  namespace swig {
    template <class ValueType>
    struct from_key_oper 
    {
      typedef const ValueType& argument_type;
      typedef  PyObject *result_type;
      result_type operator()(argument_type v) const
      {
	return swig::from(v.first);
      }
    };

    template <class ValueType>
    struct from_value_oper 
    {
      typedef const ValueType& argument_type;
      typedef  PyObject *result_type;
      result_type operator()(argument_type v) const
      {
	return swig::from(v.second);
      }
    };

    template<class OutIterator, class FromOper, class ValueType = typename OutIterator::value_type>
    struct SwigPyMapIterator_T : SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper>
    {
      SwigPyMapIterator_T(OutIterator curr, OutIterator first, OutIterator last, PyObject *seq)
	: SwigPyIteratorClosed_T<OutIterator,ValueType,FromOper>(curr, first, last, seq)
      {
      }
    };


    template<class OutIterator,
	     class FromOper = from_key_oper<typename OutIterator::value_type> >
    struct SwigPyMapKeyIterator_T : SwigPyMapIterator_T<OutIterator, FromOper>
    {
      SwigPyMapKeyIterator_T(OutIterator curr, OutIterator first, OutIterator last, PyObject *seq)
	: SwigPyMapIterator_T<OutIterator, FromOper>(curr, first, last, seq)
      {
      }
    };

    template<typename OutIter>
    inline SwigPyIterator*
    make_output_key_iterator(const OutIter& current, const OutIter& begin, const OutIter& end, PyObject *seq = 0)
    {
      return new SwigPyMapKeyIterator_T<OutIter>(current, begin, end, seq);
    }

    template<class OutIterator,
	     class FromOper = from_value_oper<typename OutIterator::value_type> >
    struct SwigPyMapValueIterator_T : SwigPyMapIterator_T<OutIterator, FromOper>
    {
      SwigPyMapValueIterator_T(OutIterator curr, OutIterator first, OutIterator last, PyObject *seq)
	: SwigPyMapIterator_T<OutIterator, FromOper>(curr, first, last, seq)
      {
      }
    };
    

    template<typename OutIter>
    inline SwigPyIterator*
    make_output_value_iterator(const OutIter& current, const OutIter& begin, const OutIter& end, PyObject *seq = 0)
    {
      return new SwigPyMapValueIterator_T<OutIter>(current, begin, end, seq);
    }
  }


  namespace swig {
    template <class SwigPySeq, class K, class T, class Compare, class Alloc >
    inline void
    assign(const SwigPySeq& swigpyseq, std::map<K,T,Compare,Alloc > *map) {
      typedef typename std::map<K,T,Compare,Alloc >::value_type value_type;
      typename SwigPySeq::const_iterator it = swigpyseq.begin();
      for (;it != swigpyseq.end(); ++it) {
	map->insert(value_type(it->first, it->second));
      }
    }

    template <class K, class T, class Compare, class Alloc>
    struct traits_asptr<std::map<K,T,Compare,Alloc > >  {
      typedef std::map<K,T,Compare,Alloc > map_type;
      static int asptr(PyObject *obj, map_type **val) {
	int res = SWIG_ERROR;
	SWIG_PYTHON_THREAD_BEGIN_BLOCK;
	if (PyDict_Check(obj)) {
	  SwigVar_PyObject items = PyObject_CallMethod(obj,(char *)"items",NULL);
#if PY_VERSION_HEX >= 0x03000000
          /* In Python 3.x the ".items()" method returns a dict_items object */
          items = PySequence_Fast(items, ".items() didn't return a sequence!");
#endif
	  res = traits_asptr_stdseq<map_type, std::pair<K, T> >::asptr(items, val);
	} else {
	  map_type *p;
	  swig_type_info *descriptor = swig::type_info<map_type>();
	  res = descriptor ? SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0) : SWIG_ERROR;
	  if (SWIG_IsOK(res) && val)  *val = p;
	}
	SWIG_PYTHON_THREAD_END_BLOCK;
	return res;
      }      
    };
      
    template <class K, class T, class Compare, class Alloc >
    struct traits_from<std::map<K,T,Compare,Alloc > >  {
      typedef std::map<K,T,Compare,Alloc > map_type;
      typedef typename map_type::const_iterator const_iterator;
      typedef typename map_type::size_type size_type;

      static PyObject *asdict(const map_type& map) {
	SWIG_PYTHON_THREAD_BEGIN_BLOCK;
	size_type size = map.size();
	Py_ssize_t pysize = (size <= (size_type) INT_MAX) ? (Py_ssize_t) size : -1;
	if (pysize < 0) {
	  PyErr_SetString(PyExc_OverflowError, "map size not valid in python");
	  SWIG_PYTHON_THREAD_END_BLOCK;
	  return NULL;
	}
	PyObject *obj = PyDict_New();
	for (const_iterator i= map.begin(); i!= map.end(); ++i) {
	  swig::SwigVar_PyObject key = swig::from(i->first);
	  swig::SwigVar_PyObject val = swig::from(i->second);
	  PyDict_SetItem(obj, key, val);
	}
	SWIG_PYTHON_THREAD_END_BLOCK;
	return obj;
      }
                
      static PyObject *from(const map_type& map) {
	swig_type_info *desc = swig::type_info<map_type>();
	if (desc && desc->clientdata) {
	  return SWIG_InternalNewPointerObj(new map_type(map), desc, SWIG_POINTER_OWN);
	} else {
	  return asdict(map);
	}
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::map< std::string, std::string, std::less< std::string >, std::allocator< std::pair< std::string const,std::string > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::map<" "std::string" "," "std::string" "," "std::less< std::string >" "," "std::allocator< std::pair< std::string const,std::string > >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_map_Sl_std_string_Sc_std_string_Sg__iterator(std::map< std::string,std::string > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_string_Sg____nonzero__(std::map< std::string,std::string > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_string_Sg____bool__(std::map< std::string,std::string > const *self){
      return !(self->empty());
    }
SWIGINTERN std::map< std::string,std::string >::size_type std_map_Sl_std_string_Sc_std_string_Sg____len__(std::map< std::string,std::string > const *self){
      return self->size();
    }
SWIGINTERN std::map< std::string,std::string >::mapped_type const &std_map_Sl_std_string_Sc_std_string_Sg____getitem__(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key){
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::const_iterator i = self->find(key);
      if (i != self->end())
	return i->second;
      else
	throw std::out_of_range("key not found");
    }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg____delitem__(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key){
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::iterator i = self->find(key);
      if (i != self->end())
	self->erase(i);
      else
	throw std::out_of_range("key not found");
    }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_string_Sg__has_key(std::map< std::string,std::string > const *self,std::map< std::string,std::string >::key_type const &key){
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::const_iterator i = self->find(key);
      return i != self->end();
    }
SWIGINTERN PyObject *std_map_Sl_std_string_Sc_std_string_Sg__keys(std::map< std::string,std::string > *self){
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::size_type size = self->size();
      Py_ssize_t pysize = (size <= (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::size_type) INT_MAX) ? (Py_ssize_t) size : -1;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (pysize < 0) {
	PyErr_SetString(PyExc_OverflowError, "map size not valid in python");
	SWIG_PYTHON_THREAD_END_BLOCK;
	return NULL;
      }
      PyObject* keyList = PyList_New(pysize);
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::const_iterator i = self->begin();
      for (Py_ssize_t j = 0; j < pysize; ++i, ++j) {
	PyList_SET_ITEM(keyList, j, swig::from(i->first));
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return keyList;
    }
SWIGINTERN PyObject *std_map_Sl_std_string_Sc_std_string_Sg__values(std::map< std::string,std::string > *self){
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::size_type size = self->size();
      Py_ssize_t pysize = (size <= (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::size_type) INT_MAX) ? (Py_ssize_t) size : -1;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (pysize < 0) {
	PyErr_SetString(PyExc_OverflowError, "map size not valid in python");
	SWIG_PYTHON_THREAD_END_BLOCK;
	return NULL;
      }
      PyObject* valList = PyList_New(pysize);
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::const_iterator i = self->begin();
      for (Py_ssize_t j = 0; j < pysize; ++i, ++j) {
	PyList_SET_ITEM(valList, j, swig::from(i->second));
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return valList;
    }
SWIGINTERN PyObject *std_map_Sl_std_string_Sc_std_string_Sg__items(std::map< std::string,std::string > *self){
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::size_type size = self->size();
      Py_ssize_t pysize = (size <= (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::size_type) INT_MAX) ? (Py_ssize_t) size : -1;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (pysize < 0) {
	PyErr_SetString(PyExc_OverflowError, "map size not valid in python");
	SWIG_PYTHON_THREAD_END_BLOCK;
	return NULL;
      }    
      PyObject* itemList = PyList_New(pysize);
      std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >::const_iterator i = self->begin();
      for (Py_ssize_t j = 0; j < pysize; ++i, ++j) {
	PyList_SET_ITEM(itemList, j, swig::from(*i));
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return itemList;
    }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_string_Sg____contains__(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key){
      return self->find(key) != self->end();
    }
SWIGINTERN swig::SwigPyIterator *std_map_Sl_std_string_Sc_std_string_Sg__key_iterator(std::map< std::string,std::string > *self,PyObject **PYTHON_SELF){
      return swig::make_output_key_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN swig::SwigPyIterator *std_map_Sl_std_string_Sc_std_string_Sg__value_iterator(std::map< std::string,std::string > *self,PyObject **PYTHON_SELF){
      return swig::make_output_value_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg____setitem____SWIG_0(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key){
      self->erase(key);
    }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg____setitem____SWIG_1(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key,std::map< std::string,std::string >::mapped_type const &x){
      (*self)[key] = x;
    }
SWIGINTERN PyObject *std_map_Sl_std_string_Sc_std_string_Sg__asdict(std::map< std::string,std::string > *self){
      return swig::traits_from< std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > >::asdict(*self);
    }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg__erase__SWIG_1(std::map< std::string,std::string > *self,std::map< std::string,std::string >::iterator position){ self->erase(position); }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg__erase__SWIG_2(std::map< std::string,std::string > *self,std::map< std::string,std::string >::iterator first,std::map< std::string,std::string >::iterator last){ self->erase(first, last); }

SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


namespace swig {
  template <> struct traits< bool > {
    typedef value_category category;
    static const char* type_name() { return"bool"; }
  };
  template <>  struct traits_asval< bool > {
    typedef bool value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_bool (obj, val);
    }
  };
  template <>  struct traits_from< bool > {
    typedef bool value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_bool  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector<bool, std::allocator< bool > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<bool, std::allocator< bool > >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_bool_Sg__iterator(std::vector< bool > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_bool_Sg____nonzero__(std::vector< bool > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_bool_Sg____bool__(std::vector< bool > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< bool >::size_type std_vector_Sl_bool_Sg____len__(std::vector< bool > const *self){
      return self->size();
    }
SWIGINTERN std::vector< bool,std::allocator< bool > > *std_vector_Sl_bool_Sg____getslice__(std::vector< bool > *self,std::vector< bool >::difference_type i,std::vector< bool >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_bool_Sg____setslice____SWIG_0(std::vector< bool > *self,std::vector< bool >::difference_type i,std::vector< bool >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector<bool,std::allocator< bool > >());
    }
SWIGINTERN void std_vector_Sl_bool_Sg____setslice____SWIG_1(std::vector< bool > *self,std::vector< bool >::difference_type i,std::vector< bool >::difference_type j,std::vector< bool,std::allocator< bool > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_bool_Sg____delslice__(std::vector< bool > *self,std::vector< bool >::difference_type i,std::vector< bool >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_bool_Sg____delitem____SWIG_0(std::vector< bool > *self,std::vector< bool >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< bool,std::allocator< bool > > *std_vector_Sl_bool_Sg____getitem____SWIG_0(std::vector< bool > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<bool,std::allocator< bool > >::difference_type id = i;
      std::vector<bool,std::allocator< bool > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_bool_Sg____setitem____SWIG_0(std::vector< bool > *self,PySliceObject *slice,std::vector< bool,std::allocator< bool > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<bool,std::allocator< bool > >::difference_type id = i;
      std::vector<bool,std::allocator< bool > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_bool_Sg____setitem____SWIG_1(std::vector< bool > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<bool,std::allocator< bool > >::difference_type id = i;
      std::vector<bool,std::allocator< bool > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_bool_Sg____delitem____SWIG_1(std::vector< bool > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<bool,std::allocator< bool > >::difference_type id = i;
      std::vector<bool,std::allocator< bool > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< bool >::value_type std_vector_Sl_bool_Sg____getitem____SWIG_1(std::vector< bool > *self,std::vector< bool >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_bool_Sg____setitem____SWIG_2(std::vector< bool > *self,std::vector< bool >::difference_type i,std::vector< bool >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< bool >::value_type std_vector_Sl_bool_Sg__pop(std::vector< bool > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<bool,std::allocator< bool > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_bool_Sg__append(std::vector< bool > *self,std::vector< bool >::value_type x){
      self->push_back(x);
    }
SWIGINTERN std::vector< bool >::iterator std_vector_Sl_bool_Sg__erase__SWIG_0(std::vector< bool > *self,std::vector< bool >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< bool >::iterator std_vector_Sl_bool_Sg__erase__SWIG_1(std::vector< bool > *self,std::vector< bool >::iterator first,std::vector< bool >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< bool >::iterator std_vector_Sl_bool_Sg__insert__SWIG_0(std::vector< bool > *self,std::vector< bool >::iterator pos,std::vector< bool >::value_type x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_bool_Sg__insert__SWIG_1(std::vector< bool > *self,std::vector< bool >::iterator pos,std::vector< bool >::size_type n,std::vector< bool >::value_type x){ self->insert(pos, n, x); }

  #define SWIG_From_double   PyFloat_FromDouble 


namespace swig {
  template <> struct traits< double > {
    typedef value_category category;
    static const char* type_name() { return"double"; }
  };
  template <>  struct traits_asval< double > {
    typedef double value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_double (obj, val);
    }
  };
  template <>  struct traits_from< double > {
    typedef double value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_double  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector< double, std::allocator< double > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "double" "," "std::allocator< double >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_double_Sg__iterator(std::vector< double > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_double_Sg____nonzero__(std::vector< double > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_double_Sg____bool__(std::vector< double > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< double >::size_type std_vector_Sl_double_Sg____len__(std::vector< double > const *self){
      return self->size();
    }
SWIGINTERN std::vector< double,std::allocator< double > > *std_vector_Sl_double_Sg____getslice__(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_double_Sg____setslice____SWIG_0(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< double,std::allocator< double > >());
    }
SWIGINTERN void std_vector_Sl_double_Sg____setslice____SWIG_1(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j,std::vector< double,std::allocator< double > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_double_Sg____delslice__(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_double_Sg____delitem____SWIG_0(std::vector< double > *self,std::vector< double >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< double,std::allocator< double > > *std_vector_Sl_double_Sg____getitem____SWIG_0(std::vector< double > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_double_Sg____setitem____SWIG_0(std::vector< double > *self,PySliceObject *slice,std::vector< double,std::allocator< double > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_double_Sg____setitem____SWIG_1(std::vector< double > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_double_Sg____delitem____SWIG_1(std::vector< double > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< double >::value_type const &std_vector_Sl_double_Sg____getitem____SWIG_1(std::vector< double > const *self,std::vector< double >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_double_Sg____setitem____SWIG_2(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< double >::value_type std_vector_Sl_double_Sg__pop(std::vector< double > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< double,std::allocator< double > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_double_Sg__append(std::vector< double > *self,std::vector< double >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< double >::iterator std_vector_Sl_double_Sg__erase__SWIG_0(std::vector< double > *self,std::vector< double >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< double >::iterator std_vector_Sl_double_Sg__erase__SWIG_1(std::vector< double > *self,std::vector< double >::iterator first,std::vector< double >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< double >::iterator std_vector_Sl_double_Sg__insert__SWIG_0(std::vector< double > *self,std::vector< double >::iterator pos,std::vector< double >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_double_Sg__insert__SWIG_1(std::vector< double > *self,std::vector< double >::iterator pos,std::vector< double >::size_type n,std::vector< double >::value_type const &x){ self->insert(pos, n, x); }

SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}

SWIGINTERN std::string itkLightObject_ToString(itkLightObject *self){
      std::ostringstream o;
      self->Print(o);
      return o.str();
    }
SWIGINTERN void delete_itkLightObject(itkLightObject *self){
      self->UnRegister();
    }
SWIGINTERN void delete_itkObject(itkObject *self){
      self->UnRegister();
    }
SWIGINTERN void delete_itkProcessObject(itkProcessObject *self){
      self->UnRegister();
    }



SWIGINTERN void delete_itkObjectFactoryBase(itkObjectFactoryBase *self){
      self->UnRegister();
    }
SWIGINTERN void delete_itkMetaDataObjectBase(itkMetaDataObjectBase *self){
      self->UnRegister();
    }
SWIGINTERN int itkMetaDataDictionary_GetType(itkMetaDataDictionary *self,std::string const &key){
    return (int) otb::Wrapper::MetaDataHelper::GetType(key);
    }

SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}

SWIGINTERN std::string itkMetaDataDictionary_GetString(itkMetaDataDictionary *self,std::string const &key){
    return otb::Wrapper::MetaDataHelper::GetString(* self,key);
    }
SWIGINTERN void itkMetaDataDictionary_SetString(itkMetaDataDictionary *self,std::string const &key,std::string const &val){
    otb::Wrapper::MetaDataHelper::SetString(* self,key,val);
    }
SWIGINTERN unsigned int itkMetaDataDictionary_GetInt(itkMetaDataDictionary *self,std::string const &key){
    return otb::Wrapper::MetaDataHelper::GetInt(* self,key);
    }
SWIGINTERN void itkMetaDataDictionary_SetInt(itkMetaDataDictionary *self,std::string const &key,unsigned int val){
    otb::Wrapper::MetaDataHelper::SetInt(* self,key,val);
    }
SWIGINTERN double itkMetaDataDictionary_GetDouble(itkMetaDataDictionary *self,std::string const &key){
    return otb::Wrapper::MetaDataHelper::GetDouble(* self,key);
    }
SWIGINTERN void itkMetaDataDictionary_SetDouble(itkMetaDataDictionary *self,std::string const &key,double val){
    otb::Wrapper::MetaDataHelper::SetDouble(* self,key,val);
    }
SWIGINTERN otb::GCP itkMetaDataDictionary_GetGCP(itkMetaDataDictionary *self,std::string const &key){
    return otb::Wrapper::MetaDataHelper::GetGCP(* self,key);
    }
SWIGINTERN void itkMetaDataDictionary_SetGCP(itkMetaDataDictionary *self,std::string const &key,otb::GCP const &val){
    otb::Wrapper::MetaDataHelper::SetGCP(* self,key,val);
    }
SWIGINTERN std::vector< double,std::allocator< double > > itkMetaDataDictionary_GetVector(itkMetaDataDictionary *self,std::string const &key){
    return otb::Wrapper::MetaDataHelper::GetVector(* self,key);
    }
SWIGINTERN void itkMetaDataDictionary_SetVector(itkMetaDataDictionary *self,std::string const &key,std::vector< double,std::allocator< double > > const &val){
    otb::Wrapper::MetaDataHelper::SetVector(* self,key,val);
    }
SWIGINTERN otb::VectorDataKeywordlist itkMetaDataDictionary_GetVectorDataKWL(itkMetaDataDictionary *self,std::string const &key){
    return otb::Wrapper::MetaDataHelper::GetVectorDataKWL(* self,key);
    }
SWIGINTERN void itkMetaDataDictionary_SetVectorDataKWL(itkMetaDataDictionary *self,std::string const &key,otb::VectorDataKeywordlist const &val){
    otb::Wrapper::MetaDataHelper::SetVectorDataKWL(* self,key,val);
    }
SWIGINTERN std::vector< bool,std::allocator< bool > > itkMetaDataDictionary_GetBoolVector(itkMetaDataDictionary *self,std::string const &key){
    return otb::Wrapper::MetaDataHelper::GetBoolVector(* self,key);
    }
SWIGINTERN void itkMetaDataDictionary_SetBoolVector(itkMetaDataDictionary *self,std::string const &key,std::vector< bool,std::allocator< bool > > const &val){
    otb::Wrapper::MetaDataHelper::SetBoolVector(* self,key,val);
    }
SWIGINTERN void delete_itkCommand(itkCommand *self){
      self->UnRegister();
    }

#include "itkBase.includes"
#include "otbWrapperSWIGIncludes.h"
#include <string>
#include <sstream>
#include <locale>
#include "otbMetaDataKey.h"
#include "otbImageMetadata.h"
#define SWIG_FILE_WITH_INIT

SWIGINTERN std::string otb_MetaData_TimePoint___repr__(otb::MetaData::TimePoint *self){
    std::ostringstream oss;
    oss << *self;
    return oss.str();
  }
SWIGINTERN bool otb_ImageMetadataBase_is_num(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDNumNames.right.find(key);
    return it != otb::MetaData::MDNumNames.right.end();
  }
SWIGINTERN double otb_ImageMetadataBase_get_num(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDNumNames.right.find(key);
    return self->operator[](it->second);
  }
SWIGINTERN bool otb_ImageMetadataBase_is_str(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDStrNames.right.find(key);
    return it != otb::MetaData::MDStrNames.right.end();
  }
SWIGINTERN std::string otb_ImageMetadataBase_get_str(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDStrNames.right.find(key);
    return self->operator[](it->second);
  }
SWIGINTERN bool otb_ImageMetadataBase_is_l1d(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDL1DNames.right.find(key);
    return it != otb::MetaData::MDL1DNames.right.end();
  }
SWIGINTERN otb::MetaData::LUT1D otb_ImageMetadataBase_get_l1d(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDL1DNames.right.find(key);
    return self->operator[](it->second);
  }
SWIGINTERN bool otb_ImageMetadataBase_is_l2d(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDL2DNames.right.find(key);
    return it != otb::MetaData::MDL2DNames.right.end();
  }
SWIGINTERN otb::MetaData::LUT2D otb_ImageMetadataBase_get_l2d(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDL2DNames.right.find(key);
    return self->operator[](it->second);
  }
SWIGINTERN bool otb_ImageMetadataBase_is_time(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDTimeNames.right.find(key);
    return it != otb::MetaData::MDTimeNames.right.end();
  }
SWIGINTERN otb::MetaData::TimePoint otb_ImageMetadataBase_get_time(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDTimeNames.right.find(key);
    return self->operator[](it->second);
  }
SWIGINTERN bool otb_ImageMetadataBase_is_geom(otb::ImageMetadataBase *self,std::string const &key){
    auto it = otb::MetaData::MDGeomNames.right.find(key);
    return it != otb::MetaData::MDGeomNames.right.end();
  }
SWIGINTERN bool otb_ImageMetadataBase_is_extra(otb::ImageMetadataBase *self,std::string const &key){
    return self->Has(key);
  }
SWIGINTERN std::string otb_ImageMetadataBase_get_extra(otb::ImageMetadataBase *self,std::string const &key){
    return self->operator[](key);
  }
SWIGINTERN bool otb_ImageMetadataBase_has(otb::ImageMetadataBase const *self,std::string const &key){
    auto it_num = otb::MetaData::MDNumNames.right.find(key);
    if (it_num != otb::MetaData::MDNumNames.right.end())
      return self->Has(it_num->second);

    auto it_str = otb::MetaData::MDStrNames.right.find(key);
    if (it_str != otb::MetaData::MDStrNames.right.end())
      return self->Has(it_str->second);

    auto it_l1d = otb::MetaData::MDL1DNames.right.find(key);
    if (it_l1d != otb::MetaData::MDL1DNames.right.end())
      return self->Has(it_l1d->second);

    auto it_l2d = otb::MetaData::MDL2DNames.right.find(key);
    if (it_l2d != otb::MetaData::MDL2DNames.right.end())
      return self->Has(it_l2d->second);

    auto it_time = otb::MetaData::MDTimeNames.right.find(key);
    if (it_time != otb::MetaData::MDTimeNames.right.end())
      return self->Has(it_time->second);

    auto it_geom = otb::MetaData::MDGeomNames.right.find(key);
    if (it_geom != otb::MetaData::MDGeomNames.right.end())
      return self->Has(it_geom->second);

    return self->Has(key);
  }
SWIGINTERN void otb_ImageMetadataBase___setitem____SWIG_0(otb::ImageMetadataBase *self,std::string const &key,double const val){
    auto it = otb::MetaData::MDNumNames.right.find(key);
    if (it != otb::MetaData::MDNumNames.right.end())
      self->Add(it->second, val);
    else
      self->Add(key, std::to_string(val));
  }
SWIGINTERN void otb_ImageMetadataBase___setitem____SWIG_1(otb::ImageMetadataBase *self,std::string const &key,std::string const &val){
    auto it = otb::MetaData::MDStrNames.right.find(key);
    if (it != otb::MetaData::MDStrNames.right.end())
      self->Add(it->second, val);
    else
    {
      auto it2 = otb::MetaData::MDGeomNames.right.find(key);
      if (it2 != otb::MetaData::MDGeomNames.right.end())
        self->Add(it2->second, val);
      else
        self->Add(key, val);
    }
  }
SWIGINTERN void otb_ImageMetadataBase___setitem____SWIG_2(otb::ImageMetadataBase *self,std::string const &key,otb::MetaData::LUT1D const &val){
    auto it = otb::MetaData::MDL1DNames.right.find(key);
    if (it != otb::MetaData::MDL1DNames.right.end())
      self->Add(it->second, val);
    else
      self->Add(key, val.ToString());
  }
SWIGINTERN void otb_ImageMetadataBase___setitem____SWIG_3(otb::ImageMetadataBase *self,std::string const &key,otb::MetaData::LUT2D const &val){
    auto it = otb::MetaData::MDL2DNames.right.find(key);
    if (it != otb::MetaData::MDL2DNames.right.end())
      self->Add(it->second, val);
    else
      self->Add(key, val.ToString());
  }
SWIGINTERN void otb_ImageMetadataBase___setitem____SWIG_4(otb::ImageMetadataBase *self,std::string const &key,otb::MetaData::TimePoint const &val){
    auto it = otb::MetaData::MDTimeNames.right.find(key);
    if (it != otb::MetaData::MDTimeNames.right.end())
      self->Add(it->second, val);
    else
    {
      std::ostringstream timeStream;
      timeStream << val;
      self->Add(key, timeStream.str());
    }
  }
SWIGINTERN void otb_ImageMetadataBase___setitem____SWIG_5(otb::ImageMetadataBase *self,std::string const &key,boost::any const val){
    auto it = otb::MetaData::MDGeomNames.right.find(key);
    if (it != otb::MetaData::MDGeomNames.right.end())
      self->Add(it->second, val);
    else
      throw std::runtime_error("[" + key + "] is not a valid geometric key");
  }

#ifndef SWIG_FILE_WITH_INIT
#define NO_IMPORT_ARRAY
#endif
#include "stdio.h"
#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION
#include <numpy/arrayobject.h>


   #include "otbPythonLogOutput.h"
   #include "otbSwigPrintCallback.h"

SWIGINTERN void delete_PythonLogOutput(PythonLogOutput *self){
      self->UnRegister();
    }
SWIGINTERN void delete_ProgressReporterManager(ProgressReporterManager *self){
      self->UnRegister();
    }

/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(__cplusplus) && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 2))
#  define SWIG_isfinite(X) (__builtin_isfinite(X))
# elif defined(__clang__) && defined(__has_builtin)
#  if __has_builtin(__builtin_isfinite)
#   define SWIG_isfinite(X) (__builtin_isfinite(X))
#  endif
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


#if NPY_API_VERSION < 0x00000007
#define NPY_ARRAY_DEFAULT NPY_DEFAULT
#define NPY_ARRAY_FARRAY  NPY_FARRAY
#define NPY_FORTRANORDER  NPY_FORTRAN
#endif


/* Macros to extract array attributes.
 */
#if NPY_API_VERSION < 0x00000007
#define is_array(a)            ((a) && PyArray_Check((PyArrayObject*)a))
#define array_type(a)          (int)(PyArray_TYPE((PyArrayObject*)a))
#define array_numdims(a)       (((PyArrayObject*)a)->nd)
#define array_dimensions(a)    (((PyArrayObject*)a)->dimensions)
#define array_size(a,i)        (((PyArrayObject*)a)->dimensions[i])
#define array_strides(a)       (((PyArrayObject*)a)->strides)
#define array_stride(a,i)      (((PyArrayObject*)a)->strides[i])
#define array_data(a)          (((PyArrayObject*)a)->data)
#define array_descr(a)         (((PyArrayObject*)a)->descr)
#define array_flags(a)         (((PyArrayObject*)a)->flags)
#define array_enableflags(a,f) (((PyArrayObject*)a)->flags) = f
#else
#define is_array(a)            ((a) && PyArray_Check(a))
#define array_type(a)          PyArray_TYPE((PyArrayObject*)a)
#define array_numdims(a)       PyArray_NDIM((PyArrayObject*)a)
#define array_dimensions(a)    PyArray_DIMS((PyArrayObject*)a)
#define array_strides(a)       PyArray_STRIDES((PyArrayObject*)a)
#define array_stride(a,i)      PyArray_STRIDE((PyArrayObject*)a,i)
#define array_size(a,i)        PyArray_DIM((PyArrayObject*)a,i)
#define array_data(a)          PyArray_DATA((PyArrayObject*)a)
#define array_descr(a)         PyArray_DESCR((PyArrayObject*)a)
#define array_flags(a)         PyArray_FLAGS((PyArrayObject*)a)
#define array_enableflags(a,f) PyArray_ENABLEFLAGS((PyArrayObject*)a,f)
#endif
#define array_is_contiguous(a) (PyArray_ISCONTIGUOUS((PyArrayObject*)a))
#define array_is_native(a)     (PyArray_ISNOTSWAPPED((PyArrayObject*)a))
#define array_is_fortran(a)    (PyArray_ISFORTRAN((PyArrayObject*)a))


  /* Given a PyObject, return a string describing its type.
   */
  const char* pytype_string(PyObject* py_obj)
  {
    if (py_obj == NULL          ) return "C NULL value";
    if (py_obj == Py_None       ) return "Python None" ;
    if (PyCallable_Check(py_obj)) return "callable"    ;
    if (PyString_Check(  py_obj)) return "string"      ;
    if (PyInt_Check(     py_obj)) return "int"         ;
    if (PyFloat_Check(   py_obj)) return "float"       ;
    if (PyDict_Check(    py_obj)) return "dict"        ;
    if (PyList_Check(    py_obj)) return "list"        ;
    if (PyTuple_Check(   py_obj)) return "tuple"       ;
#if PY_MAJOR_VERSION < 3
    if (PyFile_Check(    py_obj)) return "file"        ;
    if (PyModule_Check(  py_obj)) return "module"      ;
    if (PyInstance_Check(py_obj)) return "instance"    ;
#endif

    return "unknown type";
  }

  /* Given a NumPy typecode, return a string describing the type.
   */
  const char* typecode_string(int typecode)
  {
    static const char* type_names[25] = {"bool",
                                         "byte",
                                         "unsigned byte",
                                         "short",
                                         "unsigned short",
                                         "int",
                                         "unsigned int",
                                         "long",
                                         "unsigned long",
                                         "long long",
                                         "unsigned long long",
                                         "float",
                                         "double",
                                         "long double",
                                         "complex float",
                                         "complex double",
                                         "complex long double",
                                         "object",
                                         "string",
                                         "unicode",
                                         "void",
                                         "ntypes",
                                         "notype",
                                         "char",
                                         "unknown"};
    return typecode < 24 ? type_names[typecode] : type_names[24];
  }

  /* Make sure input has correct numpy type.  This now just calls
     PyArray_EquivTypenums().
   */
  int type_match(int actual_type,
                 int desired_type)
  {
    return PyArray_EquivTypenums(actual_type, desired_type);
  }

#ifdef SWIGPY_USE_CAPSULE
  void free_cap(PyObject * cap)
  {
    void* array = (void*) PyCapsule_GetPointer(cap,SWIGPY_CAPSULE_NAME);
    if (array != NULL) free(array);
  }
#endif




  /* Given a PyObject pointer, cast it to a PyArrayObject pointer if
   * legal.  If not, set the python error string appropriately and
   * return NULL.
   */
  PyArrayObject* obj_to_array_no_conversion(PyObject* input,
                                            int        typecode)
  {
    PyArrayObject* ary = NULL;
    if (is_array(input) && (typecode == NPY_NOTYPE ||
                            PyArray_EquivTypenums(array_type(input), typecode)))
    {
      ary = (PyArrayObject*) input;
    }
    else if is_array(input)
    {
      const char* desired_type = typecode_string(typecode);
      const char* actual_type  = typecode_string(array_type(input));
      PyErr_Format(PyExc_TypeError,
                   "Array of type '%s' required.  Array of type '%s' given",
                   desired_type, actual_type);
      ary = NULL;
    }
    else
    {
      const char* desired_type = typecode_string(typecode);
      const char* actual_type  = pytype_string(input);
      PyErr_Format(PyExc_TypeError,
                   "Array of type '%s' required.  A '%s' was given",
                   desired_type,
                   actual_type);
      ary = NULL;
    }
    return ary;
  }

  /* Convert the given PyObject to a NumPy array with the given
   * typecode.  On success, return a valid PyArrayObject* with the
   * correct type.  On failure, the python error string will be set and
   * the routine returns NULL.
   */
  PyArrayObject* obj_to_array_allow_conversion(PyObject* input,
                                               int       typecode,
                                               int*      is_new_object)
  {
    PyArrayObject* ary = NULL;
    PyObject*      py_obj;
    if (is_array(input) && (typecode == NPY_NOTYPE ||
                            PyArray_EquivTypenums(array_type(input),typecode)))
    {
      ary = (PyArrayObject*) input;
      *is_new_object = 0;
    }
    else
    {
      py_obj = PyArray_FROMANY(input, typecode, 0, 0, NPY_ARRAY_DEFAULT);
      /* If NULL, PyArray_FromObject will have set python error value.*/
      ary = (PyArrayObject*) py_obj;
      *is_new_object = 1;
    }
    return ary;
  }

  /* Given a PyArrayObject, check to see if it is contiguous.  If so,
   * return the input pointer and flag it as not a new object.  If it is
   * not contiguous, create a new PyArrayObject using the original data,
   * flag it as a new object and return the pointer.
   */
  PyArrayObject* make_contiguous(PyArrayObject* ary,
                                 int*           is_new_object,
                                 int            min_dims,
                                 int            max_dims)
  {
    PyArrayObject* result;
    if (array_is_contiguous(ary))
    {
      result = ary;
      *is_new_object = 0;
    }
    else
    {
      result = (PyArrayObject*) PyArray_ContiguousFromObject((PyObject*)ary,
                                                              array_type(ary),
                                                              min_dims,
                                                              max_dims);
      *is_new_object = 1;
    }
    return result;
  }

  /* Given a PyArrayObject, check to see if it is Fortran-contiguous.
   * If so, return the input pointer, but do not flag it as not a new
   * object.  If it is not Fortran-contiguous, create a new
   * PyArrayObject using the original data, flag it as a new object
   * and return the pointer.
   */
  PyArrayObject* make_fortran(PyArrayObject* ary,
                              int*           is_new_object)
  {
    PyArrayObject* result;
    if (array_is_fortran(ary))
    {
      result = ary;
      *is_new_object = 0;
    }
    else
    {
      Py_INCREF(array_descr(ary));
      result = (PyArrayObject*) PyArray_FromArray(ary,
                                                  array_descr(ary),
                                                  NPY_FORTRANORDER);
      *is_new_object = 1;
    }
    return result;
  }

  /* Convert a given PyObject to a contiguous PyArrayObject of the
   * specified type.  If the input object is not a contiguous
   * PyArrayObject, a new one will be created and the new object flag
   * will be set.
   */
  PyArrayObject* obj_to_array_contiguous_allow_conversion(PyObject* input,
                                                          int       typecode,
                                                          int*      is_new_object)
  {
    int is_new1 = 0;
    int is_new2 = 0;
    PyArrayObject* ary2;
    PyArrayObject* ary1 = obj_to_array_allow_conversion(input,
                                                        typecode,
                                                        &is_new1);
    if (ary1)
    {
      ary2 = make_contiguous(ary1, &is_new2, 0, 0);
      if ( is_new1 && is_new2)
      {
        Py_DECREF(ary1);
      }
      ary1 = ary2;
    }
    *is_new_object = is_new1 || is_new2;
    return ary1;
  }

  /* Convert a given PyObject to a Fortran-ordered PyArrayObject of the
   * specified type.  If the input object is not a Fortran-ordered
   * PyArrayObject, a new one will be created and the new object flag
   * will be set.
   */
  PyArrayObject* obj_to_array_fortran_allow_conversion(PyObject* input,
                                                       int       typecode,
                                                       int*      is_new_object)
  {
    int is_new1 = 0;
    int is_new2 = 0;
    PyArrayObject* ary2;
    PyArrayObject* ary1 = obj_to_array_allow_conversion(input,
                                                        typecode,
                                                        &is_new1);
    if (ary1)
    {
      ary2 = make_fortran(ary1, &is_new2);
      if (is_new1 && is_new2)
      {
        Py_DECREF(ary1);
      }
      ary1 = ary2;
    }
    *is_new_object = is_new1 || is_new2;
    return ary1;
  }


  /* Test whether a python object is contiguous.  If array is
   * contiguous, return 1.  Otherwise, set the python error string and
   * return 0.
   */
  int require_contiguous(PyArrayObject* ary)
  {
    int contiguous = 1;
    if (!array_is_contiguous(ary))
    {
      PyErr_SetString(PyExc_TypeError,
                      "Array must be contiguous.  A non-contiguous array was given");
      contiguous = 0;
    }
    return contiguous;
  }

  /* Require that a numpy array is not byte-swapped.  If the array is
   * not byte-swapped, return 1.  Otherwise, set the python error string
   * and return 0.
   */
  int require_native(PyArrayObject* ary)
  {
    int native = 1;
    if (!array_is_native(ary))
    {
      PyErr_SetString(PyExc_TypeError,
                      "Array must have native byteorder.  "
                      "A byte-swapped array was given");
      native = 0;
    }
    return native;
  }

  /* Require the given PyArrayObject to have a specified number of
   * dimensions.  If the array has the specified number of dimensions,
   * return 1.  Otherwise, set the python error string and return 0.
   */
  int require_dimensions(PyArrayObject* ary,
                         int            exact_dimensions)
  {
    int success = 1;
    if (array_numdims(ary) != exact_dimensions)
    {
      PyErr_Format(PyExc_TypeError,
                   "Array must have %d dimensions.  Given array has %d dimensions",
                   exact_dimensions,
                   array_numdims(ary));
      success = 0;
    }
    return success;
  }

  /* Require the given PyArrayObject to have one of a list of specified
   * number of dimensions.  If the array has one of the specified number
   * of dimensions, return 1.  Otherwise, set the python error string
   * and return 0.
   */
  int require_dimensions_n(PyArrayObject* ary,
                           int*           exact_dimensions,
                           int            n)
  {
    int success = 0;
    int i;
    char dims_str[255] = "";
    char s[255];
    for (i = 0; i < n && !success; i++)
    {
      if (array_numdims(ary) == exact_dimensions[i])
      {
        success = 1;
      }
    }
    if (!success)
    {
      for (i = 0; i < n-1; i++)
      {
        sprintf(s, "%d, ", exact_dimensions[i]);
        strcat(dims_str,s);
      }
      sprintf(s, " or %d", exact_dimensions[n-1]);
      strcat(dims_str,s);
      PyErr_Format(PyExc_TypeError,
                   "Array must have %s dimensions.  Given array has %d dimensions",
                   dims_str,
                   array_numdims(ary));
    }
    return success;
  }

  /* Require the given PyArrayObject to have a specified shape.  If the
   * array has the specified shape, return 1.  Otherwise, set the python
   * error string and return 0.
   */
  int require_size(PyArrayObject* ary,
                   npy_intp*      size,
                   int            n)
  {
    int i;
    int success = 1;
    int len;
    char desired_dims[255] = "[";
    char s[255];
    char actual_dims[255] = "[";
    for(i=0; i < n;i++)
    {
      if (size[i] != -1 &&  size[i] != array_size(ary,i))
      {
        success = 0;
      }
    }
    if (!success)
    {
      for (i = 0; i < n; i++)
      {
        if (size[i] == -1)
        {
          sprintf(s, "*,");
        }
        else
        {
          sprintf(s, "%ld,", (long int)size[i]);
        }
        strcat(desired_dims,s);
      }
      len = strlen(desired_dims);
      desired_dims[len-1] = ']';
      for (i = 0; i < n; i++)
      {
        sprintf(s, "%ld,", (long int)array_size(ary,i));
        strcat(actual_dims,s);
      }
      len = strlen(actual_dims);
      actual_dims[len-1] = ']';
      PyErr_Format(PyExc_TypeError,
                   "Array must have shape of %s.  Given array has shape of %s",
                   desired_dims,
                   actual_dims);
    }
    return success;
  }

  /* Require the given PyArrayObject to to be Fortran ordered.  If the
   * the PyArrayObject is already Fortran ordered, do nothing.  Else,
   * set the Fortran ordering flag and recompute the strides.
   */
  int require_fortran(PyArrayObject* ary)
  {
    int success = 1;
    int nd = array_numdims(ary);
    int i;
    npy_intp * strides = array_strides(ary);
    if (array_is_fortran(ary)) return success;
    /* Set the Fortran ordered flag */
    array_enableflags(ary,NPY_ARRAY_FARRAY);
    /* Recompute the strides */
    strides[0] = strides[nd-1];
    for (i=1; i < nd; ++i)
      strides[i] = strides[i-1] * array_size(ary,i-1);
    return success;
  }



SWIGINTERN ImageBaseType *Application_SetVectorImageFromUInt8NumpyArray_(Application *self,std::string pkey,int idx,unsigned char *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<unsigned char>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromInt16NumpyArray_(Application *self,std::string pkey,int idx,short *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<signed short>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromUInt16NumpyArray_(Application *self,std::string pkey,int idx,unsigned short *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<unsigned short>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromInt32NumpyArray_(Application *self,std::string pkey,int idx,int *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<signed int>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromUInt32NumpyArray_(Application *self,std::string pkey,int idx,unsigned int *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<unsigned int>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromFloatNumpyArray_(Application *self,std::string pkey,int idx,float *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<float>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromDoubleNumpyArray_(Application *self,std::string pkey,int idx,double *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<double>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromCFloatNumpyArray_(Application *self,std::string pkey,int idx,std::complex< float > *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<std::complex<float>>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetVectorImageFromCDoubleNumpyArray_(Application *self,std::string pkey,int idx,std::complex< double > *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::VectorImage<std::complex<double>>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromUInt8NumpyArray_(Application *self,std::string pkey,int idx,unsigned char *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<unsigned char>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromInt16NumpyArray_(Application *self,std::string pkey,int idx,short *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<signed short>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromUInt16NumpyArray_(Application *self,std::string pkey,int idx,unsigned short *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<unsigned short>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromInt32NumpyArray_(Application *self,std::string pkey,int idx,int *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<signed int>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromUInt32NumpyArray_(Application *self,std::string pkey,int idx,unsigned int *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<unsigned int>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromFloatNumpyArray_(Application *self,std::string pkey,int idx,float *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<float>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromDoubleNumpyArray_(Application *self,std::string pkey,int idx,double *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<double>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromCFloatNumpyArray_(Application *self,std::string pkey,int idx,std::complex< float > *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<std::complex<float>>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN ImageBaseType *Application_SetImageFromCDoubleNumpyArray_(Application *self,std::string pkey,int idx,std::complex< double > *buffer,int dim1,int dim2,int dim3){                                                                      typedef otb::Image<std::complex<double>>   ImageType;          ImageType::Pointer output = ImageType::New();                        unsigned int numberOfPixels = dim1 * dim2 * dim3;                    ImageType::RegionType region;                                        region.SetIndex(0, 0);                                               region.SetIndex(1, 0);                                               region.SetSize( 0, dim2);                                            region.SetSize( 1, dim1);                                            output->SetNumberOfComponentsPerPixel(dim3);                         output->SetRegions(region);                                          output->GetPixelContainer()->SetImportPointer(buffer, numberOfPixels, false);      self->SetParameterImageBase(pkey,output.GetPointer(),idx);          return output.GetPointer();                                        }
SWIGINTERN void Application_GetVectorImageAsUInt8NumpyArray_(Application *self,std::string pkey,unsigned char **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<unsigned char,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<unsigned char*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<unsigned char,2>* imgDown = dynamic_cast< otb::Image<unsigned char,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<unsigned char*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsInt16NumpyArray_(Application *self,std::string pkey,short **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<signed short,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<signed short*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<signed short,2>* imgDown = dynamic_cast< otb::Image<signed short,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<signed short*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsUInt16NumpyArray_(Application *self,std::string pkey,unsigned short **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<unsigned short,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<unsigned short*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<unsigned short,2>* imgDown = dynamic_cast< otb::Image<unsigned short,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<unsigned short*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsInt32NumpyArray_(Application *self,std::string pkey,int **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<signed int,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<signed int*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<signed int,2>* imgDown = dynamic_cast< otb::Image<signed int,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<signed int*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsUInt32NumpyArray_(Application *self,std::string pkey,unsigned int **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<unsigned int,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<unsigned int*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<unsigned int,2>* imgDown = dynamic_cast< otb::Image<unsigned int,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<unsigned int*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsFloatNumpyArray_(Application *self,std::string pkey,float **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<float,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<float*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<float,2>* imgDown = dynamic_cast< otb::Image<float,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<float*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsDoubleNumpyArray_(Application *self,std::string pkey,double **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<double,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<double*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<double,2>* imgDown = dynamic_cast< otb::Image<double,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<double*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsCFloatNumpyArray_(Application *self,std::string pkey,std::complex< float > **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<std::complex<float>,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<std::complex<float>*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<std::complex<float>,2>* imgDown = dynamic_cast< otb::Image<std::complex<float>,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<std::complex<float>*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN void Application_GetVectorImageAsCDoubleNumpyArray_(Application *self,std::string pkey,std::complex< double > **buffer,int *dim1,int *dim2,int *dim3){                                                                              ImageBaseType *img = self->GetParameterOutputImage(pkey);                     img->Update();                                                                 unsigned int nbComp = img->GetNumberOfComponentsPerPixel();                    ImageBaseType::RegionType region = img->GetBufferedRegion();                   ImageBaseType::SizeType size = region.GetSize();                               *dim1 = region.GetSize(1);                                                     *dim2 = region.GetSize(0);                                                     *dim3 = nbComp;                                                                std::string className(img->GetNameOfClass());                                  if (className == "VectorImage")                                                  {                                                                              typedef otb::VectorImage<std::complex<double>,2> LocalVectorImageType;                   LocalVectorImageType* imgDown = dynamic_cast<LocalVectorImageType*>(img);        if (imgDown)                                                                     *buffer  =  reinterpret_cast<std::complex<double>*>(imgDown->GetBufferPointer());         else                                                                             std::cerr << "VectorImage type doesn't match" << std::endl;                  }                                                                            else                                                                             {                                                                              if (nbComp == 1)                                                                 {                                                                              otb::Image<std::complex<double>,2>* imgDown = dynamic_cast< otb::Image<std::complex<double>,2>* >(img);          if (imgDown)                                                                     *buffer  =  reinterpret_cast<std::complex<double>*>(imgDown->GetBufferPointer());          else                                                                             std::cerr << "Image type doesn't match" << std::endl;                        }                                                                            else                                                                             {                                                                              std::cerr << "Unhandled number of components in otb::Image (RGB<T> "               "and RGBA<T> not supported yet)" << std::endl;                             }                                                                            }                                                                            }
SWIGINTERN std::string Application_ConvertPixelTypeToNumpy(Application *self,otb::Wrapper::ImagePixelType pixType){
    std::ostringstream oss;
    switch (pixType)
      {
      case otb::Wrapper::ImagePixelType_uint8 :
        oss << "uint" << (sizeof(unsigned char) * 8);
        break;
      case otb::Wrapper::ImagePixelType_int16 :
        oss << "int" << (sizeof(signed short) * 8);
        break;
      case otb::Wrapper::ImagePixelType_uint16 :
        oss << "uint" << (sizeof(unsigned short) * 8);
        break;
      case otb::Wrapper::ImagePixelType_int32 :
        oss << "int" << (sizeof(signed int) * 8);
        break;
      case otb::Wrapper::ImagePixelType_uint32 :
        oss << "uint" << (sizeof(unsigned int) * 8);
        break;
      case otb::Wrapper::ImagePixelType_float :
        oss << "float" << (sizeof(float) * 8);
        break;
      case otb::Wrapper::ImagePixelType_double :
        oss << "float" << (sizeof(double) * 8);
        break;
      case otb::Wrapper::ImagePixelType_cfloat :
        oss << "complex" << (sizeof(std::complex<float>) * 8);
        break;
      case otb::Wrapper::ImagePixelType_cdouble :
        oss << "complex" << (sizeof(std::complex<double>) * 8);
        break;
      default:
        std::cerr << "Pixel type not handled" << std::endl;
        break;
      }
    return oss.str();
    }
SWIGINTERN void Application_SetupImageInformation(Application *self,ImageBaseType *img,itk::Point< itk::SpacePrecisionType,2 > origin,itk::Vector< itk::SpacePrecisionType,2 > spacing,itk::Size< 2 > size,itk::ImageRegion< 2 > bufferRegion,otb::ImageMetadata metadata){
    img->SetOrigin(origin);
    otb::internal::SetSignedSpacing(img, spacing);
    itk::ImageRegion<2> largest;
    largest.SetSize(size);
    img->SetLargestPossibleRegion(largest);
    if (bufferRegion.GetSize() != img->GetBufferedRegion().GetSize())
      {
      std::cerr << "Given buffered size doesn't match actual buffer size" << std::endl;
      return;
      }
    img->SetRequestedRegion(bufferRegion);
    img->SetBufferedRegion(bufferRegion);
    dynamic_cast<otb::ImageCommons*>(img)->SetImageMetadata(metadata);
    }
SWIGINTERN void delete_Application(Application *self){
      self->UnRegister();
    }

#include "itkPyCommand.h"
typedef itk::PyCommand          itkPyCommand;
typedef itk::PyCommand::Pointer itkPyCommand_Pointer;
 
SWIGINTERN void delete_itkPyCommand(itkPyCommand *self){
      self->UnRegister();
    }


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "otbApplicationPYTHON_wrap.h"

SwigDirector_SwigPrintCallback::SwigDirector_SwigPrintCallback(PyObject *self): otb::SwigPrintCallback(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((otb::SwigPrintCallback *)this, this); 
}




SwigDirector_SwigPrintCallback::~SwigDirector_SwigPrintCallback() {
}

void SwigDirector_SwigPrintCallback::Call(std::string const &arg0) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  {
    swig::SwigVar_PyObject obj0;
    obj0 = SWIG_From_std_string(static_cast< std::string >(arg0));
    if (!swig_get_self()) {
      Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SwigPrintCallback.__init__.");
    }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
    const size_t swig_method_index = 0;
    const char *const swig_method_name = "Call";
    PyObject *method = swig_get_method(swig_method_index, swig_method_name);
    swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
    swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("Call");
    swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
    if (!result) {
      PyObject *error = PyErr_Occurred();
      if (error) {
        Swig::DirectorMethodException::raise("Error detected when calling 'SwigPrintCallback.Call'");
      }
    }
  }
  SWIG_PYTHON_THREAD_END_BLOCK;
}


void SwigDirector_SwigPrintCallback::Flush() {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  {
    if (!swig_get_self()) {
      Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SwigPrintCallback.__init__.");
    }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
    const size_t swig_method_index = 1;
    const char *const swig_method_name = "Flush";
    PyObject *method = swig_get_method(swig_method_index, swig_method_name);
    swig::SwigVar_PyObject args = PyTuple_New(0);
    swig::SwigVar_PyObject result = PyObject_Call(method, (PyObject *) args, NULL);
#else
    swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("Flush");
    swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name, NULL);
#endif
    if (!result) {
      PyObject *error = PyErr_Occurred();
      if (error) {
        Swig::DirectorMethodException::raise("Error detected when calling 'SwigPrintCallback.Flush'");
      }
    }
  }
  SWIG_PYTHON_THREAD_END_BLOCK;
}


bool SwigDirector_SwigPrintCallback::IsInteractive() {
  bool c_result = SwigValueInit< bool >() ;
  
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  {
    if (!swig_get_self()) {
      Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SwigPrintCallback.__init__.");
    }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
    const size_t swig_method_index = 2;
    const char *const swig_method_name = "IsInteractive";
    PyObject *method = swig_get_method(swig_method_index, swig_method_name);
    swig::SwigVar_PyObject args = PyTuple_New(0);
    swig::SwigVar_PyObject result = PyObject_Call(method, (PyObject *) args, NULL);
#else
    swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("IsInteractive");
    swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name, NULL);
#endif
    if (!result) {
      PyObject *error = PyErr_Occurred();
      if (error) {
        Swig::DirectorMethodException::raise("Error detected when calling 'SwigPrintCallback.IsInteractive'");
      }
    }
    bool swig_val;
    int swig_res = SWIG_AsVal_bool(result, &swig_val);
    if (!SWIG_IsOK(swig_res)) {
      Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
    }
    c_result = static_cast< bool >(swig_val);
  }
  SWIG_PYTHON_THREAD_END_BLOCK;
  return (bool) c_result;
}


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_SwigPyIterator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_SwigPyIterator" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_value: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_value" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_incr: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_incr" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *)(arg1)->incr();
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_incr: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_incr" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_incr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_decr: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_decr" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *)(arg1)->decr();
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_decr: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_decr" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_decr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ptrdiff_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_distance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::invalid_argument &_e) {
        SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_distance: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_distance" );
    }
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::invalid_argument &_e) {
        SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_equal: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_equal" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_copy: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_copy" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (PyObject *)(arg1)->next();
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_next: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_next" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (PyObject *)(arg1)->__next__();
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___next__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___next__" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (PyObject *)(arg1)->previous();
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_previous: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_previous" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_advance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator_advance: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator_advance" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___eq__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___eq__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___ne__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___ne__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___iadd__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___iadd__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___isub__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___isub__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___add__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___add__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___sub__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___sub__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ptrdiff_t result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication SwigPyIterator___sub__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPyIterator___sub__" );
    }
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator___sub__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vectorstring_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_iterator" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (swig::SwigPyIterator *)std_vector_Sl_std_string_Sg__iterator(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_iterator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_iterator" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___nonzero__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_vector_Sl_std_string_Sg____nonzero__((std::vector< std::string > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___nonzero__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___nonzero__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___bool__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_vector_Sl_std_string_Sg____bool__((std::vector< std::string > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___bool__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___bool__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___len__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_std_string_Sg____len__((std::vector< std::string > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___len__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___len__" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorstring___getslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___getslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring___getslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorstring___getslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< std::string,std::allocator< std::string > > *)std_vector_Sl_std_string_Sg____getslice__(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___getslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___getslice__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___setslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring___setslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorstring___setslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____setslice____SWIG_0(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___setslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___setslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  std::vector< std::string,std::allocator< std::string > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___setslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring___setslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorstring___setslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorstring___setslice__" "', argument " "4"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring___setslice__" "', argument " "4"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< std::string,std::allocator< std::string > > const &)*arg4);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___setslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___setslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorstring___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorstring___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< std::string,std::allocator< std::string > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorstring___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorstring___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__setslice__(std::vector< std::string >::difference_type,std::vector< std::string >::difference_type)\n"
    "    std::vector< std::string >::__setslice__(std::vector< std::string >::difference_type,std::vector< std::string >::difference_type,std::vector< std::string,std::allocator< std::string > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorstring___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorstring___delslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___delslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring___delslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorstring___delslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____delslice__(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___delslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___delslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___delitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring___delitem__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____delitem____SWIG_0(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___delitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___delitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___getitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< std::string,std::allocator< std::string > > *)std_vector_Sl_std_string_Sg____getitem____SWIG_0(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___getitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___getitem__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___setitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorstring___setitem__" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring___setitem__" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< std::string,std::allocator< std::string > > const &)*arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___setitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____setitem____SWIG_1(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___delitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____delitem____SWIG_1(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___delitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___delitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorstring___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorstring___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorstring___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorstring___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__delitem__(std::vector< std::string >::difference_type)\n"
    "    std::vector< std::string >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorstring___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___getitem__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring___getitem__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< std::string >::value_type *) &std_vector_Sl_std_string_Sg____getitem____SWIG_1((std::vector< std::string > const *)arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___getitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___getitem__" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::string >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorstring___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorstring___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorstring___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorstring___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__getitem__(PySliceObject *)\n"
    "    std::vector< std::string >::__getitem__(std::vector< std::string >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorstring___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring___setitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring___setitem__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorstring___setitem__" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring___setitem__" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_std_string_Sg____setitem____SWIG_2(arg1,arg2,(std::string const &)*arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorstring___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorstring___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::string,std::allocator< std::string > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorstring___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorstring___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorstring___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__setitem__(PySliceObject *,std::vector< std::string,std::allocator< std::string > > const &)\n"
    "    std::vector< std::string >::__setitem__(PySliceObject *)\n"
    "    std::vector< std::string >::__setitem__(std::vector< std::string >::difference_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorstring_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_pop" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = std_vector_Sl_std_string_Sg__pop(arg1);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_pop: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_pop" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorstring_append", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_append" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorstring_append" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring_append" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_vector_Sl_std_string_Sg__append(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_append: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_append" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorstring__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< std::string > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< std::string > *)new std::vector< std::string >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorstring" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorstring__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< std::string > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorstring" "', argument " "1"" of type '" "std::vector< std::string > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorstring" "', argument " "1"" of type '" "std::vector< std::string > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< std::string > *)new std::vector< std::string >((std::vector< std::string > const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorstring" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_empty" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((std::vector< std::string > const *)arg1)->empty();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_empty: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_empty" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_size" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< std::string > const *)arg1)->size();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_size: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_size" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorstring_swap", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_swap" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorstring_swap" "', argument " "2"" of type '" "std::vector< std::string > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring_swap" "', argument " "2"" of type '" "std::vector< std::string > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::string > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->swap(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_swap: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_swap" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_begin" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->begin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_begin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_begin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_end" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->end();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_end: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_end" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_rbegin" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rbegin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_rbegin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_rbegin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_rend" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rend();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_rend: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_rend" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_clear" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->clear();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_clear: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_clear" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_get_allocator" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< std::string > const *)arg1)->get_allocator();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_get_allocator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_get_allocator" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector< std::string >::allocator_type(static_cast< const std::vector< std::string >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorstring__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorstring" "', argument " "1"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::string >::size_type >(val1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< std::string > *)new std::vector< std::string >(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorstring" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_pop_back" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->pop_back();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_pop_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_pop_back" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_resize" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring_resize" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->resize(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_resize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_resize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< std::string >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_erase" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_std_string_Sg__erase__SWIG_0(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_erase" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  std::vector< std::string >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< std::string >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_erase" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_erase" "', argument " "3"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_erase" "', argument " "3"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_std_string_Sg__erase__SWIG_1(arg1,arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_erase" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorstring_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorstring_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorstring_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorstring_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::erase(std::vector< std::string >::iterator)\n"
    "    std::vector< std::string >::erase(std::vector< std::string >::iterator,std::vector< std::string >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorstring__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string >::size_type arg1 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::vector< std::string > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorstring" "', argument " "1"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::string >::size_type >(val1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorstring" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorstring" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< std::string > *)new std::vector< std::string >(arg1,(std::vector< std::string >::value_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorstring" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorstring(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectorstring", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectorstring__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorstring__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorstring__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_vectorstring__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectorstring'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::vector()\n"
    "    std::vector< std::string >::vector(std::vector< std::string > const &)\n"
    "    std::vector< std::string >::vector(std::vector< std::string >::size_type)\n"
    "    std::vector< std::string >::vector(std::vector< std::string >::size_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorstring_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorstring_push_back", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_push_back" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorstring_push_back" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring_push_back" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->push_back((std::vector< std::string >::value_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_push_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_push_back" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_front" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< std::string >::value_type *) &((std::vector< std::string > const *)arg1)->front();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_front: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_front" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::string >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_back" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< std::string >::value_type *) &((std::vector< std::string > const *)arg1)->back();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_back" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::string >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorstring_assign", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_assign" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring_assign" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorstring_assign" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring_assign" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->assign(arg2,(std::vector< std::string >::value_type const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_assign: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_assign" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_resize" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring_resize" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorstring_resize" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring_resize" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->resize(arg2,(std::vector< std::string >::value_type const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_resize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_resize" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorstring_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorstring_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorstring_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorstring_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::resize(std::vector< std::string >::size_type)\n"
    "    std::vector< std::string >::resize(std::vector< std::string >::size_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorstring_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  std::vector< std::string >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_insert" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorstring_insert" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring_insert" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_std_string_Sg__insert__SWIG_0(arg1,arg2,(std::string const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_insert: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_insert" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  std::vector< std::string >::size_type arg3 ;
  std::vector< std::string >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_insert" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorstring_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorstring_insert" "', argument " "3"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::size_type >(val3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorstring_insert" "', argument " "4"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorstring_insert" "', argument " "4"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_vector_Sl_std_string_Sg__insert__SWIG_1(arg1,arg2,arg3,(std::string const &)*arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_insert: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_insert" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorstring_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorstring_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorstring_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorstring_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::insert(std::vector< std::string >::iterator,std::vector< std::string >::value_type const &)\n"
    "    std::vector< std::string >::insert(std::vector< std::string >::iterator,std::vector< std::string >::size_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorstring_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorstring_reserve", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_reserve" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorstring_reserve" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->reserve(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_reserve: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_reserve" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorstring_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorstring_capacity" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< std::string > const *)arg1)->capacity();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorstring_capacity: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorstring_capacity" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorstring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorstring" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_vectorstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_vectorstring" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorstring_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectorstring_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_mapstringstring__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::less< std::string > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__lessT_std__string_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mapstringstring" "', argument " "1"" of type '" "std::less< std::string > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mapstringstring" "', argument " "1"" of type '" "std::less< std::string > const &""'"); 
  }
  arg1 = reinterpret_cast< std::less< std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::map< std::string,std::string > *)new std::map< std::string,std::string >((std::less< std::string > const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_mapstringstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_mapstringstring" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_iterator" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (swig::SwigPyIterator *)std_map_Sl_std_string_Sc_std_string_Sg__iterator(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_iterator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_iterator" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___nonzero__" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_map_Sl_std_string_Sc_std_string_Sg____nonzero__((std::map< std::string,std::string > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___nonzero__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___nonzero__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___bool__" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_map_Sl_std_string_Sc_std_string_Sg____bool__((std::map< std::string,std::string > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___bool__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___bool__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::map< std::string,std::string >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___len__" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_map_Sl_std_string_Sc_std_string_Sg____len__((std::map< std::string,std::string > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___len__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___len__" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::map< std::string,std::string >::mapped_type *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring___getitem__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___getitem__" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring___getitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring___getitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::map< std::string,std::string >::mapped_type *) &std_map_Sl_std_string_Sc_std_string_Sg____getitem__(arg1,(std::string const &)*arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___getitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___getitem__" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring___delitem__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___delitem__" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring___delitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring___delitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_map_Sl_std_string_Sc_std_string_Sg____delitem__(arg1,(std::string const &)*arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___delitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___delitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_has_key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring_has_key", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_has_key" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring_has_key" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring_has_key" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_map_Sl_std_string_Sc_std_string_Sg__has_key((std::map< std::string,std::string > const *)arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_has_key: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_has_key" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_keys(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_keys" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PyObject *)std_map_Sl_std_string_Sc_std_string_Sg__keys(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_keys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_keys" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_values(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_values" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PyObject *)std_map_Sl_std_string_Sc_std_string_Sg__values(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_values: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_values" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_items(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_items" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PyObject *)std_map_Sl_std_string_Sc_std_string_Sg__items(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_items: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_items" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___contains__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring___contains__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___contains__" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring___contains__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring___contains__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_map_Sl_std_string_Sc_std_string_Sg____contains__(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___contains__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___contains__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_key_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_key_iterator" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (swig::SwigPyIterator *)std_map_Sl_std_string_Sc_std_string_Sg__key_iterator(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_key_iterator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_key_iterator" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_value_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_value_iterator" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (swig::SwigPyIterator *)std_map_Sl_std_string_Sc_std_string_Sg__value_iterator(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_value_iterator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_value_iterator" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___setitem__" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring___setitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring___setitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_map_Sl_std_string_Sc_std_string_Sg____setitem____SWIG_0(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  std::map< std::string,std::string >::mapped_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring___setitem__" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring___setitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring___setitem__" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mapstringstring___setitem__" "', argument " "3"" of type '" "std::map< std::string,std::string >::mapped_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring___setitem__" "', argument " "3"" of type '" "std::map< std::string,std::string >::mapped_type const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_map_Sl_std_string_Sc_std_string_Sg____setitem____SWIG_1(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "mapstringstring___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_mapstringstring___setitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_mapstringstring___setitem____SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mapstringstring___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::map< std::string,std::string >::__setitem__(std::map< std::string,std::string >::key_type const &)\n"
    "    std::map< std::string,std::string >::__setitem__(std::map< std::string,std::string >::key_type const &,std::map< std::string,std::string >::mapped_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_mapstringstring_asdict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_asdict" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PyObject *)std_map_Sl_std_string_Sc_std_string_Sg__asdict(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_asdict: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_asdict" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_mapstringstring__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::map< std::string,std::string > *)new std::map< std::string,std::string >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_mapstringstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_mapstringstring" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_mapstringstring__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::map< std::string,std::string > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > *ptr = (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mapstringstring" "', argument " "1"" of type '" "std::map< std::string,std::string > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mapstringstring" "', argument " "1"" of type '" "std::map< std::string,std::string > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::map< std::string,std::string > *)new std::map< std::string,std::string >((std::map< std::string,std::string > const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_mapstringstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_mapstringstring" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_mapstringstring(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_mapstringstring", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_mapstringstring__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__lessT_std__string_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_mapstringstring__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_mapstringstring__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_mapstringstring'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::map< std::string,std::string >::map(std::less< std::string > const &)\n"
    "    std::map< std::string,std::string >::map()\n"
    "    std::map< std::string,std::string >::map(std::map< std::string,std::string > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_mapstringstring_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_empty" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((std::map< std::string,std::string > const *)arg1)->empty();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_empty: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_empty" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::map< std::string,std::string >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_size" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::map< std::string,std::string > const *)arg1)->size();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_size: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_size" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring_swap", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_swap" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring_swap" "', argument " "2"" of type '" "std::map< std::string,std::string > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring_swap" "', argument " "2"" of type '" "std::map< std::string,std::string > &""'"); 
  }
  arg2 = reinterpret_cast< std::map< std::string,std::string > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->swap(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_swap: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_swap" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::map< std::string,std::string >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_begin" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->begin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_begin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_begin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< std::string,std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::map< std::string,std::string >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_end" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->end();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_end: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_end" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< std::string,std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::map< std::string,std::string >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_rbegin" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rbegin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_rbegin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_rbegin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< std::string,std::string >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::map< std::string,std::string >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_rend" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rend();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_rend: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_rend" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< std::string,std::string >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_clear" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->clear();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_clear: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_clear" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< std::pair< std::string const,std::string > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_get_allocator" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::map< std::string,std::string > const *)arg1)->get_allocator();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_get_allocator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_get_allocator" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::map< std::string,std::string >::allocator_type(static_cast< const std::map< std::string,std::string >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__pairT_std__string_const_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::map< std::string,std::string >::size_type result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_erase" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring_erase" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring_erase" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->erase((std::map< std::string,std::string >::key_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_erase" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::map< std::string,std::string >::size_type result;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring_count", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_count" "', argument " "1"" of type '" "std::map< std::string,std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring_count" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring_count" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::map< std::string,std::string > const *)arg1)->count((std::map< std::string,std::string >::key_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_count: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_count" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_erase" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "mapstringstring_erase" "', argument " "2"" of type '" "std::map< std::string,std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "mapstringstring_erase" "', argument " "2"" of type '" "std::map< std::string,std::string >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_map_Sl_std_string_Sc_std_string_Sg__erase__SWIG_1(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_erase" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_erase__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::iterator arg2 ;
  std::map< std::string,std::string >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_erase" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "mapstringstring_erase" "', argument " "2"" of type '" "std::map< std::string,std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "mapstringstring_erase" "', argument " "2"" of type '" "std::map< std::string,std::string >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "mapstringstring_erase" "', argument " "3"" of type '" "std::map< std::string,std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "mapstringstring_erase" "', argument " "3"" of type '" "std::map< std::string,std::string >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_map_Sl_std_string_Sc_std_string_Sg__erase__SWIG_2(arg1,arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_erase" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "mapstringstring_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_mapstringstring_erase__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_mapstringstring_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::map< std::string,std::string >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_mapstringstring_erase__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mapstringstring_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::map< std::string,std::string >::erase(std::map< std::string,std::string >::key_type const &)\n"
    "    std::map< std::string,std::string >::erase(std::map< std::string,std::string >::iterator)\n"
    "    std::map< std::string,std::string >::erase(std::map< std::string,std::string >::iterator,std::map< std::string,std::string >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_mapstringstring_find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::map< std::string,std::string >::iterator result;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring_find", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_find" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring_find" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring_find" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->find((std::map< std::string,std::string >::key_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_find: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_find" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< std::string,std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::map< std::string,std::string >::iterator result;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring_lower_bound", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_lower_bound" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring_lower_bound" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring_lower_bound" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->lower_bound((std::map< std::string,std::string >::key_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_lower_bound: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_lower_bound" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< std::string,std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_mapstringstring_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::map< std::string,std::string >::iterator result;
  
  if (!SWIG_Python_UnpackTuple(args, "mapstringstring_upper_bound", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mapstringstring_upper_bound" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mapstringstring_upper_bound" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mapstringstring_upper_bound" "', argument " "2"" of type '" "std::map< std::string,std::string >::key_type const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->upper_bound((std::map< std::string,std::string >::key_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication mapstringstring_upper_bound: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication mapstringstring_upper_bound" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::map< std::string,std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_mapstringstring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_mapstringstring" "', argument " "1"" of type '" "std::map< std::string,std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::map< std::string,std::string > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_mapstringstring: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_mapstringstring" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *mapstringstring_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *mapstringstring_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_vectorbool_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_iterator" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (swig::SwigPyIterator *)std_vector_Sl_bool_Sg__iterator(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_iterator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_iterator" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___nonzero__" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_vector_Sl_bool_Sg____nonzero__((std::vector< bool > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___nonzero__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___nonzero__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___bool__" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_vector_Sl_bool_Sg____bool__((std::vector< bool > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___bool__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___bool__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___len__" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_bool_Sg____len__((std::vector< bool > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___len__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___len__" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::difference_type arg2 ;
  std::vector< bool >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::vector< bool,std::allocator< bool > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorbool___getslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___getslice__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool___getslice__" "', argument " "2"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool___getslice__" "', argument " "3"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< bool,std::allocator< bool > > *)std_vector_Sl_bool_Sg____getslice__(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___getslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___getslice__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::difference_type arg2 ;
  std::vector< bool >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___setslice__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool___setslice__" "', argument " "2"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool___setslice__" "', argument " "3"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____setslice____SWIG_0(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___setslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___setslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::difference_type arg2 ;
  std::vector< bool >::difference_type arg3 ;
  std::vector< bool,std::allocator< bool > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___setslice__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool___setslice__" "', argument " "2"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool___setslice__" "', argument " "3"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::difference_type >(val3);
  {
    std::vector<bool,std::allocator< bool > > *ptr = (std::vector<bool,std::allocator< bool > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorbool___setslice__" "', argument " "4"" of type '" "std::vector< bool,std::allocator< bool > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorbool___setslice__" "', argument " "4"" of type '" "std::vector< bool,std::allocator< bool > > const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< bool,std::allocator< bool > > const &)*arg4);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___setslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___setslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorbool___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorbool___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<bool,std::allocator< bool > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorbool___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorbool___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::__setslice__(std::vector< bool >::difference_type,std::vector< bool >::difference_type)\n"
    "    std::vector< bool >::__setslice__(std::vector< bool >::difference_type,std::vector< bool >::difference_type,std::vector< bool,std::allocator< bool > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorbool___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::difference_type arg2 ;
  std::vector< bool >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorbool___delslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___delslice__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool___delslice__" "', argument " "2"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool___delslice__" "', argument " "3"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____delslice__(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___delslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___delslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___delitem__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool___delitem__" "', argument " "2"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::difference_type >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____delitem____SWIG_0(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___delitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___delitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< bool,std::allocator< bool > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___getitem__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< bool,std::allocator< bool > > *)std_vector_Sl_bool_Sg____getitem____SWIG_0(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___getitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___getitem__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< bool,std::allocator< bool > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___setitem__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector<bool,std::allocator< bool > > *ptr = (std::vector<bool,std::allocator< bool > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorbool___setitem__" "', argument " "3"" of type '" "std::vector< bool,std::allocator< bool > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorbool___setitem__" "', argument " "3"" of type '" "std::vector< bool,std::allocator< bool > > const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< bool,std::allocator< bool > > const &)*arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___setitem__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____setitem____SWIG_1(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___delitem__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____delitem____SWIG_1(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___delitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___delitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorbool___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorbool___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorbool___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorbool___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::__delitem__(std::vector< bool >::difference_type)\n"
    "    std::vector< bool >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorbool___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< bool >::value_type result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___getitem__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool___getitem__" "', argument " "2"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::difference_type >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< bool >::value_type)std_vector_Sl_bool_Sg____getitem____SWIG_1(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___getitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___getitem__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorbool___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorbool___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorbool___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorbool___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::__getitem__(PySliceObject *)\n"
    "    std::vector< bool >::__getitem__(std::vector< bool >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorbool___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::difference_type arg2 ;
  std::vector< bool >::value_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool___setitem__" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool___setitem__" "', argument " "2"" of type '" "std::vector< bool >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::difference_type >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool___setitem__" "', argument " "3"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::value_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_bool_Sg____setitem____SWIG_2(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorbool___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorbool___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<bool,std::allocator< bool > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorbool___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorbool___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorbool___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::__setitem__(PySliceObject *,std::vector< bool,std::allocator< bool > > const &)\n"
    "    std::vector< bool >::__setitem__(PySliceObject *)\n"
    "    std::vector< bool >::__setitem__(std::vector< bool >::difference_type,std::vector< bool >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorbool_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_pop" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< bool >::value_type)std_vector_Sl_bool_Sg__pop(arg1);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_pop: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_pop" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::value_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorbool_append", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_append" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool_append" "', argument " "2"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::value_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_vector_Sl_bool_Sg__append(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_append: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_append" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorbool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< bool > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< bool > *)new std::vector< bool >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorbool: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorbool" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorbool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< bool > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector<bool,std::allocator< bool > > *ptr = (std::vector<bool,std::allocator< bool > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorbool" "', argument " "1"" of type '" "std::vector< bool > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorbool" "', argument " "1"" of type '" "std::vector< bool > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< bool > *)new std::vector< bool >((std::vector< bool > const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorbool: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorbool" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_empty" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((std::vector< bool > const *)arg1)->empty();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_empty: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_empty" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_size" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< bool > const *)arg1)->size();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_size: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_size" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorbool_swap", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_swap" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorbool_swap" "', argument " "2"" of type '" "std::vector< bool > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorbool_swap" "', argument " "2"" of type '" "std::vector< bool > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< bool > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->swap(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_swap: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_swap" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_begin" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->begin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_begin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_begin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< bool >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_end" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->end();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_end: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_end" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< bool >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_rbegin" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rbegin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_rbegin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_rbegin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< bool >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_rend" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rend();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_rend: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_rend" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< bool >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_clear" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->clear();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_clear: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_clear" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< bool > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_get_allocator" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< bool > const *)arg1)->get_allocator();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_get_allocator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_get_allocator" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector< bool >::allocator_type(static_cast< const std::vector< bool >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_bool_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorbool__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< bool > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorbool" "', argument " "1"" of type '" "std::vector< bool >::size_type""'");
  } 
  arg1 = static_cast< std::vector< bool >::size_type >(val1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< bool > *)new std::vector< bool >(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorbool: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorbool" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_pop_back" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->pop_back();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_pop_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_pop_back" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_resize" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool_resize" "', argument " "2"" of type '" "std::vector< bool >::size_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::size_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->resize(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_resize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_resize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< bool >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_erase" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_erase" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< bool >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_erase" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_bool_Sg__erase__SWIG_0(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_erase" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< bool >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::iterator arg2 ;
  std::vector< bool >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< bool >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_erase" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_erase" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< bool >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_erase" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_erase" "', argument " "3"" of type '" "std::vector< bool >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< bool >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_erase" "', argument " "3"" of type '" "std::vector< bool >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_bool_Sg__erase__SWIG_1(arg1,arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_erase" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< bool >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorbool_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorbool_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorbool_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorbool_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::erase(std::vector< bool >::iterator)\n"
    "    std::vector< bool >::erase(std::vector< bool >::iterator,std::vector< bool >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorbool__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool >::size_type arg1 ;
  std::vector< bool >::value_type arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  std::vector< bool > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorbool" "', argument " "1"" of type '" "std::vector< bool >::size_type""'");
  } 
  arg1 = static_cast< std::vector< bool >::size_type >(val1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vectorbool" "', argument " "2"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::value_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< bool > *)new std::vector< bool >(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectorbool: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectorbool" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorbool(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectorbool", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectorbool__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorbool__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorbool__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_vectorbool__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectorbool'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::vector()\n"
    "    std::vector< bool >::vector(std::vector< bool > const &)\n"
    "    std::vector< bool >::vector(std::vector< bool >::size_type)\n"
    "    std::vector< bool >::vector(std::vector< bool >::size_type,std::vector< bool >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorbool_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::value_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorbool_push_back", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_push_back" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool_push_back" "', argument " "2"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::value_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->push_back(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_push_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_push_back" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_front" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< bool >::value_type)((std::vector< bool > const *)arg1)->front();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_front: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_front" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_back" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< bool >::value_type)((std::vector< bool > const *)arg1)->back();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_back" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::size_type arg2 ;
  std::vector< bool >::value_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorbool_assign", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_assign" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool_assign" "', argument " "2"" of type '" "std::vector< bool >::size_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::size_type >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool_assign" "', argument " "3"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::value_type >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->assign(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_assign: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_assign" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::size_type arg2 ;
  std::vector< bool >::value_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_resize" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool_resize" "', argument " "2"" of type '" "std::vector< bool >::size_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::size_type >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool_resize" "', argument " "3"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::value_type >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->resize(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_resize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_resize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorbool_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorbool_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorbool_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorbool_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::resize(std::vector< bool >::size_type)\n"
    "    std::vector< bool >::resize(std::vector< bool >::size_type,std::vector< bool >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorbool_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::iterator arg2 ;
  std::vector< bool >::value_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  bool val3 ;
  int ecode3 = 0 ;
  std::vector< bool >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_insert" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_insert" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< bool >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_insert" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool_insert" "', argument " "3"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::value_type >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_bool_Sg__insert__SWIG_0(arg1,arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_insert: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_insert" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< bool >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::iterator arg2 ;
  std::vector< bool >::size_type arg3 ;
  std::vector< bool >::value_type arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_insert" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_insert" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< bool >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorbool_insert" "', argument " "2"" of type '" "std::vector< bool >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorbool_insert" "', argument " "3"" of type '" "std::vector< bool >::size_type""'");
  } 
  arg3 = static_cast< std::vector< bool >::size_type >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vectorbool_insert" "', argument " "4"" of type '" "std::vector< bool >::value_type""'");
  } 
  arg4 = static_cast< std::vector< bool >::value_type >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_vector_Sl_bool_Sg__insert__SWIG_1(arg1,arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_insert: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_insert" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorbool_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorbool_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<bool,std::allocator< bool > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< bool >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_vectorbool_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorbool_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< bool >::insert(std::vector< bool >::iterator,std::vector< bool >::value_type)\n"
    "    std::vector< bool >::insert(std::vector< bool >::iterator,std::vector< bool >::size_type,std::vector< bool >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorbool_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  std::vector< bool >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectorbool_reserve", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_reserve" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorbool_reserve" "', argument " "2"" of type '" "std::vector< bool >::size_type""'");
  } 
  arg2 = static_cast< std::vector< bool >::size_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->reserve(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_reserve: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_reserve" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorbool_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< bool >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorbool_capacity" "', argument " "1"" of type '" "std::vector< bool > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< bool > const *)arg1)->capacity();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectorbool_capacity: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectorbool_capacity" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorbool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< bool > *arg1 = (std::vector< bool > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorbool" "', argument " "1"" of type '" "std::vector< bool > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< bool > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_vectorbool: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_vectorbool" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorbool_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_bool_std__allocatorT_bool_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectorbool_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_vectordouble_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_iterator" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (swig::SwigPyIterator *)std_vector_Sl_double_Sg__iterator(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_iterator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_iterator" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___nonzero__" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_vector_Sl_double_Sg____nonzero__((std::vector< double > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___nonzero__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___nonzero__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___bool__" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)std_vector_Sl_double_Sg____bool__((std::vector< double > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___bool__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___bool__" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___len__" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_double_Sg____len__((std::vector< double > const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___len__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___len__" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ;
  std::vector< double >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectordouble___getslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___getslice__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble___getslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< double >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble___getslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< double >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< double,std::allocator< double > > *)std_vector_Sl_double_Sg____getslice__(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___getslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___getslice__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ;
  std::vector< double >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___setslice__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble___setslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< double >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble___setslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< double >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____setslice____SWIG_0(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___setslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___setslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ;
  std::vector< double >::difference_type arg3 ;
  std::vector< double,std::allocator< double > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___setslice__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble___setslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< double >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble___setslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< double >::difference_type >(val3);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectordouble___setslice__" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectordouble___setslice__" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< double,std::allocator< double > > const &)*arg4);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___setslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___setslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectordouble___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectordouble___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< double,std::allocator< double > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectordouble___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectordouble___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::__setslice__(std::vector< double >::difference_type,std::vector< double >::difference_type)\n"
    "    std::vector< double >::__setslice__(std::vector< double >::difference_type,std::vector< double >::difference_type,std::vector< double,std::allocator< double > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectordouble___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ;
  std::vector< double >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectordouble___delslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___delslice__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble___delslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< double >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble___delslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< double >::difference_type >(val3);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____delslice__(arg1,arg2,arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___delslice__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___delslice__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___delitem__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble___delitem__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< double >::difference_type >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____delitem____SWIG_0(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___delitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___delitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___getitem__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< double,std::allocator< double > > *)std_vector_Sl_double_Sg____getitem____SWIG_0(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___getitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___getitem__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___setitem__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectordouble___setitem__" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectordouble___setitem__" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___setitem__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____setitem____SWIG_1(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___delitem__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____delitem____SWIG_1(arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      } catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___delitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___delitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectordouble___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectordouble___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectordouble___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectordouble___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::__delitem__(std::vector< double >::difference_type)\n"
    "    std::vector< double >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectordouble___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< double >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___getitem__" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble___getitem__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< double >::difference_type >(val2);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< double >::value_type *) &std_vector_Sl_double_Sg____getitem____SWIG_1((std::vector< double > const *)arg1,arg2);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___getitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___getitem__" );
    }
  }
  {
    resultobj = PyFloat_FromDouble( *result );
  }
  (void)swig::container_owner<swig::traits<std::vector< double >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectordouble___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectordouble___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectordouble___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectordouble___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::__getitem__(PySliceObject *)\n"
    "    std::vector< double >::__getitem__(std::vector< double >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectordouble___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ;
  std::vector< double >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< double >::value_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble___setitem__" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble___setitem__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< double >::difference_type >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble___setitem__" "', argument " "3"" of type '" "std::vector< double >::value_type""'");
  } 
  temp3 = static_cast< std::vector< double >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          std_vector_Sl_double_Sg____setitem____SWIG_2(arg1,arg2,(double const &)*arg3);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectordouble___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectordouble___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectordouble___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectordouble___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectordouble___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::__setitem__(PySliceObject *,std::vector< double,std::allocator< double > > const &)\n"
    "    std::vector< double >::__setitem__(PySliceObject *)\n"
    "    std::vector< double >::__setitem__(std::vector< double >::difference_type,std::vector< double >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectordouble_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_pop" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      try {
        {
          SWIG_PYTHON_THREAD_BEGIN_ALLOW;
          result = (std::vector< double >::value_type)std_vector_Sl_double_Sg__pop(arg1);
          SWIG_PYTHON_THREAD_END_ALLOW;
        }
      } catch(std::out_of_range &_e) {
        SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_pop: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_pop" );
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< double >::value_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectordouble_append", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_append" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble_append" "', argument " "2"" of type '" "std::vector< double >::value_type""'");
  } 
  temp2 = static_cast< std::vector< double >::value_type >(val2);
  arg2 = &temp2;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_vector_Sl_double_Sg__append(arg1,(double const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_append: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_append" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectordouble__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< double > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< double > *)new std::vector< double >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectordouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectordouble" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectordouble__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< double > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectordouble" "', argument " "1"" of type '" "std::vector< double > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectordouble" "', argument " "1"" of type '" "std::vector< double > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< double > *)new std::vector< double >((std::vector< double > const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectordouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectordouble" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_empty" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((std::vector< double > const *)arg1)->empty();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_empty: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_empty" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_size" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< double > const *)arg1)->size();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_size: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_size" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectordouble_swap", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_swap" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectordouble_swap" "', argument " "2"" of type '" "std::vector< double > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectordouble_swap" "', argument " "2"" of type '" "std::vector< double > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< double > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->swap(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_swap: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_swap" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_begin" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->begin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_begin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_begin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_end" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->end();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_end: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_end" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_rbegin" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rbegin();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_rbegin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_rbegin" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_rend" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->rend();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_rend: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_rend" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_clear" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->clear();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_clear: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_clear" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< double > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_get_allocator" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< double > const *)arg1)->get_allocator();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_get_allocator: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_get_allocator" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector< double >::allocator_type(static_cast< const std::vector< double >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectordouble__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< double > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectordouble" "', argument " "1"" of type '" "std::vector< double >::size_type""'");
  } 
  arg1 = static_cast< std::vector< double >::size_type >(val1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< double > *)new std::vector< double >(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectordouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectordouble" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_pop_back" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->pop_back();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_pop_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_pop_back" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_resize" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble_resize" "', argument " "2"" of type '" "std::vector< double >::size_type""'");
  } 
  arg2 = static_cast< std::vector< double >::size_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->resize(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_resize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_resize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< double >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_erase" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_double_Sg__erase__SWIG_0(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_erase" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::iterator arg2 ;
  std::vector< double >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< double >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_erase" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_erase" "', argument " "3"" of type '" "std::vector< double >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_erase" "', argument " "3"" of type '" "std::vector< double >::iterator""'");
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_double_Sg__erase__SWIG_1(arg1,arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_erase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_erase" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectordouble_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectordouble_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectordouble_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectordouble_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::erase(std::vector< double >::iterator)\n"
    "    std::vector< double >::erase(std::vector< double >::iterator,std::vector< double >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectordouble__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double >::size_type arg1 ;
  std::vector< double >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< double >::value_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  std::vector< double > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectordouble" "', argument " "1"" of type '" "std::vector< double >::size_type""'");
  } 
  arg1 = static_cast< std::vector< double >::size_type >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vectordouble" "', argument " "2"" of type '" "std::vector< double >::value_type""'");
  } 
  temp2 = static_cast< std::vector< double >::value_type >(val2);
  arg2 = &temp2;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< double > *)new std::vector< double >(arg1,(std::vector< double >::value_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_vectordouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_vectordouble" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectordouble(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectordouble", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectordouble__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectordouble__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectordouble__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_vectordouble__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectordouble'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::vector()\n"
    "    std::vector< double >::vector(std::vector< double > const &)\n"
    "    std::vector< double >::vector(std::vector< double >::size_type)\n"
    "    std::vector< double >::vector(std::vector< double >::size_type,std::vector< double >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectordouble_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< double >::value_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectordouble_push_back", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_push_back" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble_push_back" "', argument " "2"" of type '" "std::vector< double >::value_type""'");
  } 
  temp2 = static_cast< std::vector< double >::value_type >(val2);
  arg2 = &temp2;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->push_back((std::vector< double >::value_type const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_push_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_push_back" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_front" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< double >::value_type *) &((std::vector< double > const *)arg1)->front();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_front: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_front" );
    }
  }
  {
    resultobj = PyFloat_FromDouble( *result );
  }
  (void)swig::container_owner<swig::traits<std::vector< double >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_back" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::vector< double >::value_type *) &((std::vector< double > const *)arg1)->back();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_back: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_back" );
    }
  }
  {
    resultobj = PyFloat_FromDouble( *result );
  }
  (void)swig::container_owner<swig::traits<std::vector< double >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  std::vector< double >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< double >::value_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectordouble_assign", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_assign" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble_assign" "', argument " "2"" of type '" "std::vector< double >::size_type""'");
  } 
  arg2 = static_cast< std::vector< double >::size_type >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble_assign" "', argument " "3"" of type '" "std::vector< double >::value_type""'");
  } 
  temp3 = static_cast< std::vector< double >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->assign(arg2,(std::vector< double >::value_type const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_assign: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_assign" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  std::vector< double >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< double >::value_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_resize" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble_resize" "', argument " "2"" of type '" "std::vector< double >::size_type""'");
  } 
  arg2 = static_cast< std::vector< double >::size_type >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble_resize" "', argument " "3"" of type '" "std::vector< double >::value_type""'");
  } 
  temp3 = static_cast< std::vector< double >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->resize(arg2,(std::vector< double >::value_type const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_resize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_resize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectordouble_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectordouble_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectordouble_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectordouble_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::resize(std::vector< double >::size_type)\n"
    "    std::vector< double >::resize(std::vector< double >::size_type,std::vector< double >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectordouble_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::iterator arg2 ;
  std::vector< double >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< double >::value_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< double >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_insert" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble_insert" "', argument " "3"" of type '" "std::vector< double >::value_type""'");
  } 
  temp3 = static_cast< std::vector< double >::value_type >(val3);
  arg3 = &temp3;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = std_vector_Sl_double_Sg__insert__SWIG_0(arg1,arg2,(double const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_insert: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_insert" );
    }
  }
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::iterator arg2 ;
  std::vector< double >::size_type arg3 ;
  std::vector< double >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  std::vector< double >::value_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_insert" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectordouble_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectordouble_insert" "', argument " "3"" of type '" "std::vector< double >::size_type""'");
  } 
  arg3 = static_cast< std::vector< double >::size_type >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vectordouble_insert" "', argument " "4"" of type '" "std::vector< double >::value_type""'");
  } 
  temp4 = static_cast< std::vector< double >::value_type >(val4);
  arg4 = &temp4;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        std_vector_Sl_double_Sg__insert__SWIG_1(arg1,arg2,arg3,(double const &)*arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_insert: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_insert" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectordouble_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectordouble_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_vectordouble_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectordouble_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< double >::insert(std::vector< double >::iterator,std::vector< double >::value_type const &)\n"
    "    std::vector< double >::insert(std::vector< double >::iterator,std::vector< double >::size_type,std::vector< double >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectordouble_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vectordouble_reserve", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_reserve" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectordouble_reserve" "', argument " "2"" of type '" "std::vector< double >::size_type""'");
  } 
  arg2 = static_cast< std::vector< double >::size_type >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->reserve(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_reserve: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_reserve" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectordouble_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectordouble_capacity" "', argument " "1"" of type '" "std::vector< double > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((std::vector< double > const *)arg1)->capacity();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication vectordouble_capacity: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication vectordouble_capacity" );
    }
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectordouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectordouble" "', argument " "1"" of type '" "std::vector< double > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_vectordouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_vectordouble" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectordouble_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectordouble_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Size< 2 > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_itkSize", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::Size< 2 > *)new itk::Size< 2 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkSize" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Size< 2 > *arg1 = (itk::Size< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkSize" "', argument " "1"" of type '" "itk::Size< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Size< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkSize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkSize_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Size< 2 > *arg1 = (itk::Size< 2 > *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkSize_Fill", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__SizeT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkSize_Fill" "', argument " "1"" of type '" "itk::Size< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Size< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkSize_Fill" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Fill(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkSize_Fill: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkSize_Fill" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkSize_GetElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Size< 2 > *arg1 = (itk::Size< 2 > *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itk::SizeValueType result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkSize_GetElement", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__SizeT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkSize_GetElement" "', argument " "1"" of type '" "itk::Size< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::Size< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkSize_GetElement" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::SizeValueType)((itk::Size< 2 > const *)arg1)->GetElement(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkSize_GetElement: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkSize_GetElement" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkSize_SetElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Size< 2 > *arg1 = (itk::Size< 2 > *) 0 ;
  unsigned long arg2 ;
  itk::SizeValueType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkSize_SetElement", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__SizeT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkSize_SetElement" "', argument " "1"" of type '" "itk::Size< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Size< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkSize_SetElement" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "itkSize_SetElement" "', argument " "3"" of type '" "itk::SizeValueType""'");
  } 
  arg3 = static_cast< itk::SizeValueType >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetElement(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkSize_SetElement: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkSize_SetElement" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkSize_GetSizeDimension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkSize_GetSizeDimension", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)itk::Size< 2 >::SWIGTEMPLATEDISAMBIGUATOR GetSizeDimension();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkSize_GetSizeDimension: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkSize_GetSizeDimension" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkSize_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itk__SizeT_2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkSize_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Index< 2 > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_itkIndex", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::Index< 2 > *)new itk::Index< 2 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkIndex" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__IndexT_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Index< 2 > *arg1 = (itk::Index< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__IndexT_2_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkIndex" "', argument " "1"" of type '" "itk::Index< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Index< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkIndex" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIndex_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Index< 2 > *arg1 = (itk::Index< 2 > *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkIndex_Fill", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__IndexT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkIndex_Fill" "', argument " "1"" of type '" "itk::Index< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Index< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkIndex_Fill" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Fill(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIndex_Fill: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIndex_Fill" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIndex_GetElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Index< 2 > *arg1 = (itk::Index< 2 > *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itk::IndexValueType result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkIndex_GetElement", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__IndexT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkIndex_GetElement" "', argument " "1"" of type '" "itk::Index< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::Index< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkIndex_GetElement" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::IndexValueType)((itk::Index< 2 > const *)arg1)->GetElement(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIndex_GetElement: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIndex_GetElement" );
    }
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIndex_SetElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Index< 2 > *arg1 = (itk::Index< 2 > *) 0 ;
  unsigned long arg2 ;
  itk::IndexValueType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkIndex_SetElement", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__IndexT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkIndex_SetElement" "', argument " "1"" of type '" "itk::Index< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Index< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkIndex_SetElement" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "itkIndex_SetElement" "', argument " "3"" of type '" "itk::IndexValueType""'");
  } 
  arg3 = static_cast< itk::IndexValueType >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetElement(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIndex_SetElement: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIndex_SetElement" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIndex_GetIndexDimension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkIndex_GetIndexDimension", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)itk::Index< 2 >::SWIGTEMPLATEDISAMBIGUATOR GetIndexDimension();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIndex_GetIndexDimension: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIndex_GetIndexDimension" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkIndex_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itk__IndexT_2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkIndex_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkRegion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::ImageRegion< 2 > *)new itk::ImageRegion< 2 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkRegion" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkRegion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::Index< 2 > *arg1 = 0 ;
  itk::Size< 2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  itk::ImageRegion< 2 > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itk__IndexT_2_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkRegion" "', argument " "1"" of type '" "itk::Index< 2 > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkRegion" "', argument " "1"" of type '" "itk::Index< 2 > const &""'"); 
  }
  arg1 = reinterpret_cast< itk::Index< 2 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itk__SizeT_2_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_itkRegion" "', argument " "2"" of type '" "itk::Size< 2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkRegion" "', argument " "2"" of type '" "itk::Size< 2 > const &""'"); 
  }
  arg2 = reinterpret_cast< itk::Size< 2 > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::ImageRegion< 2 > *)new itk::ImageRegion< 2 >((itk::Index< 2 > const &)*arg1,(itk::Size< 2 > const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkRegion" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkRegion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkRegion", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkRegion__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itk__IndexT_2_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_itkRegion__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkRegion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itk::ImageRegion< 2 >::ImageRegion()\n"
    "    itk::ImageRegion< 2 >::ImageRegion(itk::Index< 2 > const &,itk::Size< 2 > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkRegion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkRegion" "', argument " "1"" of type '" "itk::ImageRegion< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkRegion" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_SetIndex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  itk::Index< 2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_SetIndex" "', argument " "1"" of type '" "itk::ImageRegion< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itk__IndexT_2_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkRegion_SetIndex" "', argument " "2"" of type '" "itk::Index< 2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkRegion_SetIndex" "', argument " "2"" of type '" "itk::Index< 2 > const &""'"); 
  }
  arg2 = reinterpret_cast< itk::Index< 2 > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetIndex((itk::Index< 2 > const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_SetIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_SetIndex" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_SetSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  itk::Size< 2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_SetSize" "', argument " "1"" of type '" "itk::ImageRegion< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itk__SizeT_2_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkRegion_SetSize" "', argument " "2"" of type '" "itk::Size< 2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkRegion_SetSize" "', argument " "2"" of type '" "itk::Size< 2 > const &""'"); 
  }
  arg2 = reinterpret_cast< itk::Size< 2 > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetSize((itk::Size< 2 > const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_SetSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_SetSize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_SetUpperIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  itk::Index< 2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkRegion_SetUpperIndex", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_SetUpperIndex" "', argument " "1"" of type '" "itk::ImageRegion< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itk__IndexT_2_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkRegion_SetUpperIndex" "', argument " "2"" of type '" "itk::Index< 2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkRegion_SetUpperIndex" "', argument " "2"" of type '" "itk::Index< 2 > const &""'"); 
  }
  arg2 = reinterpret_cast< itk::Index< 2 > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetUpperIndex((itk::Index< 2 > const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_SetUpperIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_SetUpperIndex" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_GetUpperIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itk::Index< 2 > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_GetUpperIndex" "', argument " "1"" of type '" "itk::ImageRegion< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((itk::ImageRegion< 2 > const *)arg1)->GetUpperIndex();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_GetUpperIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_GetUpperIndex" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Index< 2 >(static_cast< const itk::Index< 2 >& >(result))), SWIGTYPE_p_itk__IndexT_2_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_GetIndex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itk::Index< 2 > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_GetIndex" "', argument " "1"" of type '" "itk::ImageRegion< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::Index< 2 > *) &((itk::ImageRegion< 2 > const *)arg1)->GetIndex();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_GetIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_GetIndex" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__IndexT_2_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_GetSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itk::Size< 2 > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_GetSize" "', argument " "1"" of type '" "itk::ImageRegion< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::Size< 2 > *) &((itk::ImageRegion< 2 > const *)arg1)->GetSize();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_GetSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_GetSize" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__SizeT_2_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_IsInside(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  itk::Index< 2 > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkRegion_IsInside", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_IsInside" "', argument " "1"" of type '" "itk::ImageRegion< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itk__IndexT_2_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkRegion_IsInside" "', argument " "2"" of type '" "itk::Index< 2 > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkRegion_IsInside" "', argument " "2"" of type '" "itk::Index< 2 > const &""'"); 
  }
  arg2 = reinterpret_cast< itk::Index< 2 > * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itk::ImageRegion< 2 > const *)arg1)->IsInside((itk::Index< 2 > const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_IsInside: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_IsInside" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_SetSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  unsigned int arg2 ;
  itk::SizeValueType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_SetSize" "', argument " "1"" of type '" "itk::ImageRegion< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkRegion_SetSize" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "itkRegion_SetSize" "', argument " "3"" of type '" "itk::SizeValueType""'");
  } 
  arg3 = static_cast< itk::SizeValueType >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetSize(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_SetSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_SetSize" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_SetSize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkRegion_SetSize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkRegion_SetSize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_itkRegion_SetSize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkRegion_SetSize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itk::ImageRegion< 2 >::SetSize(itk::Size< 2 > const &)\n"
    "    itk::ImageRegion< 2 >::SetSize(unsigned int,itk::SizeValueType)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkRegion_GetSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  itk::SizeValueType result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_GetSize" "', argument " "1"" of type '" "itk::ImageRegion< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkRegion_GetSize" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::SizeValueType)((itk::ImageRegion< 2 > const *)arg1)->GetSize(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_GetSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_GetSize" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_GetSize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkRegion_GetSize", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_itkRegion_GetSize__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_itkRegion_GetSize__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkRegion_GetSize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itk::ImageRegion< 2 >::GetSize() const\n"
    "    itk::ImageRegion< 2 >::GetSize(unsigned int) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkRegion_SetIndex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  unsigned int arg2 ;
  itk::IndexValueType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_SetIndex" "', argument " "1"" of type '" "itk::ImageRegion< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkRegion_SetIndex" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "itkRegion_SetIndex" "', argument " "3"" of type '" "itk::IndexValueType""'");
  } 
  arg3 = static_cast< itk::IndexValueType >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetIndex(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_SetIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_SetIndex" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_SetIndex(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkRegion_SetIndex", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_itk__IndexT_2_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkRegion_SetIndex__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_itkRegion_SetIndex__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkRegion_SetIndex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itk::ImageRegion< 2 >::SetIndex(itk::Index< 2 > const &)\n"
    "    itk::ImageRegion< 2 >::SetIndex(unsigned int,itk::IndexValueType)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkRegion_GetIndex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itk::ImageRegion< 2 > *arg1 = (itk::ImageRegion< 2 > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  itk::IndexValueType result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__ImageRegionT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkRegion_GetIndex" "', argument " "1"" of type '" "itk::ImageRegion< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::ImageRegion< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkRegion_GetIndex" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::IndexValueType)((itk::ImageRegion< 2 > const *)arg1)->GetIndex(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkRegion_GetIndex: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkRegion_GetIndex" );
    }
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkRegion_GetIndex(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkRegion_GetIndex", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_itkRegion_GetIndex__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itk__ImageRegionT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_itkRegion_GetIndex__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkRegion_GetIndex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itk::ImageRegion< 2 >::GetIndex() const\n"
    "    itk::ImageRegion< 2 >::GetIndex(unsigned int) const\n");
  return 0;
}


SWIGINTERN PyObject *itkRegion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkRegion_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkFixedArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::FixedArray< itk::SpacePrecisionType,2 > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_itkFixedArray", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::FixedArray< itk::SpacePrecisionType,2 > *)new itk::FixedArray< itk::SpacePrecisionType,2 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkFixedArray: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkFixedArray" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__FixedArrayT_double_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkFixedArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::FixedArray< itk::SpacePrecisionType,2 > *arg1 = (itk::FixedArray< itk::SpacePrecisionType,2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__FixedArrayT_double_2_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkFixedArray" "', argument " "1"" of type '" "itk::FixedArray< itk::SpacePrecisionType,2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::FixedArray< itk::SpacePrecisionType,2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkFixedArray: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkFixedArray" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkFixedArray_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::FixedArray< itk::SpacePrecisionType,2 > *arg1 = (itk::FixedArray< itk::SpacePrecisionType,2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__FixedArrayT_double_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkFixedArray_Size" "', argument " "1"" of type '" "itk::FixedArray< itk::SpacePrecisionType,2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::FixedArray< itk::SpacePrecisionType,2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->Size();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkFixedArray_Size: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkFixedArray_Size" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkFixedArray_SetElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::FixedArray< itk::SpacePrecisionType,2 > *arg1 = (itk::FixedArray< itk::SpacePrecisionType,2 > *) 0 ;
  unsigned short arg2 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkFixedArray_SetElement", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__FixedArrayT_double_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkFixedArray_SetElement" "', argument " "1"" of type '" "itk::FixedArray< itk::SpacePrecisionType,2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::FixedArray< itk::SpacePrecisionType,2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkFixedArray_SetElement" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "itkFixedArray_SetElement" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetElement(arg2,(double const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkFixedArray_SetElement: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkFixedArray_SetElement" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkFixedArray_GetElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::FixedArray< itk::SpacePrecisionType,2 > *arg1 = (itk::FixedArray< itk::SpacePrecisionType,2 > *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  double *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkFixedArray_GetElement", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__FixedArrayT_double_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkFixedArray_GetElement" "', argument " "1"" of type '" "itk::FixedArray< itk::SpacePrecisionType,2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::FixedArray< itk::SpacePrecisionType,2 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkFixedArray_GetElement" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (double *) &(arg1)->GetElement(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkFixedArray_GetElement: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkFixedArray_GetElement" );
    }
  }
  {
    resultobj = PyFloat_FromDouble( *result );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkFixedArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itk__FixedArrayT_double_2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkFixedArray_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Vector< itk::SpacePrecisionType,2 > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_itkVector", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::Vector< itk::SpacePrecisionType,2 > *)new itk::Vector< itk::SpacePrecisionType,2 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkVector: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkVector" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__VectorT_double_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Vector< itk::SpacePrecisionType,2 > *arg1 = (itk::Vector< itk::SpacePrecisionType,2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__VectorT_double_2_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkVector" "', argument " "1"" of type '" "itk::Vector< itk::SpacePrecisionType,2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Vector< itk::SpacePrecisionType,2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkVector: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkVector" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkVector_GetNorm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Vector< itk::SpacePrecisionType,2 > *arg1 = (itk::Vector< itk::SpacePrecisionType,2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itk::Vector< double,2 >::RealValueType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__VectorT_double_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkVector_GetNorm" "', argument " "1"" of type '" "itk::Vector< itk::SpacePrecisionType,2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::Vector< itk::SpacePrecisionType,2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((itk::Vector< itk::SpacePrecisionType,2 > const *)arg1)->GetNorm();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkVector_GetNorm: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkVector_GetNorm" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Vector< double,2 >::RealValueType(static_cast< const itk::Vector< double,2 >::RealValueType& >(result))), SWIGTYPE_p_NumericTraitsT_double_t__RealType, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkVector_GetSquaredNorm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Vector< itk::SpacePrecisionType,2 > *arg1 = (itk::Vector< itk::SpacePrecisionType,2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itk::Vector< double,2 >::RealValueType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__VectorT_double_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkVector_GetSquaredNorm" "', argument " "1"" of type '" "itk::Vector< itk::SpacePrecisionType,2 > const *""'"); 
  }
  arg1 = reinterpret_cast< itk::Vector< itk::SpacePrecisionType,2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((itk::Vector< itk::SpacePrecisionType,2 > const *)arg1)->GetSquaredNorm();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkVector_GetSquaredNorm: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkVector_GetSquaredNorm" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Vector< double,2 >::RealValueType(static_cast< const itk::Vector< double,2 >::RealValueType& >(result))), SWIGTYPE_p_NumericTraitsT_double_t__RealType, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkVector_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Vector< itk::SpacePrecisionType,2 > *arg1 = (itk::Vector< itk::SpacePrecisionType,2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itk::Vector< double,2 >::RealValueType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__VectorT_double_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkVector_Normalize" "', argument " "1"" of type '" "itk::Vector< itk::SpacePrecisionType,2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Vector< itk::SpacePrecisionType,2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->Normalize();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkVector_Normalize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkVector_Normalize" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Vector< double,2 >::RealValueType(static_cast< const itk::Vector< double,2 >::RealValueType& >(result))), SWIGTYPE_p_NumericTraitsT_double_t__RealType, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itk__VectorT_double_2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkVector_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Point< itk::SpacePrecisionType,2 > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_itkPoint", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itk::Point< itk::SpacePrecisionType,2 > *)new itk::Point< itk::SpacePrecisionType,2 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkPoint: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkPoint" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itk__PointT_double_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itk::Point< itk::SpacePrecisionType,2 > *arg1 = (itk::Point< itk::SpacePrecisionType,2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itk__PointT_double_2_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkPoint" "', argument " "1"" of type '" "itk::Point< itk::SpacePrecisionType,2 > *""'"); 
  }
  arg1 = reinterpret_cast< itk::Point< itk::SpacePrecisionType,2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkPoint: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkPoint" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkPoint_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itk__PointT_double_2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkPoint_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkIndent_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkIndent *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkIndent_New", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkIndent *)itkIndent::New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIndent_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIndent_New" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkIndent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkIndent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  itkIndent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_itkIndent" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkIndent *)new itkIndent(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkIndent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkIndent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkIndent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkIndent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkIndent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkIndent *)new itkIndent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkIndent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkIndent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkIndent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkIndent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkIndent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkIndent__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_itkIndent__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkIndent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkIndent::itkIndent(int)\n"
    "    itkIndent::itkIndent()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkIndent_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkIndent_GetNameOfClass", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)itkIndent::GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIndent_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIndent_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIndent_GetNextIndent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkIndent *arg1 = (itkIndent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkIndent result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkIndent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkIndent_GetNextIndent" "', argument " "1"" of type '" "itkIndent *""'"); 
  }
  arg1 = reinterpret_cast< itkIndent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetNextIndent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIndent_GetNextIndent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIndent_GetNextIndent" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkIndent(static_cast< const itkIndent& >(result))), SWIGTYPE_p_itkIndent, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkIndent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkIndent *arg1 = (itkIndent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkIndent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkIndent" "', argument " "1"" of type '" "itkIndent *""'"); 
  }
  arg1 = reinterpret_cast< itkIndent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkIndent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkIndent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkIndent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkIndent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkIndent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkLightObject_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkLightObject_New", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkLightObject::New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkLightObject_Pointer(static_cast< const itkLightObject_Pointer& >(result))), SWIGTYPE_p_itkLightObject_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject *arg1 = (itkLightObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_GetNameOfClass" "', argument " "1"" of type '" "itkLightObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkLightObject const *)arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkLightObject *arg1 = (itkLightObject *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Print" "', argument " "1"" of type '" "itkLightObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkLightObject_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkLightObject_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkLightObject_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkLightObject_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        ((itkLightObject const *)arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkLightObject *arg1 = (itkLightObject *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Print" "', argument " "1"" of type '" "itkLightObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkLightObject_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkLightObject_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        ((itkLightObject const *)arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkLightObject_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkLightObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkLightObject_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkLightObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_itkLightObject_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkLightObject_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkLightObject_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "itkLightObject_BreakOnError", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkLightObject::BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject *arg1 = (itkLightObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_ToString" "', argument " "1"" of type '" "itkLightObject *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString(arg1);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkLightObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject *arg1 = (itkLightObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkLightObject" "', argument " "1"" of type '" "itkLightObject *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_itkLightObject(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkLightObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkLightObject" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkLightObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkLightObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkLightObject_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkLightObject_Pointer *)new itkLightObject_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkLightObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkLightObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkLightObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkLightObject_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkLightObject_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkLightObject_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkLightObject_Pointer" "', argument " "1"" of type '" "itkLightObject_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkLightObject_Pointer" "', argument " "1"" of type '" "itkLightObject_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkLightObject_Pointer *)new itkLightObject_Pointer((itkLightObject_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkLightObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkLightObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkLightObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkLightObject_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkLightObject *arg1 = (itkLightObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkLightObject_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkLightObject_Pointer" "', argument " "1"" of type '" "itkLightObject *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkLightObject_Pointer *)new itkLightObject_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkLightObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkLightObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkLightObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkLightObject_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkLightObject_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkLightObject_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkLightObject_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkLightObject_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkLightObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkLightObject_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkLightObject_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject_Pointer::itkLightObject_Pointer()\n"
    "    itkLightObject_Pointer::itkLightObject_Pointer(itkLightObject_Pointer const &)\n"
    "    itkLightObject_Pointer::itkLightObject_Pointer(itkLightObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkLightObject_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkLightObject_Pointer" "', argument " "1"" of type '" "itkLightObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkLightObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkLightObject_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkLightObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer___deref__" "', argument " "1"" of type '" "itkLightObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkLightObject *)((itkLightObject_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkLightObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_IsNotNull" "', argument " "1"" of type '" "itkLightObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkLightObject_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_IsNull" "', argument " "1"" of type '" "itkLightObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkLightObject_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkLightObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_GetPointer" "', argument " "1"" of type '" "itkLightObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkLightObject *)((itkLightObject_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkLightObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkLightObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_New" "', argument " "1"" of type '" "itkLightObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkLightObject_Pointer(static_cast< const itkLightObject_Pointer& >(result))), SWIGTYPE_p_itkLightObject_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_GetNameOfClass" "', argument " "1"" of type '" "itkLightObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_Print" "', argument " "1"" of type '" "itkLightObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkLightObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkLightObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkLightObject_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkLightObject_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_Print" "', argument " "1"" of type '" "itkLightObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkLightObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkLightObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkLightObject_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkLightObject_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkLightObject_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkLightObject_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_itkLightObject_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkLightObject_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_BreakOnError" "', argument " "1"" of type '" "itkLightObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkLightObject_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkLightObject_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkLightObject_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkLightObject_Pointer *arg1 = (itkLightObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkLightObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkLightObject_Pointer_ToString" "', argument " "1"" of type '" "itkLightObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkLightObject_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkLightObject_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkLightObject_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkLightObject_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkObject_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_New", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkObject::New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkObject_Pointer(static_cast< const itkObject_Pointer& >(result))), SWIGTYPE_p_itkObject_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_GetNameOfClass" "', argument " "1"" of type '" "itkObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkObject const *)arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_AddObserver" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObject_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_GetCommand" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObject_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_GetCommand" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_InvokeEvent" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_RemoveObserver" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObject_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_RemoveAllObservers" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_HasObserver" "', argument " "1"" of type '" "itkObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkObject const *)arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_GetMetaDataDictionary" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_SetMetaDataDictionary" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkObject" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_itkObject(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkObject" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkObject_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkObject_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObject_Pointer *)new itkObject_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkObject_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkObject_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkObject_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkObject_Pointer" "', argument " "1"" of type '" "itkObject_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkObject_Pointer" "', argument " "1"" of type '" "itkObject_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObject_Pointer *)new itkObject_Pointer((itkObject_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkObject_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObject *arg1 = (itkObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkObject_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkObject_Pointer" "', argument " "1"" of type '" "itkObject *""'"); 
  }
  arg1 = reinterpret_cast< itkObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObject_Pointer *)new itkObject_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkObject_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkObject_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkObject_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkObject_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkObject_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkObject_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkObject_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkObject_Pointer::itkObject_Pointer()\n"
    "    itkObject_Pointer::itkObject_Pointer(itkObject_Pointer const &)\n"
    "    itkObject_Pointer::itkObject_Pointer(itkObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkObject_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkObject_Pointer" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkObject_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer___deref__" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObject *)((itkObject_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_IsNotNull" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkObject_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_IsNull" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkObject_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_GetPointer" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObject *)((itkObject_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_New" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkObject_Pointer(static_cast< const itkObject_Pointer& >(result))), SWIGTYPE_p_itkObject_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_GetNameOfClass" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_AddObserver" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObject_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_GetCommand" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObject_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_GetCommand" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_InvokeEvent" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_RemoveObserver" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObject_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_HasObserver" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObject_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_Print" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObject_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_Print" "', argument " "1"" of type '" "itkObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkObject_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkObject_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkObject_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkObject_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_itkObject_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkObject_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_BreakOnError" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObject_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObject_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObject_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObject_Pointer *arg1 = (itkObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObject_Pointer_ToString" "', argument " "1"" of type '" "itkObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObject_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkObject_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkObject_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkObject_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkProcessObject_GetProgress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject *arg1 = (itkProcessObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_GetProgress" "', argument " "1"" of type '" "itkProcessObject *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (float *) &(arg1)->GetProgress();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_GetProgress: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_GetProgress" );
    }
  }
  {
    resultobj = PyFloat_FromDouble( *result );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkProcessObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject *arg1 = (itkProcessObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkProcessObject" "', argument " "1"" of type '" "itkProcessObject *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_itkProcessObject(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkProcessObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkProcessObject" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkProcessObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkProcessObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkProcessObject_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject_Pointer *)new itkProcessObject_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkProcessObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkProcessObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkProcessObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkProcessObject_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkProcessObject_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkProcessObject_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkProcessObject_Pointer" "', argument " "1"" of type '" "itkProcessObject_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkProcessObject_Pointer" "', argument " "1"" of type '" "itkProcessObject_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject_Pointer *)new itkProcessObject_Pointer((itkProcessObject_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkProcessObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkProcessObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkProcessObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkProcessObject_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkProcessObject *arg1 = (itkProcessObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkProcessObject_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkProcessObject_Pointer" "', argument " "1"" of type '" "itkProcessObject *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject_Pointer *)new itkProcessObject_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkProcessObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkProcessObject_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkProcessObject_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkProcessObject_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkProcessObject_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkProcessObject_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkProcessObject_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkProcessObject_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkProcessObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkProcessObject_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkProcessObject_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkProcessObject_Pointer::itkProcessObject_Pointer()\n"
    "    itkProcessObject_Pointer::itkProcessObject_Pointer(itkProcessObject_Pointer const &)\n"
    "    itkProcessObject_Pointer::itkProcessObject_Pointer(itkProcessObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkProcessObject_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkProcessObject_Pointer" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkProcessObject_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkProcessObject_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkProcessObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer___deref__" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject *)((itkProcessObject_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkProcessObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_IsNotNull" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkProcessObject_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_IsNull" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkProcessObject_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkProcessObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_GetPointer" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject *)((itkProcessObject_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkProcessObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_GetProgress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_GetProgress" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (float *) &(*arg1)->GetProgress();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_GetProgress: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_GetProgress" );
    }
  }
  {
    resultobj = PyFloat_FromDouble( *result );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_New" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_New" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    itkObject * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_itkObject, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_GetNameOfClass" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkProcessObject_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_AddObserver" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkProcessObject_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkProcessObject_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkProcessObject_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkProcessObject_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_GetCommand" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkProcessObject_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_GetCommand" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkProcessObject_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_InvokeEvent" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkProcessObject_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkProcessObject_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkProcessObject_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_RemoveObserver" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkProcessObject_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkProcessObject_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_HasObserver" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkProcessObject_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkProcessObject_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkProcessObject_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkProcessObject_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkProcessObject_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_Print" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkProcessObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkProcessObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkProcessObject_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkProcessObject_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_Print" "', argument " "1"" of type '" "itkProcessObject_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkProcessObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkProcessObject_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkProcessObject_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkProcessObject_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkProcessObject_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkProcessObject_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_itkProcessObject_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkProcessObject_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_BreakOnError" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProcessObject_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProcessObject_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProcessObject_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProcessObject_Pointer *arg1 = (itkProcessObject_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProcessObject_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProcessObject_Pointer_ToString" "', argument " "1"" of type '" "itkProcessObject_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkProcessObject_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkProcessObject_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkProcessObject_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkProcessObject_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetNameOfClass" "', argument " "1"" of type '" "itkObjectFactoryBase const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkObjectFactoryBase const *)arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_CreateInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  itkLightObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_CreateInstance" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkObjectFactoryBase::CreateInstance((char const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_CreateInstance: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_CreateInstance" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    itkLightObject * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_itkLightObject, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_CreateAllInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< itkLightObject_Pointer > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_CreateAllInstance" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkObjectFactoryBase::CreateAllInstance((char const *)arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_CreateAllInstance: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_CreateAllInstance" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< itkLightObject_Pointer >(static_cast< const std::list< itkLightObject_Pointer >& >(result))), SWIGTYPE_p_std__listT_itkLightObject_Pointer_t, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_ReHash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_ReHash", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkObjectFactoryBase::ReHash();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_ReHash: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_ReHash" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_RegisterFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_RegisterFactory" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkObjectFactoryBase::RegisterFactory(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_RegisterFactory: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_RegisterFactory" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_UnRegisterFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_UnRegisterFactory" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkObjectFactoryBase::UnRegisterFactory(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_UnRegisterFactory: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_UnRegisterFactory" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_UnRegisterAllFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_UnRegisterAllFactories", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkObjectFactoryBase::UnRegisterAllFactories();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_UnRegisterAllFactories: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_UnRegisterAllFactories" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetRegisteredFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::list< itkObjectFactoryBase * > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_GetRegisteredFactories", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkObjectFactoryBase::GetRegisteredFactories();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetRegisteredFactories: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetRegisteredFactories" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< itkObjectFactoryBase * >(static_cast< const std::list< itkObjectFactoryBase * >& >(result))), SWIGTYPE_p_std__listT_itkObjectFactoryBase_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetITKSourceVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetITKSourceVersion" "', argument " "1"" of type '" "itkObjectFactoryBase const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkObjectFactoryBase const *)arg1)->GetITKSourceVersion();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetITKSourceVersion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetITKSourceVersion" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetDescription" "', argument " "1"" of type '" "itkObjectFactoryBase const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkObjectFactoryBase const *)arg1)->GetDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetDescription" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetClassOverrideNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetClassOverrideNames" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetClassOverrideNames();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetClassOverrideNames: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetClassOverrideNames" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< std::string >(static_cast< const std::list< std::string >& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetClassOverrideWithNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetClassOverrideWithNames" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetClassOverrideWithNames();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetClassOverrideWithNames: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetClassOverrideWithNames" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< std::string >(static_cast< const std::list< std::string >& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetClassOverrideDescriptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetClassOverrideDescriptions" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetClassOverrideDescriptions();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetClassOverrideDescriptions: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetClassOverrideDescriptions" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< std::string >(static_cast< const std::list< std::string >& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetEnableFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::list< bool > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetEnableFlags" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetEnableFlags();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetEnableFlags: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetEnableFlags" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< bool >(static_cast< const std::list< bool >& >(result))), SWIGTYPE_p_std__listT_bool_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_SetEnableFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  bool arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_SetEnableFlag", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_SetEnableFlag" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObjectFactoryBase_SetEnableFlag" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObjectFactoryBase_SetEnableFlag" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(swig_obj[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "itkObjectFactoryBase_SetEnableFlag" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetEnableFlag(arg2,(char const *)arg3,(char const *)arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_SetEnableFlag: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_SetEnableFlag" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetEnableFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject *swig_obj[3] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_GetEnableFlag", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetEnableFlag" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_GetEnableFlag" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObjectFactoryBase_GetEnableFlag" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(arg1)->GetEnableFlag((char const *)arg2,(char const *)arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetEnableFlag: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetEnableFlag" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Disable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Disable", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Disable" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Disable" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Disable((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Disable: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Disable" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_GetLibraryPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_GetLibraryPath" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(arg1)->GetLibraryPath();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_GetLibraryPath: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_GetLibraryPath" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkObjectFactoryBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkObjectFactoryBase" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_itkObjectFactoryBase(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkObjectFactoryBase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkObjectFactoryBase" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkObjectFactoryBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkObjectFactoryBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkObjectFactoryBase_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObjectFactoryBase_Pointer *)new itkObjectFactoryBase_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkObjectFactoryBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkObjectFactoryBase_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObjectFactoryBase_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkObjectFactoryBase_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkObjectFactoryBase_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkObjectFactoryBase_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkObjectFactoryBase_Pointer" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkObjectFactoryBase_Pointer" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObjectFactoryBase_Pointer *)new itkObjectFactoryBase_Pointer((itkObjectFactoryBase_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkObjectFactoryBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkObjectFactoryBase_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObjectFactoryBase_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkObjectFactoryBase_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase *arg1 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkObjectFactoryBase_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkObjectFactoryBase_Pointer" "', argument " "1"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObjectFactoryBase_Pointer *)new itkObjectFactoryBase_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkObjectFactoryBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkObjectFactoryBase_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObjectFactoryBase_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkObjectFactoryBase_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkObjectFactoryBase_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkObjectFactoryBase_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkObjectFactoryBase_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkObjectFactoryBase_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkObjectFactoryBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkObjectFactoryBase_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkObjectFactoryBase_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkObjectFactoryBase_Pointer::itkObjectFactoryBase_Pointer()\n"
    "    itkObjectFactoryBase_Pointer::itkObjectFactoryBase_Pointer(itkObjectFactoryBase_Pointer const &)\n"
    "    itkObjectFactoryBase_Pointer::itkObjectFactoryBase_Pointer(itkObjectFactoryBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkObjectFactoryBase_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkObjectFactoryBase_Pointer" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkObjectFactoryBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkObjectFactoryBase_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObjectFactoryBase *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer___deref__" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObjectFactoryBase *)((itkObjectFactoryBase_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_IsNotNull" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkObjectFactoryBase_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_IsNull" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkObjectFactoryBase_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObjectFactoryBase *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetPointer" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkObjectFactoryBase *)((itkObjectFactoryBase_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetNameOfClass" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_CreateInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  itkLightObject_Pointer result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_CreateInstance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_CreateInstance" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_CreateInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->CreateInstance((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_CreateInstance: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_CreateInstance" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    itkLightObject * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_itkLightObject, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_CreateAllInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  SwigValueWrapper< std::list< itkLightObject_Pointer > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_CreateAllInstance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_CreateAllInstance" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_CreateAllInstance" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->CreateAllInstance((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_CreateAllInstance: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_CreateAllInstance" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< itkLightObject_Pointer >(static_cast< const std::list< itkLightObject_Pointer >& >(result))), SWIGTYPE_p_std__listT_itkLightObject_Pointer_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_ReHash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_ReHash" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->ReHash();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_ReHash: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_ReHash" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_RegisterFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  itkObjectFactoryBase *arg2 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_RegisterFactory", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_RegisterFactory" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_RegisterFactory" "', argument " "2"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg2 = reinterpret_cast< itkObjectFactoryBase * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RegisterFactory(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_RegisterFactory: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_RegisterFactory" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_UnRegisterFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  itkObjectFactoryBase *arg2 = (itkObjectFactoryBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_UnRegisterFactory", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_UnRegisterFactory" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkObjectFactoryBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_UnRegisterFactory" "', argument " "2"" of type '" "itkObjectFactoryBase *""'"); 
  }
  arg2 = reinterpret_cast< itkObjectFactoryBase * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->UnRegisterFactory(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_UnRegisterFactory: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_UnRegisterFactory" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_UnRegisterAllFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_UnRegisterAllFactories" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->UnRegisterAllFactories();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_UnRegisterAllFactories: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_UnRegisterAllFactories" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetRegisteredFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< itkObjectFactoryBase * > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetRegisteredFactories" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetRegisteredFactories();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetRegisteredFactories: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetRegisteredFactories" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< itkObjectFactoryBase * >(static_cast< const std::list< itkObjectFactoryBase * >& >(result))), SWIGTYPE_p_std__listT_itkObjectFactoryBase_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetITKSourceVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetITKSourceVersion" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetITKSourceVersion();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetITKSourceVersion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetITKSourceVersion" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetDescription" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetDescription" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetClassOverrideNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetClassOverrideNames" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetClassOverrideNames();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetClassOverrideNames: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetClassOverrideNames" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< std::string >(static_cast< const std::list< std::string >& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetClassOverrideWithNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetClassOverrideWithNames" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetClassOverrideWithNames();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetClassOverrideWithNames: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetClassOverrideWithNames" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< std::string >(static_cast< const std::list< std::string >& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetClassOverrideDescriptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::list< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetClassOverrideDescriptions" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetClassOverrideDescriptions();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetClassOverrideDescriptions: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetClassOverrideDescriptions" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< std::string >(static_cast< const std::list< std::string >& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetEnableFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::list< bool > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetEnableFlags" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetEnableFlags();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetEnableFlags: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetEnableFlags" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list< bool >(static_cast< const std::list< bool >& >(result))), SWIGTYPE_p_std__listT_bool_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_SetEnableFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  bool arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_SetEnableFlag", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_SetEnableFlag" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObjectFactoryBase_Pointer_SetEnableFlag" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObjectFactoryBase_Pointer_SetEnableFlag" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(swig_obj[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "itkObjectFactoryBase_Pointer_SetEnableFlag" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetEnableFlag(arg2,(char const *)arg3,(char const *)arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_SetEnableFlag: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_SetEnableFlag" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetEnableFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject *swig_obj[3] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_GetEnableFlag", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetEnableFlag" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_GetEnableFlag" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObjectFactoryBase_Pointer_GetEnableFlag" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->GetEnableFlag((char const *)arg2,(char const *)arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetEnableFlag: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetEnableFlag" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_Disable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_Disable", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_Disable" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_Disable" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Disable((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_Disable: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_Disable" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetLibraryPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetLibraryPath" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetLibraryPath();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetLibraryPath: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetLibraryPath" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_New" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_New" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    itkObject * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_itkObject, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_AddObserver" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObjectFactoryBase_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObjectFactoryBase_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetCommand" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObjectFactoryBase_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetCommand" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_InvokeEvent" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObjectFactoryBase_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_RemoveObserver" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkObjectFactoryBase_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_HasObserver" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObjectFactoryBase_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObjectFactoryBase_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkObjectFactoryBase_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkObjectFactoryBase_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkObjectFactoryBase_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_itkObjectFactoryBase_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkObjectFactoryBase_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_BreakOnError" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkObjectFactoryBase_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkObjectFactoryBase_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkObjectFactoryBase_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkObjectFactoryBase_Pointer *arg1 = (itkObjectFactoryBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkObjectFactoryBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkObjectFactoryBase_Pointer_ToString" "', argument " "1"" of type '" "itkObjectFactoryBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkObjectFactoryBase_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkObjectFactoryBase_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkObjectFactoryBase_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkObjectFactoryBase_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_GetMetaDataObjectTypeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase *arg1 = (itkMetaDataObjectBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::type_info *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_GetMetaDataObjectTypeInfo" "', argument " "1"" of type '" "itkMetaDataObjectBase const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::type_info *) &((itkMetaDataObjectBase const *)arg1)->GetMetaDataObjectTypeInfo();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_GetMetaDataObjectTypeInfo: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_GetMetaDataObjectTypeInfo" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__type_info, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_GetMetaDataObjectTypeName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase *arg1 = (itkMetaDataObjectBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_GetMetaDataObjectTypeName" "', argument " "1"" of type '" "itkMetaDataObjectBase const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkMetaDataObjectBase const *)arg1)->GetMetaDataObjectTypeName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_GetMetaDataObjectTypeName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_GetMetaDataObjectTypeName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase *arg1 = (itkMetaDataObjectBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_GetNameOfClass" "', argument " "1"" of type '" "itkMetaDataObjectBase const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkMetaDataObjectBase const *)arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Print(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase *arg1 = (itkMetaDataObjectBase *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataObjectBase_Print", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Print" "', argument " "1"" of type '" "itkMetaDataObjectBase const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataObjectBase_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataObjectBase_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        ((itkMetaDataObjectBase const *)arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkMetaDataObjectBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase *arg1 = (itkMetaDataObjectBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkMetaDataObjectBase" "', argument " "1"" of type '" "itkMetaDataObjectBase *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_itkMetaDataObjectBase(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkMetaDataObjectBase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkMetaDataObjectBase" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkMetaDataObjectBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkMetaDataObjectBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkMetaDataObjectBase_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataObjectBase_Pointer *)new itkMetaDataObjectBase_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkMetaDataObjectBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkMetaDataObjectBase_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataObjectBase_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkMetaDataObjectBase_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkMetaDataObjectBase_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkMetaDataObjectBase_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkMetaDataObjectBase_Pointer" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkMetaDataObjectBase_Pointer" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataObjectBase_Pointer *)new itkMetaDataObjectBase_Pointer((itkMetaDataObjectBase_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkMetaDataObjectBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkMetaDataObjectBase_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataObjectBase_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkMetaDataObjectBase_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase *arg1 = (itkMetaDataObjectBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkMetaDataObjectBase_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkMetaDataObjectBase_Pointer" "', argument " "1"" of type '" "itkMetaDataObjectBase *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataObjectBase_Pointer *)new itkMetaDataObjectBase_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkMetaDataObjectBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkMetaDataObjectBase_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataObjectBase_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkMetaDataObjectBase_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkMetaDataObjectBase_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkMetaDataObjectBase_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkMetaDataObjectBase_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkMetaDataObjectBase_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkMetaDataObjectBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkMetaDataObjectBase_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkMetaDataObjectBase_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkMetaDataObjectBase_Pointer::itkMetaDataObjectBase_Pointer()\n"
    "    itkMetaDataObjectBase_Pointer::itkMetaDataObjectBase_Pointer(itkMetaDataObjectBase_Pointer const &)\n"
    "    itkMetaDataObjectBase_Pointer::itkMetaDataObjectBase_Pointer(itkMetaDataObjectBase *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkMetaDataObjectBase_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkMetaDataObjectBase_Pointer" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkMetaDataObjectBase_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkMetaDataObjectBase_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataObjectBase *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer___deref__" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataObjectBase *)((itkMetaDataObjectBase_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_IsNotNull" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkMetaDataObjectBase_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_IsNull" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkMetaDataObjectBase_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataObjectBase *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_GetPointer" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataObjectBase *)((itkMetaDataObjectBase_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::type_info *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeInfo" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (std::type_info *) &(*arg1)->GetMetaDataObjectTypeInfo();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeInfo: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeInfo" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__type_info, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeName" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetMetaDataObjectTypeName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_GetNameOfClass" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_Print(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataObjectBase_Pointer_Print", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_Print" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataObjectBase_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataObjectBase_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkLightObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_New" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_New" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    itkLightObject * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_itkLightObject, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_BreakOnError" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataObjectBase_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataObjectBase_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataObjectBase_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataObjectBase_Pointer *arg1 = (itkMetaDataObjectBase_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataObjectBase_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataObjectBase_Pointer_ToString" "', argument " "1"" of type '" "itkMetaDataObjectBase_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataObjectBase_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkMetaDataObjectBase_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkMetaDataObjectBase_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkMetaDataObjectBase_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_Print(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_Print", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_Print" "', argument " "1"" of type '" "itkMetaDataDictionary const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        ((itkMetaDataDictionary const *)arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkMetaDataDictionary__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *)new itkMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkMetaDataDictionary__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkMetaDataDictionary *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkMetaDataDictionary" "', argument " "1"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkMetaDataDictionary" "', argument " "1"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *)new itkMetaDataDictionary((itkMetaDataDictionary const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkMetaDataDictionary(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkMetaDataDictionary", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkMetaDataDictionary__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkMetaDataDictionary__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkMetaDataDictionary'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkMetaDataDictionary::itkMetaDataDictionary()\n"
    "    itkMetaDataDictionary::itkMetaDataDictionary(itkMetaDataDictionary const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkMetaDataDictionary" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetKeys(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetKeys" "', argument " "1"" of type '" "itkMetaDataDictionary const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((itkMetaDataDictionary const *)arg1)->GetKeys();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetKeys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetKeys" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_HasKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_HasKey", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_HasKey" "', argument " "1"" of type '" "itkMetaDataDictionary const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_HasKey" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_HasKey" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkMetaDataDictionary const *)arg1)->HasKey((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_HasKey: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_HasKey" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  itkMetaDataObjectBase *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_Get", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_Get" "', argument " "1"" of type '" "itkMetaDataDictionary const *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_Get" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_Get" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataObjectBase *)((itkMetaDataDictionary const *)arg1)->Get((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_Get: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_Get" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkMetaDataObjectBase, 1);
    if (result) {
      result->Register();
    }
  }
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  itkMetaDataObjectBase *arg3 = (itkMetaDataObjectBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_Set", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_Set" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_Set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_Set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkMetaDataObjectBase, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkMetaDataDictionary_Set" "', argument " "3"" of type '" "itkMetaDataObjectBase *""'"); 
  }
  arg3 = reinterpret_cast< itkMetaDataObjectBase * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Set((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_Set: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_Set" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetType" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (int)itkMetaDataDictionary_GetType(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetString", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetString" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetString" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetString" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkMetaDataDictionary_GetString(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetString" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_SetString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_SetString", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_SetString" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_SetString" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetString" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkMetaDataDictionary_SetString" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetString" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkMetaDataDictionary_SetString(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_SetString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_SetString" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetInt", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetInt" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetInt" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetInt" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)itkMetaDataDictionary_GetInt(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetInt" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_SetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_SetInt", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_SetInt" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_SetInt" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetInt" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "itkMetaDataDictionary_SetInt" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkMetaDataDictionary_SetInt(arg1,(std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_SetInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_SetInt" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetDouble", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetDouble" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetDouble" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetDouble" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (double)itkMetaDataDictionary_GetDouble(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetDouble" );
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_SetDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_SetDouble", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_SetDouble" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_SetDouble" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetDouble" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "itkMetaDataDictionary_SetDouble" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkMetaDataDictionary_SetDouble(arg1,(std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_SetDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_SetDouble" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetGCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  otb::GCP result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetGCP", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetGCP" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetGCP" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetGCP" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkMetaDataDictionary_GetGCP(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetGCP: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetGCP" );
    }
  }
  resultobj = SWIG_NewPointerObj((new otb::GCP(static_cast< const otb::GCP& >(result))), SWIGTYPE_p_otb__GCP, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_SetGCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  otb::GCP *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_SetGCP", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_SetGCP" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_SetGCP" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetGCP" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_otb__GCP,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkMetaDataDictionary_SetGCP" "', argument " "3"" of type '" "otb::GCP const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetGCP" "', argument " "3"" of type '" "otb::GCP const &""'"); 
  }
  arg3 = reinterpret_cast< otb::GCP * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkMetaDataDictionary_SetGCP(arg1,(std::string const &)*arg2,(otb::GCP const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_SetGCP: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_SetGCP" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::vector< double,std::allocator< double > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetVector", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetVector" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkMetaDataDictionary_GetVector(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetVector: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetVector" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_SetVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_SetVector", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_SetVector" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_SetVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkMetaDataDictionary_SetVector" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetVector" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkMetaDataDictionary_SetVector(arg1,(std::string const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_SetVector: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_SetVector" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetVectorDataKWL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  otb::VectorDataKeywordlist result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetVectorDataKWL", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetVectorDataKWL" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetVectorDataKWL" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetVectorDataKWL" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkMetaDataDictionary_GetVectorDataKWL(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetVectorDataKWL: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetVectorDataKWL" );
    }
  }
  resultobj = SWIG_NewPointerObj((new otb::VectorDataKeywordlist(static_cast< const otb::VectorDataKeywordlist& >(result))), SWIGTYPE_p_otb__VectorDataKeywordlist, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_SetVectorDataKWL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  otb::VectorDataKeywordlist *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_SetVectorDataKWL", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_SetVectorDataKWL" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_SetVectorDataKWL" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetVectorDataKWL" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_otb__VectorDataKeywordlist,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkMetaDataDictionary_SetVectorDataKWL" "', argument " "3"" of type '" "otb::VectorDataKeywordlist const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetVectorDataKWL" "', argument " "3"" of type '" "otb::VectorDataKeywordlist const &""'"); 
  }
  arg3 = reinterpret_cast< otb::VectorDataKeywordlist * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkMetaDataDictionary_SetVectorDataKWL(arg1,(std::string const &)*arg2,(otb::VectorDataKeywordlist const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_SetVectorDataKWL: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_SetVectorDataKWL" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_GetBoolVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::vector< bool,std::allocator< bool > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_GetBoolVector", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_GetBoolVector" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_GetBoolVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_GetBoolVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkMetaDataDictionary_GetBoolVector(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_GetBoolVector: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_GetBoolVector" );
    }
  }
  resultobj = swig::from(static_cast< std::vector<bool,std::allocator< bool > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkMetaDataDictionary_SetBoolVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkMetaDataDictionary *arg1 = (itkMetaDataDictionary *) 0 ;
  std::string *arg2 = 0 ;
  std::vector< bool,std::allocator< bool > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkMetaDataDictionary_SetBoolVector", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkMetaDataDictionary_SetBoolVector" "', argument " "1"" of type '" "itkMetaDataDictionary *""'"); 
  }
  arg1 = reinterpret_cast< itkMetaDataDictionary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkMetaDataDictionary_SetBoolVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetBoolVector" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::vector<bool,std::allocator< bool > > *ptr = (std::vector<bool,std::allocator< bool > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkMetaDataDictionary_SetBoolVector" "', argument " "3"" of type '" "std::vector< bool,std::allocator< bool > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkMetaDataDictionary_SetBoolVector" "', argument " "3"" of type '" "std::vector< bool,std::allocator< bool > > const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        itkMetaDataDictionary_SetBoolVector(arg1,(std::string const &)*arg2,(std::vector< bool,std::allocator< bool > > const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkMetaDataDictionary_SetBoolVector: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkMetaDataDictionary_SetBoolVector" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *itkMetaDataDictionary_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkMetaDataDictionary, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkMetaDataDictionary_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkCommand_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand *arg1 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_GetNameOfClass" "', argument " "1"" of type '" "itkCommand const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkCommand const *)arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand *arg1 = (itkCommand *) 0 ;
  itkObject *arg2 = (itkObject *) 0 ;
  itkEventObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Execute", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Execute" "', argument " "1"" of type '" "itkCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Execute" "', argument " "2"" of type '" "itkObject *""'"); 
  }
  arg2 = reinterpret_cast< itkObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkCommand_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  arg3 = reinterpret_cast< itkEventObject * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Execute(arg2,(itkEventObject const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Execute: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Execute" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand *arg1 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkCommand" "', argument " "1"" of type '" "itkCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_itkCommand(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkCommand" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkCommand_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkCommand, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkCommand_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand_Pointer *)new itkCommand_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkCommand_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkCommand_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkCommand_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkCommand_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkCommand_Pointer" "', argument " "1"" of type '" "itkCommand_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkCommand_Pointer" "', argument " "1"" of type '" "itkCommand_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand_Pointer *)new itkCommand_Pointer((itkCommand_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkCommand_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkCommand_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkCommand *arg1 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkCommand_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkCommand_Pointer" "', argument " "1"" of type '" "itkCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand_Pointer *)new itkCommand_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkCommand_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkCommand_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkCommand_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkCommand_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkCommand_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkCommand_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkCommand, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkCommand_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkCommand_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkCommand_Pointer::itkCommand_Pointer()\n"
    "    itkCommand_Pointer::itkCommand_Pointer(itkCommand_Pointer const &)\n"
    "    itkCommand_Pointer::itkCommand_Pointer(itkCommand *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkCommand_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkCommand_Pointer" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkCommand_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkCommand *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer___deref__" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)((itkCommand_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_IsNotNull" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkCommand_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_IsNull" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkCommand_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkCommand *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_GetPointer" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)((itkCommand_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_GetNameOfClass" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_Execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  itkObject *arg2 = (itkObject *) 0 ;
  itkEventObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_Execute", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_Execute" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Pointer_Execute" "', argument " "2"" of type '" "itkObject *""'"); 
  }
  arg2 = reinterpret_cast< itkObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkCommand_Pointer_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  arg3 = reinterpret_cast< itkEventObject * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Execute(arg2,(itkEventObject const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_Execute: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_Execute" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_New" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_New" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    itkObject * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_itkObject, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_AddObserver" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkCommand_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_GetCommand" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkCommand_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_GetCommand" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_InvokeEvent" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_RemoveObserver" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkCommand_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_HasObserver" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_Print" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkCommand_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_Print" "', argument " "1"" of type '" "itkCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkCommand_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkCommand_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkCommand_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkCommand_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_itkCommand_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkCommand_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_BreakOnError" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkCommand_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkCommand_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkCommand_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkCommand_Pointer *arg1 = (itkCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkCommand_Pointer_ToString" "', argument " "1"" of type '" "itkCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkCommand_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkCommand_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkCommand_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkCommand_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_itkEventObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEventObject *arg1 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEventObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkEventObject" "', argument " "1"" of type '" "itkEventObject *""'"); 
  }
  arg1 = reinterpret_cast< itkEventObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkEventObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkEventObject" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEventObject_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEventObject *arg1 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEventObject_MakeObject" "', argument " "1"" of type '" "itkEventObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkEventObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkEventObject const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEventObject_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEventObject_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEventObject_Print(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEventObject *arg1 = (itkEventObject *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkEventObject_Print", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEventObject_Print" "', argument " "1"" of type '" "itkEventObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkEventObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkEventObject_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkEventObject_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        ((itkEventObject const *)arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEventObject_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEventObject_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEventObject_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEventObject *arg1 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEventObject_GetEventName" "', argument " "1"" of type '" "itkEventObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkEventObject * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkEventObject const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEventObject_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEventObject_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEventObject_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEventObject *arg1 = (itkEventObject *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkEventObject_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEventObject_CheckEvent" "', argument " "1"" of type '" "itkEventObject const *""'"); 
  }
  arg1 = reinterpret_cast< itkEventObject * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkEventObject_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkEventObject const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEventObject_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEventObject_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkEventObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkEventObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkNoEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkNoEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkNoEvent *)new itkNoEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkNoEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkNoEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkNoEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkNoEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkNoEvent *arg1 = (itkNoEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkNoEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkNoEvent" "', argument " "1"" of type '" "itkNoEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkNoEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkNoEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkNoEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkNoEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkNoEvent *arg1 = (itkNoEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkNoEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkNoEvent_GetEventName" "', argument " "1"" of type '" "itkNoEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkNoEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkNoEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkNoEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkNoEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkNoEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkNoEvent *arg1 = (itkNoEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkNoEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkNoEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkNoEvent_CheckEvent" "', argument " "1"" of type '" "itkNoEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkNoEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkNoEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkNoEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkNoEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkNoEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkNoEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkNoEvent *arg1 = (itkNoEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkNoEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkNoEvent_MakeObject" "', argument " "1"" of type '" "itkNoEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkNoEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkNoEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkNoEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkNoEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkNoEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkNoEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkNoEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkNoEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkNoEvent" "', argument " "1"" of type '" "itkNoEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkNoEvent" "', argument " "1"" of type '" "itkNoEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkNoEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkNoEvent *)new itkNoEvent((itkNoEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkNoEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkNoEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkNoEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkNoEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkNoEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkNoEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkNoEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkNoEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkNoEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkNoEvent::itkNoEvent()\n"
    "    itkNoEvent::itkNoEvent(itkNoEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkNoEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkNoEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkNoEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkAnyEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkAnyEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkAnyEvent *)new itkAnyEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkAnyEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkAnyEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkAnyEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkAnyEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAnyEvent *arg1 = (itkAnyEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAnyEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkAnyEvent" "', argument " "1"" of type '" "itkAnyEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkAnyEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkAnyEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkAnyEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkAnyEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAnyEvent *arg1 = (itkAnyEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAnyEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkAnyEvent_GetEventName" "', argument " "1"" of type '" "itkAnyEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkAnyEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkAnyEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkAnyEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkAnyEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkAnyEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAnyEvent *arg1 = (itkAnyEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkAnyEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAnyEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkAnyEvent_CheckEvent" "', argument " "1"" of type '" "itkAnyEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkAnyEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkAnyEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkAnyEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkAnyEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkAnyEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkAnyEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAnyEvent *arg1 = (itkAnyEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAnyEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkAnyEvent_MakeObject" "', argument " "1"" of type '" "itkAnyEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkAnyEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkAnyEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkAnyEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkAnyEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkAnyEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkAnyEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkAnyEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkAnyEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkAnyEvent" "', argument " "1"" of type '" "itkAnyEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkAnyEvent" "', argument " "1"" of type '" "itkAnyEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkAnyEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkAnyEvent *)new itkAnyEvent((itkAnyEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkAnyEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkAnyEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkAnyEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkAnyEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkAnyEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkAnyEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkAnyEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkAnyEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkAnyEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkAnyEvent::itkAnyEvent()\n"
    "    itkAnyEvent::itkAnyEvent(itkAnyEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkAnyEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkAnyEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkAnyEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkDeleteEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkDeleteEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkDeleteEvent *)new itkDeleteEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkDeleteEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkDeleteEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkDeleteEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkDeleteEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkDeleteEvent *arg1 = (itkDeleteEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkDeleteEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkDeleteEvent" "', argument " "1"" of type '" "itkDeleteEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkDeleteEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkDeleteEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkDeleteEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkDeleteEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkDeleteEvent *arg1 = (itkDeleteEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkDeleteEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkDeleteEvent_GetEventName" "', argument " "1"" of type '" "itkDeleteEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkDeleteEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkDeleteEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkDeleteEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkDeleteEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkDeleteEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkDeleteEvent *arg1 = (itkDeleteEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkDeleteEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkDeleteEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkDeleteEvent_CheckEvent" "', argument " "1"" of type '" "itkDeleteEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkDeleteEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkDeleteEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkDeleteEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkDeleteEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkDeleteEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkDeleteEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkDeleteEvent *arg1 = (itkDeleteEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkDeleteEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkDeleteEvent_MakeObject" "', argument " "1"" of type '" "itkDeleteEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkDeleteEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkDeleteEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkDeleteEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkDeleteEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkDeleteEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkDeleteEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkDeleteEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkDeleteEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkDeleteEvent" "', argument " "1"" of type '" "itkDeleteEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkDeleteEvent" "', argument " "1"" of type '" "itkDeleteEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkDeleteEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkDeleteEvent *)new itkDeleteEvent((itkDeleteEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkDeleteEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkDeleteEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkDeleteEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkDeleteEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkDeleteEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkDeleteEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkDeleteEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkDeleteEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkDeleteEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkDeleteEvent::itkDeleteEvent()\n"
    "    itkDeleteEvent::itkDeleteEvent(itkDeleteEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkDeleteEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkDeleteEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkDeleteEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkEndEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkEndEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEndEvent *)new itkEndEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkEndEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkEndEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEndEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkEndEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndEvent *arg1 = (itkEndEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkEndEvent" "', argument " "1"" of type '" "itkEndEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkEndEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkEndEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkEndEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEndEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndEvent *arg1 = (itkEndEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEndEvent_GetEventName" "', argument " "1"" of type '" "itkEndEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkEndEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkEndEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEndEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEndEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEndEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndEvent *arg1 = (itkEndEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkEndEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEndEvent_CheckEvent" "', argument " "1"" of type '" "itkEndEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkEndEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkEndEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkEndEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEndEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEndEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEndEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndEvent *arg1 = (itkEndEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEndEvent_MakeObject" "', argument " "1"" of type '" "itkEndEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkEndEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkEndEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEndEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEndEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkEndEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkEndEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkEndEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkEndEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkEndEvent" "', argument " "1"" of type '" "itkEndEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkEndEvent" "', argument " "1"" of type '" "itkEndEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkEndEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEndEvent *)new itkEndEvent((itkEndEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkEndEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkEndEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEndEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkEndEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkEndEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkEndEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkEndEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkEndEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkEndEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkEndEvent::itkEndEvent()\n"
    "    itkEndEvent::itkEndEvent(itkEndEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkEndEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkEndEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkEndEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkExitEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkExitEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkExitEvent *)new itkExitEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkExitEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkExitEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkExitEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkExitEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkExitEvent *arg1 = (itkExitEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkExitEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkExitEvent" "', argument " "1"" of type '" "itkExitEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkExitEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkExitEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkExitEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkExitEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkExitEvent *arg1 = (itkExitEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkExitEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkExitEvent_GetEventName" "', argument " "1"" of type '" "itkExitEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkExitEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkExitEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkExitEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkExitEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkExitEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkExitEvent *arg1 = (itkExitEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkExitEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkExitEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkExitEvent_CheckEvent" "', argument " "1"" of type '" "itkExitEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkExitEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkExitEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkExitEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkExitEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkExitEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkExitEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkExitEvent *arg1 = (itkExitEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkExitEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkExitEvent_MakeObject" "', argument " "1"" of type '" "itkExitEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkExitEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkExitEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkExitEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkExitEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkExitEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkExitEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkExitEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkExitEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkExitEvent" "', argument " "1"" of type '" "itkExitEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkExitEvent" "', argument " "1"" of type '" "itkExitEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkExitEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkExitEvent *)new itkExitEvent((itkExitEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkExitEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkExitEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkExitEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkExitEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkExitEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkExitEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkExitEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkExitEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkExitEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkExitEvent::itkExitEvent()\n"
    "    itkExitEvent::itkExitEvent(itkExitEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkExitEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkExitEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkExitEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkIterationEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkIterationEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkIterationEvent *)new itkIterationEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkIterationEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkIterationEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkIterationEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkIterationEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkIterationEvent *arg1 = (itkIterationEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkIterationEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkIterationEvent" "', argument " "1"" of type '" "itkIterationEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkIterationEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkIterationEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkIterationEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIterationEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkIterationEvent *arg1 = (itkIterationEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkIterationEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkIterationEvent_GetEventName" "', argument " "1"" of type '" "itkIterationEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkIterationEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkIterationEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIterationEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIterationEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIterationEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkIterationEvent *arg1 = (itkIterationEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkIterationEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkIterationEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkIterationEvent_CheckEvent" "', argument " "1"" of type '" "itkIterationEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkIterationEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkIterationEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkIterationEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIterationEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIterationEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkIterationEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkIterationEvent *arg1 = (itkIterationEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkIterationEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkIterationEvent_MakeObject" "', argument " "1"" of type '" "itkIterationEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkIterationEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkIterationEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkIterationEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkIterationEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkIterationEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkIterationEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkIterationEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkIterationEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkIterationEvent" "', argument " "1"" of type '" "itkIterationEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkIterationEvent" "', argument " "1"" of type '" "itkIterationEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkIterationEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkIterationEvent *)new itkIterationEvent((itkIterationEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkIterationEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkIterationEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkIterationEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkIterationEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkIterationEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkIterationEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkIterationEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkIterationEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkIterationEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkIterationEvent::itkIterationEvent()\n"
    "    itkIterationEvent::itkIterationEvent(itkIterationEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkIterationEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkIterationEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkIterationEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkModifiedEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkModifiedEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkModifiedEvent *)new itkModifiedEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkModifiedEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkModifiedEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkModifiedEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkModifiedEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkModifiedEvent *arg1 = (itkModifiedEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkModifiedEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkModifiedEvent" "', argument " "1"" of type '" "itkModifiedEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkModifiedEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkModifiedEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkModifiedEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkModifiedEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkModifiedEvent *arg1 = (itkModifiedEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkModifiedEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkModifiedEvent_GetEventName" "', argument " "1"" of type '" "itkModifiedEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkModifiedEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkModifiedEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkModifiedEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkModifiedEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkModifiedEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkModifiedEvent *arg1 = (itkModifiedEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkModifiedEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkModifiedEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkModifiedEvent_CheckEvent" "', argument " "1"" of type '" "itkModifiedEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkModifiedEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkModifiedEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkModifiedEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkModifiedEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkModifiedEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkModifiedEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkModifiedEvent *arg1 = (itkModifiedEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkModifiedEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkModifiedEvent_MakeObject" "', argument " "1"" of type '" "itkModifiedEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkModifiedEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkModifiedEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkModifiedEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkModifiedEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkModifiedEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkModifiedEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkModifiedEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkModifiedEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkModifiedEvent" "', argument " "1"" of type '" "itkModifiedEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkModifiedEvent" "', argument " "1"" of type '" "itkModifiedEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkModifiedEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkModifiedEvent *)new itkModifiedEvent((itkModifiedEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkModifiedEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkModifiedEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkModifiedEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkModifiedEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkModifiedEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkModifiedEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkModifiedEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkModifiedEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkModifiedEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkModifiedEvent::itkModifiedEvent()\n"
    "    itkModifiedEvent::itkModifiedEvent(itkModifiedEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkModifiedEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkModifiedEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkModifiedEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkPickEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkPickEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkPickEvent *)new itkPickEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkPickEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkPickEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkPickEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPickEvent *arg1 = (itkPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPickEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkPickEvent" "', argument " "1"" of type '" "itkPickEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkPickEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPickEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPickEvent *arg1 = (itkPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPickEvent_GetEventName" "', argument " "1"" of type '" "itkPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkPickEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPickEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPickEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPickEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPickEvent *arg1 = (itkPickEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPickEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPickEvent_CheckEvent" "', argument " "1"" of type '" "itkPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkPickEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPickEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkPickEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPickEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPickEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPickEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPickEvent *arg1 = (itkPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPickEvent_MakeObject" "', argument " "1"" of type '" "itkPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkPickEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPickEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPickEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkPickEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkPickEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkPickEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkPickEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkPickEvent" "', argument " "1"" of type '" "itkPickEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkPickEvent" "', argument " "1"" of type '" "itkPickEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkPickEvent *)new itkPickEvent((itkPickEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkPickEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkPickEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkPickEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkPickEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkPickEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkPickEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkPickEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkPickEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkPickEvent::itkPickEvent()\n"
    "    itkPickEvent::itkPickEvent(itkPickEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkPickEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkPickEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkPickEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkProgressEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkProgressEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProgressEvent *)new itkProgressEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkProgressEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkProgressEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkProgressEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkProgressEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProgressEvent *arg1 = (itkProgressEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProgressEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkProgressEvent" "', argument " "1"" of type '" "itkProgressEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkProgressEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkProgressEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkProgressEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProgressEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProgressEvent *arg1 = (itkProgressEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProgressEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProgressEvent_GetEventName" "', argument " "1"" of type '" "itkProgressEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkProgressEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkProgressEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProgressEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProgressEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProgressEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProgressEvent *arg1 = (itkProgressEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkProgressEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProgressEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProgressEvent_CheckEvent" "', argument " "1"" of type '" "itkProgressEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkProgressEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkProgressEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkProgressEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProgressEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProgressEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkProgressEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkProgressEvent *arg1 = (itkProgressEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkProgressEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkProgressEvent_MakeObject" "', argument " "1"" of type '" "itkProgressEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkProgressEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkProgressEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkProgressEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkProgressEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkProgressEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkProgressEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkProgressEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkProgressEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkProgressEvent" "', argument " "1"" of type '" "itkProgressEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkProgressEvent" "', argument " "1"" of type '" "itkProgressEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkProgressEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProgressEvent *)new itkProgressEvent((itkProgressEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkProgressEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkProgressEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkProgressEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkProgressEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkProgressEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkProgressEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkProgressEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkProgressEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkProgressEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkProgressEvent::itkProgressEvent()\n"
    "    itkProgressEvent::itkProgressEvent(itkProgressEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkProgressEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkProgressEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkProgressEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkStartEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkStartEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkStartEvent *)new itkStartEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkStartEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkStartEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkStartEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkStartEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartEvent *arg1 = (itkStartEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkStartEvent" "', argument " "1"" of type '" "itkStartEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkStartEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkStartEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkStartEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkStartEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartEvent *arg1 = (itkStartEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkStartEvent_GetEventName" "', argument " "1"" of type '" "itkStartEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkStartEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkStartEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkStartEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkStartEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkStartEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartEvent *arg1 = (itkStartEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkStartEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkStartEvent_CheckEvent" "', argument " "1"" of type '" "itkStartEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkStartEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkStartEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkStartEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkStartEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkStartEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkStartEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartEvent *arg1 = (itkStartEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkStartEvent_MakeObject" "', argument " "1"" of type '" "itkStartEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkStartEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkStartEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkStartEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkStartEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkStartEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkStartEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkStartEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkStartEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkStartEvent" "', argument " "1"" of type '" "itkStartEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkStartEvent" "', argument " "1"" of type '" "itkStartEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkStartEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkStartEvent *)new itkStartEvent((itkStartEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkStartEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkStartEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkStartEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkStartEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkStartEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkStartEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkStartEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkStartEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkStartEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkStartEvent::itkStartEvent()\n"
    "    itkStartEvent::itkStartEvent(itkStartEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkStartEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkStartEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkStartEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkStartPickEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkStartPickEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkStartPickEvent *)new itkStartPickEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkStartPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkStartPickEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkStartPickEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkStartPickEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartPickEvent *arg1 = (itkStartPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartPickEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkStartPickEvent" "', argument " "1"" of type '" "itkStartPickEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkStartPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkStartPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkStartPickEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkStartPickEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartPickEvent *arg1 = (itkStartPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkStartPickEvent_GetEventName" "', argument " "1"" of type '" "itkStartPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkStartPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkStartPickEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkStartPickEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkStartPickEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkStartPickEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartPickEvent *arg1 = (itkStartPickEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkStartPickEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkStartPickEvent_CheckEvent" "', argument " "1"" of type '" "itkStartPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkStartPickEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkStartPickEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkStartPickEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkStartPickEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkStartPickEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkStartPickEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkStartPickEvent *arg1 = (itkStartPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkStartPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkStartPickEvent_MakeObject" "', argument " "1"" of type '" "itkStartPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkStartPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkStartPickEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkStartPickEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkStartPickEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkStartPickEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkStartPickEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkStartPickEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkStartPickEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkStartPickEvent" "', argument " "1"" of type '" "itkStartPickEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkStartPickEvent" "', argument " "1"" of type '" "itkStartPickEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkStartPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkStartPickEvent *)new itkStartPickEvent((itkStartPickEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkStartPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkStartPickEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkStartPickEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkStartPickEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkStartPickEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkStartPickEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkStartPickEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkStartPickEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkStartPickEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkStartPickEvent::itkStartPickEvent()\n"
    "    itkStartPickEvent::itkStartPickEvent(itkStartPickEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkStartPickEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkStartPickEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkStartPickEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkUserEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkUserEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkUserEvent *)new itkUserEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkUserEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkUserEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkUserEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkUserEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkUserEvent *arg1 = (itkUserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkUserEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkUserEvent" "', argument " "1"" of type '" "itkUserEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkUserEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkUserEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkUserEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkUserEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkUserEvent *arg1 = (itkUserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkUserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkUserEvent_GetEventName" "', argument " "1"" of type '" "itkUserEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkUserEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkUserEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkUserEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkUserEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkUserEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkUserEvent *arg1 = (itkUserEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkUserEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkUserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkUserEvent_CheckEvent" "', argument " "1"" of type '" "itkUserEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkUserEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkUserEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkUserEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkUserEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkUserEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkUserEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkUserEvent *arg1 = (itkUserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkUserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkUserEvent_MakeObject" "', argument " "1"" of type '" "itkUserEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkUserEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkUserEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkUserEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkUserEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkUserEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkUserEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkUserEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkUserEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkUserEvent" "', argument " "1"" of type '" "itkUserEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkUserEvent" "', argument " "1"" of type '" "itkUserEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkUserEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkUserEvent *)new itkUserEvent((itkUserEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkUserEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkUserEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkUserEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkUserEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkUserEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkUserEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkUserEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkUserEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkUserEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkUserEvent::itkUserEvent()\n"
    "    itkUserEvent::itkUserEvent(itkUserEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkUserEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkUserEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkUserEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkAbortCheckEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkAbortCheckEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkAbortCheckEvent *)new itkAbortCheckEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkAbortCheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkAbortCheckEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkAbortCheckEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkAbortCheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAbortCheckEvent *arg1 = (itkAbortCheckEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAbortCheckEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkAbortCheckEvent" "', argument " "1"" of type '" "itkAbortCheckEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkAbortCheckEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkAbortCheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkAbortCheckEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkAbortCheckEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAbortCheckEvent *arg1 = (itkAbortCheckEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAbortCheckEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkAbortCheckEvent_GetEventName" "', argument " "1"" of type '" "itkAbortCheckEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkAbortCheckEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkAbortCheckEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkAbortCheckEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkAbortCheckEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkAbortCheckEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAbortCheckEvent *arg1 = (itkAbortCheckEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkAbortCheckEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAbortCheckEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkAbortCheckEvent_CheckEvent" "', argument " "1"" of type '" "itkAbortCheckEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkAbortCheckEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkAbortCheckEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkAbortCheckEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkAbortCheckEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkAbortCheckEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkAbortCheckEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkAbortCheckEvent *arg1 = (itkAbortCheckEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkAbortCheckEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkAbortCheckEvent_MakeObject" "', argument " "1"" of type '" "itkAbortCheckEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkAbortCheckEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkAbortCheckEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkAbortCheckEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkAbortCheckEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkAbortCheckEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkAbortCheckEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkAbortCheckEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkAbortCheckEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkAbortCheckEvent" "', argument " "1"" of type '" "itkAbortCheckEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkAbortCheckEvent" "', argument " "1"" of type '" "itkAbortCheckEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkAbortCheckEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkAbortCheckEvent *)new itkAbortCheckEvent((itkAbortCheckEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkAbortCheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkAbortCheckEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkAbortCheckEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkAbortCheckEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkAbortCheckEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkAbortCheckEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkAbortCheckEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkAbortCheckEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkAbortCheckEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkAbortCheckEvent::itkAbortCheckEvent()\n"
    "    itkAbortCheckEvent::itkAbortCheckEvent(itkAbortCheckEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkAbortCheckEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkAbortCheckEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkAbortCheckEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_itkEndPickEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkEndPickEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEndPickEvent *)new itkEndPickEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkEndPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkEndPickEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEndPickEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkEndPickEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndPickEvent *arg1 = (itkEndPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndPickEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkEndPickEvent" "', argument " "1"" of type '" "itkEndPickEvent *""'"); 
  }
  arg1 = reinterpret_cast< itkEndPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkEndPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkEndPickEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEndPickEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndPickEvent *arg1 = (itkEndPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEndPickEvent_GetEventName" "', argument " "1"" of type '" "itkEndPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkEndPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkEndPickEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEndPickEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEndPickEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEndPickEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndPickEvent *arg1 = (itkEndPickEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkEndPickEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEndPickEvent_CheckEvent" "', argument " "1"" of type '" "itkEndPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkEndPickEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkEndPickEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkEndPickEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEndPickEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEndPickEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkEndPickEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkEndPickEvent *arg1 = (itkEndPickEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkEndPickEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkEndPickEvent_MakeObject" "', argument " "1"" of type '" "itkEndPickEvent const *""'"); 
  }
  arg1 = reinterpret_cast< itkEndPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((itkEndPickEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkEndPickEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkEndPickEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkEndPickEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkEndPickEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkEndPickEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkEndPickEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkEndPickEvent" "', argument " "1"" of type '" "itkEndPickEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkEndPickEvent" "', argument " "1"" of type '" "itkEndPickEvent const &""'"); 
  }
  arg1 = reinterpret_cast< itkEndPickEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEndPickEvent *)new itkEndPickEvent((itkEndPickEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkEndPickEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkEndPickEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEndPickEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkEndPickEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkEndPickEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkEndPickEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkEndPickEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkEndPickEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkEndPickEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkEndPickEvent::itkEndPickEvent()\n"
    "    itkEndPickEvent::itkEndPickEvent(itkEndPickEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *itkEndPickEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkEndPickEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkEndPickEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_GCP_m_Id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_m_Id_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_Id_set" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GCP_m_Id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GCP_m_Id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->m_Id = *arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_Id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_Id_get" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (std::string *) & ((arg1)->m_Id);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_Info_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_m_Info_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_Info_set" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GCP_m_Info_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GCP_m_Info_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->m_Info = *arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_Info_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_Info_get" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (std::string *) & ((arg1)->m_Info);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPCol_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_m_GCPCol_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPCol_set" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GCP_m_GCPCol_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->m_GCPCol = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPCol_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPCol_get" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (double) ((arg1)->m_GCPCol);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPRow_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_m_GCPRow_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPRow_set" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GCP_m_GCPRow_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->m_GCPRow = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPRow_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPRow_get" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (double) ((arg1)->m_GCPRow);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPX_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_m_GCPX_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPX_set" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GCP_m_GCPX_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->m_GCPX = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPX_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPX_get" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (double) ((arg1)->m_GCPX);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPY_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_m_GCPY_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPY_set" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GCP_m_GCPY_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->m_GCPY = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPY_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPY_get" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (double) ((arg1)->m_GCPY);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_m_GCPZ_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPZ_set" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GCP_m_GCPZ_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->m_GCPZ = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_m_GCPZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_m_GCPZ_get" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (double) ((arg1)->m_GCPZ);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_GCP", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::GCP *)new otb::GCP();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_GCP: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_GCP" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__GCP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GCP_Print(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "GCP_Print", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GCP_Print" "', argument " "1"" of type '" "otb::GCP const *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GCP_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GCP_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        ((otb::GCP const *)arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication GCP_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication GCP_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GCP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::GCP *arg1 = (otb::GCP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__GCP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GCP" "', argument " "1"" of type '" "otb::GCP *""'"); 
  }
  arg1 = reinterpret_cast< otb::GCP * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_GCP: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_GCP" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GCP_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__GCP, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *GCP_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_TimePoint_GetJulianDay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::TimePoint *arg1 = (otb::MetaData::TimePoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__TimePoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimePoint_GetJulianDay" "', argument " "1"" of type '" "otb::MetaData::TimePoint const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::TimePoint * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (double)((otb::MetaData::TimePoint const *)arg1)->GetJulianDay();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication TimePoint_GetJulianDay: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication TimePoint_GetJulianDay" );
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimePoint_GetModifiedJulianDay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::TimePoint *arg1 = (otb::MetaData::TimePoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__TimePoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimePoint_GetModifiedJulianDay" "', argument " "1"" of type '" "otb::MetaData::TimePoint const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::TimePoint * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (double)((otb::MetaData::TimePoint const *)arg1)->GetModifiedJulianDay();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication TimePoint_GetModifiedJulianDay: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication TimePoint_GetModifiedJulianDay" );
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimePoint___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::TimePoint *arg1 = (otb::MetaData::TimePoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__TimePoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimePoint___repr__" "', argument " "1"" of type '" "otb::MetaData::TimePoint *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::TimePoint * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = otb_MetaData_TimePoint___repr__(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication TimePoint___repr__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication TimePoint___repr__" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimePoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::TimePoint *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_TimePoint", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::MetaData::TimePoint *)new otb::MetaData::TimePoint();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_TimePoint: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_TimePoint" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__MetaData__TimePoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimePoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::TimePoint *arg1 = (otb::MetaData::TimePoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__TimePoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimePoint" "', argument " "1"" of type '" "otb::MetaData::TimePoint *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::TimePoint * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_TimePoint: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_TimePoint" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimePoint_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__MetaData__TimePoint, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TimePoint_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_LUTAxis_Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LUTAxis_Size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Size_set" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LUTAxis_Size_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->Size = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Size_get" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (int) ((arg1)->Size);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_Origin_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LUTAxis_Origin_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Origin_set" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LUTAxis_Origin_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->Origin = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_Origin_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Origin_get" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (double) ((arg1)->Origin);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_Spacing_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LUTAxis_Spacing_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Spacing_set" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LUTAxis_Spacing_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->Spacing = arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_Spacing_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Spacing_get" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (double) ((arg1)->Spacing);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_Values_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  std::vector< double,std::allocator< double > > *arg2 = (std::vector< double,std::allocator< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LUTAxis_Values_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Values_set" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LUTAxis_Values_set" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< double,std::allocator< double > > * >(argp2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->Values = *arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_Values_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_Values_get" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (std::vector< double,std::allocator< double > > *)& ((arg1)->Values);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_ToJSON__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  std::string result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_ToJSON" "', argument " "1"" of type '" "otb::MetaData::LUTAxis const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LUTAxis_ToJSON" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUTAxis const *)arg1)->ToJSON(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication LUTAxis_ToJSON: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication LUTAxis_ToJSON" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_ToJSON__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LUTAxis_ToJSON" "', argument " "1"" of type '" "otb::MetaData::LUTAxis const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUTAxis const *)arg1)->ToJSON();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication LUTAxis_ToJSON: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication LUTAxis_ToJSON" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LUTAxis_ToJSON(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "LUTAxis_ToJSON", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__MetaData__LUTAxis, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LUTAxis_ToJSON__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__MetaData__LUTAxis, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LUTAxis_ToJSON__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'LUTAxis_ToJSON'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    otb::MetaData::LUTAxis::ToJSON(bool) const\n"
    "    otb::MetaData::LUTAxis::ToJSON() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_LUTAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_LUTAxis", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::MetaData::LUTAxis *)new otb::MetaData::LUTAxis();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_LUTAxis: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_LUTAxis" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__MetaData__LUTAxis, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LUTAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUTAxis *arg1 = (otb::MetaData::LUTAxis *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTAxis, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LUTAxis" "', argument " "1"" of type '" "otb::MetaData::LUTAxis *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_LUTAxis: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_LUTAxis" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LUTAxis_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__MetaData__LUTAxis, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *LUTAxis_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_lut1d_Axis_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  otb::MetaData::LUTAxis *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lut1d_Axis_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_Axis_set" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lut1d_Axis_set" "', argument " "2"" of type '" "otb::MetaData::LUTAxis [1]""'"); 
  } 
  arg2 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    {
      if (arg2) {
        size_t ii = 0;
        for (; ii < (size_t)1; ++ii) *(otb::MetaData::LUTAxis *)&arg1->Axis[ii] = *((otb::MetaData::LUTAxis *)arg2 + ii);
      } else {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Axis""' of type '""otb::MetaData::LUTAxis [1]""'");
      }
    }
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut1d_Axis_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  otb::MetaData::LUTAxis *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_Axis_get" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (otb::MetaData::LUTAxis *)(otb::MetaData::LUTAxis *) ((arg1)->Axis);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut1d_Array_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  std::vector< double,std::allocator< double > > *arg2 = (std::vector< double,std::allocator< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lut1d_Array_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_Array_set" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lut1d_Array_set" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< double,std::allocator< double > > * >(argp2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->Array = *arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut1d_Array_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_Array_get" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (std::vector< double,std::allocator< double > > *)& ((arg1)->Array);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut1d_ToJSON__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  std::string result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_ToJSON" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lut1d_ToJSON" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUT< 1 > const *)arg1)->ToJSON(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut1d_ToJSON: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut1d_ToJSON" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut1d_ToJSON__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_ToJSON" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUT< 1 > const *)arg1)->ToJSON();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut1d_ToJSON: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut1d_ToJSON" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut1d_ToJSON(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "lut1d_ToJSON", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_lut1d_ToJSON__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lut1d_ToJSON__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'lut1d_ToJSON'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    otb::MetaData::LUT< 1 >::ToJSON(bool) const\n"
    "    otb::MetaData::LUT< 1 >::ToJSON() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lut1d_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_ToString" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUT< 1 > const *)arg1)->ToString();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut1d_ToString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut1d_ToString" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut1d_FromString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lut1d_FromString", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut1d_FromString" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "lut1d_FromString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->FromString(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut1d_FromString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut1d_FromString" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lut1d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_lut1d", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::MetaData::LUT< 1 > *)new otb::MetaData::LUT< 1 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_lut1d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_lut1d" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__MetaData__LUTT_1_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_lut1d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 1 > *arg1 = (otb::MetaData::LUT< 1 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_1_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lut1d" "', argument " "1"" of type '" "otb::MetaData::LUT< 1 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 1 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_lut1d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_lut1d" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lut1d_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__MetaData__LUTT_1_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *lut1d_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_lut2d_Axis_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  otb::MetaData::LUTAxis *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lut2d_Axis_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_Axis_set" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lut2d_Axis_set" "', argument " "2"" of type '" "otb::MetaData::LUTAxis [2]""'"); 
  } 
  arg2 = reinterpret_cast< otb::MetaData::LUTAxis * >(argp2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    {
      if (arg2) {
        size_t ii = 0;
        for (; ii < (size_t)2; ++ii) *(otb::MetaData::LUTAxis *)&arg1->Axis[ii] = *((otb::MetaData::LUTAxis *)arg2 + ii);
      } else {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Axis""' of type '""otb::MetaData::LUTAxis [2]""'");
      }
    }
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut2d_Axis_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  otb::MetaData::LUTAxis *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_Axis_get" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (otb::MetaData::LUTAxis *)(otb::MetaData::LUTAxis *) ((arg1)->Axis);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__MetaData__LUTAxis, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut2d_Array_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  std::vector< double,std::allocator< double > > *arg2 = (std::vector< double,std::allocator< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lut2d_Array_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_Array_set" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lut2d_Array_set" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< double,std::allocator< double > > * >(argp2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->Array = *arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut2d_Array_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_Array_get" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (std::vector< double,std::allocator< double > > *)& ((arg1)->Array);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut2d_ToJSON__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  std::string result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_ToJSON" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lut2d_ToJSON" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUT< 2 > const *)arg1)->ToJSON(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut2d_ToJSON: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut2d_ToJSON" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut2d_ToJSON__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_ToJSON" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUT< 2 > const *)arg1)->ToJSON();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut2d_ToJSON: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut2d_ToJSON" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut2d_ToJSON(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "lut2d_ToJSON", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_lut2d_ToJSON__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lut2d_ToJSON__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'lut2d_ToJSON'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    otb::MetaData::LUT< 2 >::ToJSON(bool) const\n"
    "    otb::MetaData::LUT< 2 >::ToJSON() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lut2d_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_ToString" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > const *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::MetaData::LUT< 2 > const *)arg1)->ToString();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut2d_ToString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut2d_ToString" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lut2d_FromString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "lut2d_FromString", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lut2d_FromString" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "lut2d_FromString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->FromString(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication lut2d_FromString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication lut2d_FromString" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lut2d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_lut2d", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::MetaData::LUT< 2 > *)new otb::MetaData::LUT< 2 >();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_lut2d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_lut2d" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__MetaData__LUTT_2_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_lut2d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::MetaData::LUT< 2 > *arg1 = (otb::MetaData::LUT< 2 > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__MetaData__LUTT_2_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lut2d" "', argument " "1"" of type '" "otb::MetaData::LUT< 2 > *""'"); 
  }
  arg1 = reinterpret_cast< otb::MetaData::LUT< 2 > * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_lut2d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_lut2d" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lut2d_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__MetaData__LUTT_2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *lut2d_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ImageMetadataBase_GetProjectedGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_GetProjectedGeometry" "', argument " "1"" of type '" "otb::ImageMetadataBase const *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::ImageMetadataBase const *)arg1)->GetProjectedGeometry();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_GetProjectedGeometry: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_GetProjectedGeometry" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_GetProjectionProj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_GetProjectionProj" "', argument " "1"" of type '" "otb::ImageMetadataBase const *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::ImageMetadataBase const *)arg1)->GetProjectionProj();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_GetProjectionProj: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_GetProjectionProj" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_GetKeyListNum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_GetKeyListNum" "', argument " "1"" of type '" "otb::ImageMetadataBase const *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::ImageMetadataBase const *)arg1)->GetKeyListNum();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_GetKeyListNum: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_GetKeyListNum" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_GetKeyListStr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_GetKeyListStr" "', argument " "1"" of type '" "otb::ImageMetadataBase const *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::ImageMetadataBase const *)arg1)->GetKeyListStr();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_GetKeyListStr: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_GetKeyListStr" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_GetKeyListL1D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_GetKeyListL1D" "', argument " "1"" of type '" "otb::ImageMetadataBase const *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::ImageMetadataBase const *)arg1)->GetKeyListL1D();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_GetKeyListL1D: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_GetKeyListL1D" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_GetKeyListTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_GetKeyListTime" "', argument " "1"" of type '" "otb::ImageMetadataBase const *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((otb::ImageMetadataBase const *)arg1)->GetKeyListTime();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_GetKeyListTime: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_GetKeyListTime" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_is_num(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_is_num", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_is_num" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_is_num" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_is_num" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_is_num(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_is_num: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_is_num" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_get_num(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_get_num", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_get_num" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_get_num" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_get_num" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (double)otb_ImageMetadataBase_get_num(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_get_num: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_get_num" );
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_is_str(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_is_str", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_is_str" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_is_str" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_is_str" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_is_str(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_is_str: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_is_str" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_get_str(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_get_str", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_get_str" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_get_str" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_get_str" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = otb_ImageMetadataBase_get_str(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_get_str: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_get_str" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_is_l1d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_is_l1d", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_is_l1d" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_is_l1d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_is_l1d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_is_l1d(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_is_l1d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_is_l1d" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_get_l1d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  otb::MetaData::LUT1D result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_get_l1d", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_get_l1d" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_get_l1d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_get_l1d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = otb_ImageMetadataBase_get_l1d(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_get_l1d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_get_l1d" );
    }
  }
  resultobj = SWIG_NewPointerObj((new otb::MetaData::LUT1D(static_cast< const otb::MetaData::LUT1D& >(result))), SWIGTYPE_p_otb__MetaData__LUT1D, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_is_l2d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_is_l2d", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_is_l2d" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_is_l2d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_is_l2d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_is_l2d(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_is_l2d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_is_l2d" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_get_l2d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  otb::MetaData::LUT2D result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_get_l2d", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_get_l2d" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_get_l2d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_get_l2d" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = otb_ImageMetadataBase_get_l2d(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_get_l2d: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_get_l2d" );
    }
  }
  resultobj = SWIG_NewPointerObj((new otb::MetaData::LUT2D(static_cast< const otb::MetaData::LUT2D& >(result))), SWIGTYPE_p_otb__MetaData__LUT2D, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_is_time(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_is_time", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_is_time" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_is_time" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_is_time" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_is_time(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_is_time: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_is_time" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_get_time(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  otb::MetaData::TimePoint result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_get_time", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_get_time" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_get_time" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_get_time" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = otb_ImageMetadataBase_get_time(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_get_time: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_get_time" );
    }
  }
  resultobj = SWIG_NewPointerObj((new otb::MetaData::TimePoint(static_cast< const otb::MetaData::TimePoint& >(result))), SWIGTYPE_p_otb__MetaData__TimePoint, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_is_geom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_is_geom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_is_geom" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_is_geom" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_is_geom" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_is_geom(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_is_geom: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_is_geom" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_is_extra(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_is_extra", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_is_extra" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_is_extra" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_is_extra" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_is_extra(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_is_extra: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_is_extra" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_get_extra(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_get_extra", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_get_extra" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_get_extra" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_get_extra" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = otb_ImageMetadataBase_get_extra(arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_get_extra: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_get_extra" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase_has(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadataBase_has", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase_has" "', argument " "1"" of type '" "otb::ImageMetadataBase const *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase_has" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase_has" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)otb_ImageMetadataBase_has((otb::ImageMetadataBase const *)arg1,(std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase_has: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase_has" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase___setitem__" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        otb_ImageMetadataBase___setitem____SWIG_0(arg1,(std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase___setitem__" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        otb_ImageMetadataBase___setitem____SWIG_1(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  otb::MetaData::LUT1D *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase___setitem__" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_otb__MetaData__LUT1D,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "otb::MetaData::LUT1D const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "otb::MetaData::LUT1D const &""'"); 
  }
  arg3 = reinterpret_cast< otb::MetaData::LUT1D * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        otb_ImageMetadataBase___setitem____SWIG_2(arg1,(std::string const &)*arg2,(otb::MetaData::LUT1D const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase___setitem____SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  otb::MetaData::LUT2D *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase___setitem__" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_otb__MetaData__LUT2D,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "otb::MetaData::LUT2D const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "otb::MetaData::LUT2D const &""'"); 
  }
  arg3 = reinterpret_cast< otb::MetaData::LUT2D * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        otb_ImageMetadataBase___setitem____SWIG_3(arg1,(std::string const &)*arg2,(otb::MetaData::LUT2D const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase___setitem____SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  otb::MetaData::TimePoint *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase___setitem__" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_otb__MetaData__TimePoint,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "otb::MetaData::TimePoint const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "otb::MetaData::TimePoint const &""'"); 
  }
  arg3 = reinterpret_cast< otb::MetaData::TimePoint * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        otb_ImageMetadataBase___setitem____SWIG_4(arg1,(std::string const &)*arg2,(otb::MetaData::TimePoint const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase___setitem____SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  std::string *arg2 = 0 ;
  boost::any arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadataBase___setitem__" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_boost__any,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "boost::any const""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageMetadataBase___setitem__" "', argument " "3"" of type '" "boost::any const""'");
    } else {
      boost::any * temp = reinterpret_cast< boost::any * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        otb_ImageMetadataBase___setitem____SWIG_5(arg1,(std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ImageMetadataBase___setitem__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ImageMetadataBase___setitem__" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadataBase___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ImageMetadataBase___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__ImageMetadataBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_otb__MetaData__LUT1D, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ImageMetadataBase___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__ImageMetadataBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_otb__MetaData__LUT2D, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ImageMetadataBase___setitem____SWIG_3(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__ImageMetadataBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_otb__MetaData__TimePoint, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ImageMetadataBase___setitem____SWIG_4(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__ImageMetadataBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_boost__any, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ImageMetadataBase___setitem____SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__ImageMetadataBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ImageMetadataBase___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_otb__ImageMetadataBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ImageMetadataBase___setitem____SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ImageMetadataBase___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    otb::ImageMetadataBase::__setitem__(std::string const &,double const)\n"
    "    otb::ImageMetadataBase::__setitem__(std::string const &,std::string const &)\n"
    "    otb::ImageMetadataBase::__setitem__(std::string const &,otb::MetaData::LUT1D const &)\n"
    "    otb::ImageMetadataBase::__setitem__(std::string const &,otb::MetaData::LUT2D const &)\n"
    "    otb::ImageMetadataBase::__setitem__(std::string const &,otb::MetaData::TimePoint const &)\n"
    "    otb::ImageMetadataBase::__setitem__(std::string const &,boost::any const)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_ImageMetadataBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ImageMetadataBase", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::ImageMetadataBase *)new otb::ImageMetadataBase();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_ImageMetadataBase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_ImageMetadataBase" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__ImageMetadataBase, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ImageMetadataBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadataBase *arg1 = (otb::ImageMetadataBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadataBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ImageMetadataBase" "', argument " "1"" of type '" "otb::ImageMetadataBase *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadataBase * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_ImageMetadataBase: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_ImageMetadataBase" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ImageMetadataBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__ImageMetadataBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ImageMetadataBase_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ImageMetadata_Bands_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadata *arg1 = (otb::ImageMetadata *) 0 ;
  std::vector< otb::ImageMetadataBase,std::allocator< otb::ImageMetadataBase > > *arg2 = (std::vector< otb::ImageMetadataBase,std::allocator< otb::ImageMetadataBase > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ImageMetadata_Bands_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadata_Bands_set" "', argument " "1"" of type '" "otb::ImageMetadata *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadata * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageMetadata_Bands_set" "', argument " "2"" of type '" "std::vector< otb::ImageMetadataBase,std::allocator< otb::ImageMetadataBase > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< otb::ImageMetadataBase,std::allocator< otb::ImageMetadataBase > > * >(argp2);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    if (arg1) (arg1)->Bands = *arg2;
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageMetadata_Bands_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadata *arg1 = (otb::ImageMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< otb::ImageMetadataBase,std::allocator< otb::ImageMetadataBase > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageMetadata_Bands_get" "', argument " "1"" of type '" "otb::ImageMetadata *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadata * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = (std::vector< otb::ImageMetadataBase,std::allocator< otb::ImageMetadataBase > > *)& ((arg1)->Bands);
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadata *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ImageMetadata", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::ImageMetadata *)new otb::ImageMetadata();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_ImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_ImageMetadata" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__ImageMetadata, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ImageMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::ImageMetadata *arg1 = (otb::ImageMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__ImageMetadata, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ImageMetadata" "', argument " "1"" of type '" "otb::ImageMetadata *""'"); 
  }
  arg1 = reinterpret_cast< otb::ImageMetadata * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_ImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_ImageMetadata" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ImageMetadata_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__ImageMetadata, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ImageMetadata_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorDataKeywordlist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::VectorDataKeywordlist *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_VectorDataKeywordlist", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::VectorDataKeywordlist *)new otb::VectorDataKeywordlist();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_VectorDataKeywordlist: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_VectorDataKeywordlist" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__VectorDataKeywordlist, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorDataKeywordlist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::VectorDataKeywordlist *arg1 = (otb::VectorDataKeywordlist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__VectorDataKeywordlist, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorDataKeywordlist" "', argument " "1"" of type '" "otb::VectorDataKeywordlist *""'"); 
  }
  arg1 = reinterpret_cast< otb::VectorDataKeywordlist * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_VectorDataKeywordlist: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_VectorDataKeywordlist" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorDataKeywordlist_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__VectorDataKeywordlist, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorDataKeywordlist_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SwigPrintCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject *swig_obj[1] ;
  otb::SwigPrintCallback *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  arg1 = swig_obj[0];
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        if ( arg1 != Py_None ) {
          /* subclassed */
          result = (otb::SwigPrintCallback *)new SwigDirector_SwigPrintCallback(arg1); 
        } else {
          result = (otb::SwigPrintCallback *)new otb::SwigPrintCallback(); 
        }
        
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_SwigPrintCallback: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_SwigPrintCallback" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__SwigPrintCallback, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SwigPrintCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::SwigPrintCallback *arg1 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__SwigPrintCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPrintCallback" "', argument " "1"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg1 = reinterpret_cast< otb::SwigPrintCallback * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_SwigPrintCallback: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_SwigPrintCallback" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPrintCallback_Call(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::SwigPrintCallback *arg1 = (otb::SwigPrintCallback *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPrintCallback_Call", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPrintCallback_Call" "', argument " "1"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg1 = reinterpret_cast< otb::SwigPrintCallback * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPrintCallback_Call" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPrintCallback_Call" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==swig_obj[0]));
  try {
    {
      try {
        if (upcall) {
          (arg1)->otb::SwigPrintCallback::Call((std::string const &)*arg2);
        } else {
          (arg1)->Call((std::string const &)*arg2);
        }
      } catch(otb::ImageFileReaderException& err) {
        std::ostringstream oss;
        oss << err.GetDescription();
        SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
      } catch( itk::ExceptionObject &ex ) {
        std::ostringstream oss;
        oss << "Exception thrown in otbApplication SwigPrintCallback_Call: " << ex.what();
        SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
      } catch( const std::exception &ex ) {
        SWIG_exception( SWIG_RuntimeError, ex.what() );
      } catch( ... ) {
        SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPrintCallback_Call" );
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPrintCallback_Flush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::SwigPrintCallback *arg1 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPrintCallback_Flush" "', argument " "1"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg1 = reinterpret_cast< otb::SwigPrintCallback * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==swig_obj[0]));
  try {
    {
      try {
        if (upcall) {
          (arg1)->otb::SwigPrintCallback::Flush();
        } else {
          (arg1)->Flush();
        }
      } catch(otb::ImageFileReaderException& err) {
        std::ostringstream oss;
        oss << err.GetDescription();
        SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
      } catch( itk::ExceptionObject &ex ) {
        std::ostringstream oss;
        oss << "Exception thrown in otbApplication SwigPrintCallback_Flush: " << ex.what();
        SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
      } catch( const std::exception &ex ) {
        SWIG_exception( SWIG_RuntimeError, ex.what() );
      } catch( ... ) {
        SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPrintCallback_Flush" );
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPrintCallback_IsInteractive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::SwigPrintCallback *arg1 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Swig::Director *director = 0;
  bool upcall = false;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPrintCallback_IsInteractive" "', argument " "1"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg1 = reinterpret_cast< otb::SwigPrintCallback * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==swig_obj[0]));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->otb::SwigPrintCallback::IsInteractive();
        } else {
          result = (bool)(arg1)->IsInteractive();
        }
      } catch(otb::ImageFileReaderException& err) {
        std::ostringstream oss;
        oss << err.GetDescription();
        SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
      } catch( itk::ExceptionObject &ex ) {
        std::ostringstream oss;
        oss << "Exception thrown in otbApplication SwigPrintCallback_IsInteractive: " << ex.what();
        SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
      } catch( const std::exception &ex ) {
        SWIG_exception( SWIG_RuntimeError, ex.what() );
      } catch( ... ) {
        SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication SwigPrintCallback_IsInteractive" );
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_SwigPrintCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  otb::SwigPrintCallback *arg1 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_SwigPrintCallback" "', argument " "1"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg1 = reinterpret_cast< otb::SwigPrintCallback * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    {
      Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
      if (director) director->swig_disown();
    }
    
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SwigPrintCallback_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_otb__SwigPrintCallback, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SwigPrintCallback_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *itkLogOutput_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkLogOutput, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PythonLogOutput_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer result;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_New", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = PythonLogOutput::New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new PythonLogOutput_Pointer(static_cast< const PythonLogOutput_Pointer& >(result))), SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_SetCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput *arg1 = (PythonLogOutput *) 0 ;
  otb::SwigPrintCallback *arg2 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_SetCallback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_SetCallback" "', argument " "1"" of type '" "PythonLogOutput *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_SetCallback" "', argument " "2"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg2 = reinterpret_cast< otb::SwigPrintCallback * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetCallback(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_SetCallback: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_SetCallback" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput *arg1 = (PythonLogOutput *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Write" "', argument " "1"" of type '" "PythonLogOutput *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Write" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Write" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Write((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Write: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Write" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PythonLogOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput *arg1 = (PythonLogOutput *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PythonLogOutput" "', argument " "1"" of type '" "PythonLogOutput *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_PythonLogOutput(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_PythonLogOutput: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_PythonLogOutput" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PythonLogOutput_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PythonLogOutput, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PythonLogOutput_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PythonLogOutput_Pointer *)new PythonLogOutput_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_PythonLogOutput_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_PythonLogOutput_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PythonLogOutput_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PythonLogOutput_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_PythonLogOutput_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PythonLogOutput_Pointer" "', argument " "1"" of type '" "PythonLogOutput_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PythonLogOutput_Pointer" "', argument " "1"" of type '" "PythonLogOutput_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PythonLogOutput_Pointer *)new PythonLogOutput_Pointer((PythonLogOutput_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_PythonLogOutput_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_PythonLogOutput_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PythonLogOutput_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  PythonLogOutput *arg1 = (PythonLogOutput *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PythonLogOutput_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PythonLogOutput_Pointer" "', argument " "1"" of type '" "PythonLogOutput *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PythonLogOutput_Pointer *)new PythonLogOutput_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_PythonLogOutput_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_PythonLogOutput_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PythonLogOutput_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_PythonLogOutput_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PythonLogOutput_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PythonLogOutput_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_PythonLogOutput, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PythonLogOutput_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_PythonLogOutput_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PythonLogOutput_Pointer::PythonLogOutput_Pointer()\n"
    "    PythonLogOutput_Pointer::PythonLogOutput_Pointer(PythonLogOutput_Pointer const &)\n"
    "    PythonLogOutput_Pointer::PythonLogOutput_Pointer(PythonLogOutput *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PythonLogOutput_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PythonLogOutput_Pointer" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_PythonLogOutput_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_PythonLogOutput_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PythonLogOutput *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer___deref__" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PythonLogOutput *)((PythonLogOutput_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PythonLogOutput, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_IsNotNull" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((PythonLogOutput_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_IsNull" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((PythonLogOutput_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PythonLogOutput *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_GetPointer" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PythonLogOutput *)((PythonLogOutput_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PythonLogOutput, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PythonLogOutput_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_New" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new PythonLogOutput_Pointer(static_cast< const PythonLogOutput_Pointer& >(result))), SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_SetCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  otb::SwigPrintCallback *arg2 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_SetCallback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_SetCallback" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_SetCallback" "', argument " "2"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg2 = reinterpret_cast< otb::SwigPrintCallback * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetCallback(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_SetCallback: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_SetCallback" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_Write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_Write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_Write" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_Write" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_Write" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Write((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_Write: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_Write" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_GetNameOfClass" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_AddObserver" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PythonLogOutput_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_GetCommand" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PythonLogOutput_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_GetCommand" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkCommand, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_InvokeEvent" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_RemoveObserver" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PythonLogOutput_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_HasObserver" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_Print" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PythonLogOutput_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_Print" "', argument " "1"" of type '" "PythonLogOutput_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PythonLogOutput_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PythonLogOutput_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PythonLogOutput_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_PythonLogOutput_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PythonLogOutput_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_PythonLogOutput_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_PythonLogOutput_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PythonLogOutput_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_BreakOnError" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication PythonLogOutput_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication PythonLogOutput_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PythonLogOutput_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PythonLogOutput_Pointer *arg1 = (PythonLogOutput_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_PythonLogOutput_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PythonLogOutput_Pointer_ToString" "', argument " "1"" of type '" "PythonLogOutput_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< PythonLogOutput_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PythonLogOutput_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PythonLogOutput_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PythonLogOutput_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Logger_AddLogOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  itkLogOutput *arg2 = (itkLogOutput *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_AddLogOutput", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_AddLogOutput" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkLogOutput, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Logger_AddLogOutput" "', argument " "2"" of type '" "itkLogOutput *""'"); 
  }
  arg2 = reinterpret_cast< itkLogOutput * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->AddLogOutput(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_AddLogOutput: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_AddLogOutput" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_Instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_Instance", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Logger *)Logger::Instance();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_Instance: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_Instance" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Logger, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_ResetOutputs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_ResetOutputs" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->ResetOutputs();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_ResetOutputs: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_ResetOutputs" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_Debug(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_Debug", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_Debug" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Logger_Debug" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Logger_Debug" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Debug((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_Debug: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_Debug" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_Info(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_Info", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_Info" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Logger_Info" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Logger_Info" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Info((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_Info: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_Info" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_Warning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_Warning", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_Warning" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Logger_Warning" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Logger_Warning" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Warning((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_Warning: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_Warning" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_Critical(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_Critical", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_Critical" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Logger_Critical" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Logger_Critical" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Critical((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_Critical: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_Critical" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_Error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_Error", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_Error" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Logger_Error" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Logger_Error" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Error((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_Error: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_Error" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Logger_Fatal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Logger *arg1 = (Logger *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Logger_Fatal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Logger, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Logger_Fatal" "', argument " "1"" of type '" "Logger *""'"); 
  }
  arg1 = reinterpret_cast< Logger * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Logger_Fatal" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Logger_Fatal" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Fatal((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Logger_Fatal: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Logger_Fatal" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *Logger_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Logger, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ProgressReporterManager_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer result;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_New", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ProgressReporterManager::New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new ProgressReporterManager_Pointer(static_cast< const ProgressReporterManager_Pointer& >(result))), SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_DeleteWatcherList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager *arg1 = (ProgressReporterManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_DeleteWatcherList" "', argument " "1"" of type '" "ProgressReporterManager *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->DeleteWatcherList();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_DeleteWatcherList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_DeleteWatcherList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_SetLogOutputCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager *arg1 = (ProgressReporterManager *) 0 ;
  otb::SwigPrintCallback *arg2 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_SetLogOutputCallback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_SetLogOutputCallback" "', argument " "1"" of type '" "ProgressReporterManager *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_SetLogOutputCallback" "', argument " "2"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg2 = reinterpret_cast< otb::SwigPrintCallback * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetLogOutputCallback(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_SetLogOutputCallback: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_SetLogOutputCallback" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_GetAddProcessCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager *arg1 = (ProgressReporterManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkCommand *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_GetAddProcessCommand" "', argument " "1"" of type '" "ProgressReporterManager *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(arg1)->GetAddProcessCommand();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_GetAddProcessCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_GetAddProcessCommand" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkCommand, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ProgressReporterManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager *arg1 = (ProgressReporterManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ProgressReporterManager" "', argument " "1"" of type '" "ProgressReporterManager *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_ProgressReporterManager(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_ProgressReporterManager: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_ProgressReporterManager" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ProgressReporterManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ProgressReporterManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ProgressReporterManager_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ProgressReporterManager_Pointer *)new ProgressReporterManager_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_ProgressReporterManager_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_ProgressReporterManager_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ProgressReporterManager_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ProgressReporterManager_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_ProgressReporterManager_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ProgressReporterManager_Pointer" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProgressReporterManager_Pointer" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ProgressReporterManager_Pointer *)new ProgressReporterManager_Pointer((ProgressReporterManager_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_ProgressReporterManager_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_ProgressReporterManager_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ProgressReporterManager_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ProgressReporterManager *arg1 = (ProgressReporterManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ProgressReporterManager_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ProgressReporterManager_Pointer" "', argument " "1"" of type '" "ProgressReporterManager *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ProgressReporterManager_Pointer *)new ProgressReporterManager_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_ProgressReporterManager_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_ProgressReporterManager_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ProgressReporterManager_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ProgressReporterManager_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_ProgressReporterManager_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ProgressReporterManager_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ProgressReporterManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ProgressReporterManager_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ProgressReporterManager_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ProgressReporterManager_Pointer::ProgressReporterManager_Pointer()\n"
    "    ProgressReporterManager_Pointer::ProgressReporterManager_Pointer(ProgressReporterManager_Pointer const &)\n"
    "    ProgressReporterManager_Pointer::ProgressReporterManager_Pointer(ProgressReporterManager *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ProgressReporterManager_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ProgressReporterManager_Pointer" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_ProgressReporterManager_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_ProgressReporterManager_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ProgressReporterManager *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer___deref__" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ProgressReporterManager *)((ProgressReporterManager_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ProgressReporterManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_IsNotNull" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((ProgressReporterManager_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_IsNull" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((ProgressReporterManager_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ProgressReporterManager *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_GetPointer" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ProgressReporterManager *)((ProgressReporterManager_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ProgressReporterManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ProgressReporterManager_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_New" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new ProgressReporterManager_Pointer(static_cast< const ProgressReporterManager_Pointer& >(result))), SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_DeleteWatcherList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_DeleteWatcherList" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->DeleteWatcherList();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_DeleteWatcherList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_DeleteWatcherList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_SetLogOutputCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  otb::SwigPrintCallback *arg2 = (otb::SwigPrintCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_SetLogOutputCallback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_SetLogOutputCallback" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_otb__SwigPrintCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_Pointer_SetLogOutputCallback" "', argument " "2"" of type '" "otb::SwigPrintCallback *""'"); 
  }
  arg2 = reinterpret_cast< otb::SwigPrintCallback * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetLogOutputCallback(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_SetLogOutputCallback: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_SetLogOutputCallback" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_GetAddProcessCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkCommand *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_GetAddProcessCommand" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetAddProcessCommand();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_GetAddProcessCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_GetAddProcessCommand" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkCommand, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_GetNameOfClass" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_AddObserver" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressReporterManager_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ProgressReporterManager_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_GetCommand" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProgressReporterManager_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_GetCommand" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkCommand, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_InvokeEvent" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressReporterManager_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_RemoveObserver" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProgressReporterManager_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_HasObserver" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressReporterManager_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressReporterManager_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "1"" of type '" "ProgressReporterManager_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressReporterManager_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ProgressReporterManager_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ProgressReporterManager_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ProgressReporterManager_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ProgressReporterManager_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ProgressReporterManager_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ProgressReporterManager_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_BreakOnError" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication ProgressReporterManager_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication ProgressReporterManager_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressReporterManager_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ProgressReporterManager_Pointer *arg1 = (ProgressReporterManager_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ProgressReporterManager_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressReporterManager_Pointer_ToString" "', argument " "1"" of type '" "ProgressReporterManager_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< ProgressReporterManager_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ProgressReporterManager_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ProgressReporterManager_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ProgressReporterManager_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Application_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetName", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetName" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetName((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetName" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetName" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((Application const *)arg1)->GetName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDescription" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetDescription" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDescription((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDescription" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetDescription" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((Application const *)arg1)->GetDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetDescription" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Init" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Init();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Init: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Init" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_UpdateParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_UpdateParameters" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->UpdateParameters();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_UpdateParameters: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_UpdateParameters" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Execute" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (int)(arg1)->Execute();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Execute: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Execute" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_WriteOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_WriteOutput" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->WriteOutput();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_WriteOutput: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_WriteOutput" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_ExecuteAndWriteOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_ExecuteAndWriteOutput" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (int)(arg1)->ExecuteAndWriteOutput();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_ExecuteAndWriteOutput: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_ExecuteAndWriteOutput" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_ConnectImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  Application *arg3 = (Application *) 0 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[4] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_ConnectImage", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_ConnectImage" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_ConnectImage" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_ConnectImage" "', argument " "3"" of type '" "Application *""'"); 
  }
  arg3 = reinterpret_cast< Application * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_ConnectImage" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(arg1)->ConnectImage(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_ConnectImage: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_ConnectImage" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_PropagateConnectMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_PropagateConnectMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_PropagateConnectMode" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_PropagateConnectMode" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->PropagateConnectMode(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_PropagateConnectMode: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_PropagateConnectMode" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_LoadParametersFromXML(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_LoadParametersFromXML", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_LoadParametersFromXML" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_LoadParametersFromXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_LoadParametersFromXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->LoadParametersFromXML((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_LoadParametersFromXML: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_LoadParametersFromXML" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SaveParametersToXML(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SaveParametersToXML", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SaveParametersToXML" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SaveParametersToXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SaveParametersToXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SaveParametersToXML((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SaveParametersToXML: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SaveParametersToXML" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetLogger(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Logger *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetLogger" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Logger *)(arg1)->GetLogger();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetLogger: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetLogger" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Logger, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_IsDeprecated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_IsDeprecated" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(arg1)->IsDeprecated();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_IsDeprecated: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_IsDeprecated" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParametersKeys__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParametersKeys" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_GetParametersKeys" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetParametersKeys(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParametersKeys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParametersKeys" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParametersKeys__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParametersKeys" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetParametersKeys();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParametersKeys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParametersKeys" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParametersKeys(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetParametersKeys", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Application_GetParametersKeys__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Application_GetParametersKeys__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetParametersKeys'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetParametersKeys(bool)\n"
    "    Application::GetParametersKeys()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterByKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  Parameter *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterByKey", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterByKey" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Parameter *)(arg1)->GetParameterByKey(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterByKey: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterByKey" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Parameter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterName", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterName" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterName" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetParameterName(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterName" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterDescription" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterDescription" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetParameterDescription(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterDescription" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetParameterDescription", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterDescription" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterDescription" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterDescription" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterDescription(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterDescription" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterUserValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetParameterUserValue", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterUserValue" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterUserValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterUserValue" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterUserValue(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterUserValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterUserValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_EnableParameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_EnableParameter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_EnableParameter" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_EnableParameter" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->EnableParameter(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_EnableParameter: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_EnableParameter" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_DisableParameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_DisableParameter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_DisableParameter" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_DisableParameter" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->DisableParameter(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_DisableParameter: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_DisableParameter" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_IsParameterEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_IsParameterEnabled", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_IsParameterEnabled" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_IsParameterEnabled" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((Application const *)arg1)->IsParameterEnabled(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_IsParameterEnabled: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_IsParameterEnabled" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_IsMandatory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_IsMandatory", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_IsMandatory" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_IsMandatory" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((Application const *)arg1)->IsMandatory(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_IsMandatory: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_IsMandatory" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_HasAutomaticValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_HasAutomaticValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_HasAutomaticValue" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_HasAutomaticValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((Application const *)arg1)->HasAutomaticValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_HasAutomaticValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_HasAutomaticValue" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_HasUserValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_HasUserValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_HasUserValue" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_HasUserValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((Application const *)arg1)->HasUserValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_HasUserValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_HasUserValue" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_ClearValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_ClearValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_ClearValue" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_ClearValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->ClearValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_ClearValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_ClearValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_HasValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_HasValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_HasValue" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_HasValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((Application const *)arg1)->HasValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_HasValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_HasValue" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterUserLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::UserLevel result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterUserLevel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterUserLevel" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterUserLevel" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::UserLevel)((Application const *)arg1)->GetParameterUserLevel(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterUserLevel: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterUserLevel" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::ParameterType result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterType" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterType" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ParameterType)((Application const *)arg1)->GetParameterType(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterRole(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::Role result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterRole", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterRole" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterRole" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::Role)((Application const *)arg1)->GetParameterRole(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterRole: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterRole" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetChoiceKeys(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetChoiceKeys", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetChoiceKeys" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetChoiceKeys" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetChoiceKeys(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetChoiceKeys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetChoiceKeys" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetChoiceNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetChoiceNames", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetChoiceNames" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetChoiceNames" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetChoiceNames(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetChoiceNames: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetChoiceNames" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_IsApplicationReady(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_IsApplicationReady" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(arg1)->IsApplicationReady();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_IsApplicationReady: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_IsApplicationReady" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterInt" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterInt" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_SetParameterInt" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterInt(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterInt" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterInt" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterInt" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterInt(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterInt" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterInt(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_SetParameterInt", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_SetParameterInt__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_SetParameterInt__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_SetParameterInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterInt(std::string,int,bool)\n"
    "    Application::SetParameterInt(std::string,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterFloat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  float arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterFloat" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterFloat" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_SetParameterFloat" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterFloat(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterFloat: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterFloat" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterFloat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterFloat" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterFloat" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterFloat(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterFloat: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterFloat" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterFloat(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_SetParameterFloat", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_SetParameterFloat__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_SetParameterFloat__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_SetParameterFloat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterFloat(std::string,float,bool)\n"
    "    Application::SetParameterFloat(std::string,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterDouble__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  double arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterDouble" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterDouble" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterDouble" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_SetParameterDouble" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterDouble(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterDouble" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterDouble__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterDouble" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterDouble" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterDouble" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterDouble(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterDouble" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterDouble(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_SetParameterDouble", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_SetParameterDouble__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_SetParameterDouble__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_SetParameterDouble'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterDouble(std::string,double,bool)\n"
    "    Application::SetParameterDouble(std::string,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterString" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_SetParameterString" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterString(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterString" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterString" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterString(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterString" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterString(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_SetParameterString", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_SetParameterString__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_SetParameterString__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_SetParameterString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterString(std::string,std::string,bool)\n"
    "    Application::SetParameterString(std::string,std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterStringList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::vector< std::string,std::allocator< std::string > > arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterStringList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    int res = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterStringList" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > >""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_SetParameterStringList" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterStringList(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterStringList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::vector< std::string,std::allocator< std::string > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterStringList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    int res = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterStringList" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > >""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterStringList(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterStringList(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_SetParameterStringList", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::string,std::allocator< std::string > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_SetParameterStringList__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::string,std::allocator< std::string > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_SetParameterStringList__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_SetParameterStringList'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterStringList(std::string,std::vector< std::string,std::allocator< std::string > >,bool)\n"
    "    Application::SetParameterStringList(std::string,std::vector< std::string,std::allocator< std::string > >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterOutputImagePixelType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  otb::Wrapper::ImagePixelType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetParameterOutputImagePixelType", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterOutputImagePixelType" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterOutputImagePixelType" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetParameterOutputImagePixelType" "', argument " "3"" of type '" "otb::Wrapper::ImagePixelType""'");
  } 
  arg3 = static_cast< otb::Wrapper::ImagePixelType >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterOutputImagePixelType(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterOutputImagePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterOutputImagePixelType" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterOutputImagePixelType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::ImagePixelType result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterOutputImagePixelType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterOutputImagePixelType" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterOutputImagePixelType" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ImagePixelType)(arg1)->GetParameterOutputImagePixelType(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterOutputImagePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterOutputImagePixelType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterInt", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterInt" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterInt" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (int)(arg1)->GetParameterInt(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterInt" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterFloat", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterFloat" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterFloat" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (float)(arg1)->GetParameterFloat(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterFloat: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterFloat" );
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterDouble", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterDouble" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterDouble" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (double)(arg1)->GetParameterDouble(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterDouble" );
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterString", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterString" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetParameterString(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterString" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterStringList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterStringList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterStringList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetParameterStringList(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterStringList" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterAsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterAsString", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterAsString" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterAsString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetParameterAsString(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterAsString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterAsString" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetListViewSingleSelectionMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetListViewSingleSelectionMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetListViewSingleSelectionMode" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetListViewSingleSelectionMode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetListViewSingleSelectionMode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(arg1)->GetListViewSingleSelectionMode((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetListViewSingleSelectionMode: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetListViewSingleSelectionMode" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterOutputImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetParameterOutputImage", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterOutputImage" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetParameterOutputImage" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)(arg1)->GetParameterOutputImage(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterOutputImage: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterOutputImage" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetParameterInputImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  ImageBaseType *arg3 = (ImageBaseType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetParameterInputImage", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetParameterInputImage" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetParameterInputImage" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_SetParameterInputImage" "', argument " "3"" of type '" "ImageBaseType *""'"); 
  }
  arg3 = reinterpret_cast< ImageBaseType * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetParameterInputImage(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetParameterInputImage: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetParameterInputImage" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_AddImageToParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  ImageBaseType *arg3 = (ImageBaseType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_AddImageToParameterInputImageList", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_AddImageToParameterInputImageList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_AddImageToParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_AddImageToParameterInputImageList" "', argument " "3"" of type '" "ImageBaseType *""'"); 
  }
  arg3 = reinterpret_cast< ImageBaseType * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->AddImageToParameterInputImageList(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_AddImageToParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_AddImageToParameterInputImageList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_AddParameterStringList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_AddParameterStringList", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_AddParameterStringList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_AddParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_AddParameterStringList" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_AddParameterStringList" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->AddParameterStringList(arg2,(std::string const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_AddParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_AddParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetNthParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  unsigned int *arg3 = 0 ;
  ImageBaseType *arg4 = (ImageBaseType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetNthParameterInputImageList", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetNthParameterInputImageList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetNthParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetNthParameterInputImageList" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_SetNthParameterInputImageList" "', argument " "4"" of type '" "ImageBaseType *""'"); 
  }
  arg4 = reinterpret_cast< ImageBaseType * >(argp4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetNthParameterInputImageList(arg2,(unsigned int const &)*arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetNthParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetNthParameterInputImageList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetNthParameterStringList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  unsigned int *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetNthParameterStringList", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetNthParameterStringList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetNthParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetNthParameterStringList" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_SetNthParameterStringList" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetNthParameterStringList" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetNthParameterStringList(arg2,(unsigned int const &)*arg3,(std::string const &)*arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetNthParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetNthParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_ClearParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_ClearParameterInputImageList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_ClearParameterInputImageList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_ClearParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->ClearParameterInputImageList(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_ClearParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_ClearParameterInputImageList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetNumberOfElementsInParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetNumberOfElementsInParameterInputImageList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetNumberOfElementsInParameterInputImageList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetNumberOfElementsInParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->GetNumberOfElementsInParameterInputImageList(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetNumberOfElementsInParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetNumberOfElementsInParameterInputImageList" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageOrigin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::Point< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageOrigin" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageOrigin" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageOrigin((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageOrigin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageOrigin" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Point< itk::SpacePrecisionType,2 >(static_cast< const itk::Point< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__PointT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageOrigin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::Point< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageOrigin" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageOrigin((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageOrigin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageOrigin" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Point< itk::SpacePrecisionType,2 >(static_cast< const itk::Point< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__PointT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageOrigin(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageOrigin", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageOrigin__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageOrigin__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageOrigin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageOrigin(std::string const &,unsigned int)\n"
    "    Application::GetImageOrigin(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetImageSpacing__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::Vector< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageSpacing" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageSpacing" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageSpacing((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageSpacing: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageSpacing" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Vector< itk::SpacePrecisionType,2 >(static_cast< const itk::Vector< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__VectorT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageSpacing__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::Vector< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageSpacing" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageSpacing((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageSpacing: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageSpacing" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Vector< itk::SpacePrecisionType,2 >(static_cast< const itk::Vector< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__VectorT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageSpacing(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageSpacing", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageSpacing__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageSpacing__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageSpacing'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageSpacing(std::string const &,unsigned int)\n"
    "    Application::GetImageSpacing(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetImageSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::Size< 2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageSize" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageSize" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageSize((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageSize" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Size< 2 >(static_cast< const itk::Size< 2 >& >(result))), SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::Size< 2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageSize" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageSize((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageSize" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Size< 2 >(static_cast< const itk::Size< 2 >& >(result))), SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageSize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageSize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageSize__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageSize__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageSize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageSize(std::string const &,unsigned int)\n"
    "    Application::GetImageSize(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetImageNbBands__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageNbBands" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageNbBands" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->GetImageNbBands((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageNbBands: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageNbBands" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageNbBands__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageNbBands" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->GetImageNbBands((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageNbBands: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageNbBands" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageNbBands(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageNbBands", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageNbBands__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageNbBands__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageNbBands'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageNbBands(std::string const &,unsigned int)\n"
    "    Application::GetImageNbBands(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetImageProjection__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  std::string result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageProjection" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageProjection" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageProjection((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageProjection: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageProjection" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageProjection__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::string result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageProjection" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageProjection((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageProjection: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageProjection" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageProjection(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageProjection", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageProjection__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageProjection__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageProjection'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageProjection(std::string const &,unsigned int)\n"
    "    Application::GetImageProjection(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_PropagateRequestedRegion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  itk::ImageRegion< 2 > arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned long result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_PropagateRequestedRegion" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itk__ImageRegionT_2_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'");
    } else {
      itk::ImageRegion< 2 > * temp = reinterpret_cast< itk::ImageRegion< 2 > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_PropagateRequestedRegion" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(arg1)->PropagateRequestedRegion((std::string const &)*arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_PropagateRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_PropagateRequestedRegion" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_PropagateRequestedRegion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  itk::ImageRegion< 2 > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned long result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_PropagateRequestedRegion" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itk__ImageRegionT_2_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'");
    } else {
      itk::ImageRegion< 2 > * temp = reinterpret_cast< itk::ImageRegion< 2 > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(arg1)->PropagateRequestedRegion((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_PropagateRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_PropagateRequestedRegion" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_PropagateRequestedRegion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_PropagateRequestedRegion", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_PropagateRequestedRegion__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_PropagateRequestedRegion__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_PropagateRequestedRegion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::PropagateRequestedRegion(std::string const &,itk::ImageRegion< 2 >,unsigned int)\n"
    "    Application::PropagateRequestedRegion(std::string const &,itk::ImageRegion< 2 >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetImageRequestedRegion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::ImageRegion< 2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageRequestedRegion" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageRequestedRegion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageRequestedRegion((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageRequestedRegion" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::ImageRegion< 2 >(static_cast< const itk::ImageRegion< 2 >& >(result))), SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageRequestedRegion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::ImageRegion< 2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageRequestedRegion" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetImageRequestedRegion((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageRequestedRegion" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::ImageRegion< 2 >(static_cast< const itk::ImageRegion< 2 >& >(result))), SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageRequestedRegion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageRequestedRegion", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageRequestedRegion__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageRequestedRegion__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageRequestedRegion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageRequestedRegion(std::string const &,unsigned int)\n"
    "    Application::GetImageRequestedRegion(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetImageMetadata__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  otb::ImageMetadata *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageMetadata" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageMetadata" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::ImageMetadata *) &(arg1)->GetImageMetadata((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageMetadata" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__ImageMetadata, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageMetadata__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  otb::ImageMetadata *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageMetadata" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::ImageMetadata *) &(arg1)->GetImageMetadata((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageMetadata" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__ImageMetadata, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageMetadata(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageMetadata", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageMetadata__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageMetadata__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageMetadata'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageMetadata(std::string const &,unsigned int)\n"
    "    Application::GetImageMetadata(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_SetImageMetadata__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  otb::ImageMetadata *arg2 = 0 ;
  std::string *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageMetadata" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_otb__ImageMetadata,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  arg2 = reinterpret_cast< otb::ImageMetadata * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_SetImageMetadata" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetImageMetadata((otb::ImageMetadata const &)*arg2,(std::string const &)*arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageMetadata" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageMetadata__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  otb::ImageMetadata *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageMetadata" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_otb__ImageMetadata,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  arg2 = reinterpret_cast< otb::ImageMetadata * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetImageMetadata((otb::ImageMetadata const &)*arg2,(std::string const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageMetadata" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageMetadata(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_SetImageMetadata", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_otb__ImageMetadata, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_SetImageMetadata__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_otb__ImageMetadata, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_SetImageMetadata__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_SetImageMetadata'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetImageMetadata(otb::ImageMetadata const &,std::string const &,unsigned int)\n"
    "    Application::SetImageMetadata(otb::ImageMetadata const &,std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetMetadataDictionary__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itkMetaDataDictionary result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetMetadataDictionary" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetMetadataDictionary" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetMetadataDictionary((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetMetadataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetMetadataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkMetaDataDictionary(static_cast< const itkMetaDataDictionary& >(result))), SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetMetadataDictionary__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itkMetaDataDictionary result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetMetadataDictionary" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetMetadataDictionary((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetMetadataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetMetadataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkMetaDataDictionary(static_cast< const itkMetaDataDictionary& >(result))), SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetMetadataDictionary(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetMetadataDictionary", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetMetadataDictionary__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetMetadataDictionary__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetMetadataDictionary'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetMetadataDictionary(std::string const &,unsigned int)\n"
    "    Application::GetMetadataDictionary(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetImageBasePixelType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  otb::Wrapper::ImagePixelType result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageBasePixelType" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetImageBasePixelType" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ImagePixelType)(arg1)->GetImageBasePixelType((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageBasePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageBasePixelType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageBasePixelType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  otb::Wrapper::ImagePixelType result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetImageBasePixelType" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ImagePixelType)(arg1)->GetImageBasePixelType((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetImageBasePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetImageBasePixelType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetImageBasePixelType(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_GetImageBasePixelType", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_GetImageBasePixelType__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_GetImageBasePixelType__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_GetImageBasePixelType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageBasePixelType(std::string const &,unsigned int)\n"
    "    Application::GetImageBasePixelType(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetProgressSource(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkProcessObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetProgressSource" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject *)((Application const *)arg1)->GetProgressSource();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetProgressSource: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetProgressSource" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkProcessObject, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetProgressDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetProgressDescription" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((Application const *)arg1)->GetProgressDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetProgressDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetProgressDescription" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_FreeResources(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_FreeResources" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->FreeResources();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_FreeResources: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_FreeResources" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocLongDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetDocLongDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDocLongDescription" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetDocLongDescription" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDocLongDescription((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDocLongDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDocLongDescription" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetDocLongDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetDocLongDescription" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((Application const *)arg1)->GetDocLongDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetDocLongDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetDocLongDescription" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocAuthors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetDocAuthors", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDocAuthors" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetDocAuthors" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDocAuthors((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDocAuthors: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDocAuthors" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetDocAuthors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetDocAuthors" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((Application const *)arg1)->GetDocAuthors();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetDocAuthors: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetDocAuthors" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocLimitations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetDocLimitations", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDocLimitations" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetDocLimitations" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDocLimitations((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDocLimitations: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDocLimitations" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetDocLimitations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetDocLimitations" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((Application const *)arg1)->GetDocLimitations();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetDocLimitations: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetDocLimitations" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocSeeAlso(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetDocSeeAlso", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDocSeeAlso" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetDocSeeAlso" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDocSeeAlso((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDocSeeAlso: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDocSeeAlso" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetDocSeeAlso(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetDocSeeAlso" "', argument " "1"" of type '" "Application const *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((Application const *)arg1)->GetDocSeeAlso();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetDocSeeAlso: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetDocSeeAlso" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocTags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::vector< std::string,std::allocator< std::string > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetDocTags", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDocTags" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    int res = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetDocTags" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > >""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDocTags(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDocTags: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDocTags" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_AddDocTag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_AddDocTag", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_AddDocTag" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_AddDocTag" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_AddDocTag" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->AddDocTag((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_AddDocTag: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_AddDocTag" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetDocTags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetDocTags" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetDocTags();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetDocTags: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetDocTags" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_IsMultiWritingEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_IsMultiWritingEnabled" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(arg1)->IsMultiWritingEnabled();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_IsMultiWritingEnabled: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_IsMultiWritingEnabled" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetParameterList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  otb::Wrapper::ParameterGroup *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetParameterList" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ParameterGroup *)(arg1)->GetParameterList();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetParameterList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetParameterList" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__Wrapper__ParameterGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetNumberOfExamples(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetNumberOfExamples" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->GetNumberOfExamples();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetNumberOfExamples: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetNumberOfExamples" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetExampleComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetExampleComment", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetExampleComment" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_GetExampleComment" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetExampleComment(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetExampleComment: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetExampleComment" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetExampleNumberOfParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetExampleNumberOfParameters", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetExampleNumberOfParameters" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_GetExampleNumberOfParameters" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->GetExampleNumberOfParameters(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetExampleNumberOfParameters: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetExampleNumberOfParameters" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetExampleParameterKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetExampleParameterKey", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetExampleParameterKey" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_GetExampleParameterKey" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetExampleParameterKey" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetExampleParameterKey(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetExampleParameterKey: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetExampleParameterKey" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetExampleParameterValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_GetExampleParameterValue", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetExampleParameterValue" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_GetExampleParameterValue" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_GetExampleParameterValue" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetExampleParameterValue(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetExampleParameterValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetExampleParameterValue" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocExampleParameterValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDocExampleParameterValue" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetDocExampleParameterValue" "', argument " "2"" of type '" "std::string const""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetDocExampleParameterValue" "', argument " "3"" of type '" "std::string const""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_SetDocExampleParameterValue" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDocExampleParameterValue(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDocExampleParameterValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDocExampleParameterValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocExampleParameterValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetDocExampleParameterValue" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetDocExampleParameterValue" "', argument " "2"" of type '" "std::string const""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetDocExampleParameterValue" "', argument " "3"" of type '" "std::string const""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetDocExampleParameterValue(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetDocExampleParameterValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetDocExampleParameterValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetDocExampleParameterValue(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_SetDocExampleParameterValue", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_SetDocExampleParameterValue__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_SetDocExampleParameterValue__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_SetDocExampleParameterValue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetDocExampleParameterValue(std::string const,std::string const,unsigned int)\n"
    "    Application::SetDocExampleParameterValue(std::string const,std::string const)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_SetExampleComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetExampleComment", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetExampleComment" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetExampleComment" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetExampleComment" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetExampleComment" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetExampleComment((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetExampleComment: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetExampleComment" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_AddExample__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_AddExample" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_AddExample" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_AddExample" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->AddExample((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_AddExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_AddExample" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_AddExample__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_AddExample" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(arg1)->AddExample();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_AddExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_AddExample" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_AddExample(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_AddExample", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Application_AddExample__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_AddExample__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_AddExample'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::AddExample(std::string const &)\n"
    "    Application::AddExample()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_GetCLExample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetCLExample" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetCLExample();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetCLExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetCLExample" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetHtmlExample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetHtmlExample" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetHtmlExample();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetHtmlExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetHtmlExample" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetOutputParametersSumUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< std::pair< std::string,std::string >,std::allocator< std::pair< std::string,std::string > > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetOutputParametersSumUp" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (arg1)->GetOutputParametersSumUp();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetOutputParametersSumUp: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetOutputParametersSumUp" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector< std::pair< std::string,std::string >,std::allocator< std::pair< std::string,std::string > > >(static_cast< const std::vector< std::pair< std::string,std::string >,std::allocator< std::pair< std::string,std::string > > >& >(result))), SWIGTYPE_p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromUInt8NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromUInt8NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromUInt8NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromUInt8NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromUInt8NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UBYTE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned char*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromUInt8NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromUInt8NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromUInt8NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  short *arg4 = (short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromInt16NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_SHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromInt16NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromUInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromUInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromUInt16NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromUInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromUInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_USHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromUInt16NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromUInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromUInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromInt32NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_INT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromInt32NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromUInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned int *arg4 = (unsigned int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromUInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromUInt32NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromUInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromUInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UINT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromUInt32NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromUInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromUInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  float *arg4 = (float *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromFloatNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromFloatNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_FLOAT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (float*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromFloatNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  double *arg4 = (double *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromDoubleNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromDoubleNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_DOUBLE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (double*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromDoubleNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromCFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< float > *arg4 = (std::complex< float > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromCFloatNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromCFloatNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromCFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromCFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_SetVectorImageFromCFloatNumpyArray_" "', argument " "4"" of type '" "std::complex< float > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< float > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_SetVectorImageFromCFloatNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_SetVectorImageFromCFloatNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_SetVectorImageFromCFloatNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromCFloatNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromCFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromCFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetVectorImageFromCDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< double > *arg4 = (std::complex< double > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetVectorImageFromCDoubleNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetVectorImageFromCDoubleNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetVectorImageFromCDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetVectorImageFromCDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_SetVectorImageFromCDoubleNumpyArray_" "', argument " "4"" of type '" "std::complex< double > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< double > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_SetVectorImageFromCDoubleNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_SetVectorImageFromCDoubleNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_SetVectorImageFromCDoubleNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromCDoubleNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetVectorImageFromCDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetVectorImageFromCDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromUInt8NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromUInt8NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromUInt8NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromUInt8NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromUInt8NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UBYTE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned char*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromUInt8NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromUInt8NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromUInt8NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  short *arg4 = (short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromInt16NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_SHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromInt16NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromUInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromUInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromUInt16NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromUInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromUInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_USHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromUInt16NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromUInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromUInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromInt32NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_INT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromInt32NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromUInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned int *arg4 = (unsigned int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromUInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromUInt32NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromUInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromUInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UINT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromUInt32NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromUInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromUInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  float *arg4 = (float *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromFloatNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromFloatNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_FLOAT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (float*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromFloatNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  double *arg4 = (double *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromDoubleNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromDoubleNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_DOUBLE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (double*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromDoubleNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromCFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< float > *arg4 = (std::complex< float > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromCFloatNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromCFloatNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromCFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromCFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_SetImageFromCFloatNumpyArray_" "', argument " "4"" of type '" "std::complex< float > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< float > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_SetImageFromCFloatNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_SetImageFromCFloatNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_SetImageFromCFloatNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromCFloatNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromCFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromCFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetImageFromCDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< double > *arg4 = (std::complex< double > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetImageFromCDoubleNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetImageFromCDoubleNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_SetImageFromCDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_SetImageFromCDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_SetImageFromCDoubleNumpyArray_" "', argument " "4"" of type '" "std::complex< double > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< double > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_SetImageFromCDoubleNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_SetImageFromCDoubleNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_SetImageFromCDoubleNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromCDoubleNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetImageFromCDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetImageFromCDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsUInt8NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  unsigned char **arg3 = (unsigned char **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsUInt8NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsUInt8NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsUInt8NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsUInt8NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsUInt8NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsUInt8NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_UBYTE, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  short **arg3 = (short **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsInt16NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsInt16NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsInt16NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_SHORT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsUInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  unsigned short **arg3 = (unsigned short **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsUInt16NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsUInt16NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsUInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsUInt16NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsUInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsUInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_USHORT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  int **arg3 = (int **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsInt32NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsInt32NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsInt32NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_INT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsUInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  unsigned int **arg3 = (unsigned int **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsUInt32NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsUInt32NumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsUInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsUInt32NumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsUInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsUInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_UINT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  float **arg3 = (float **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsFloatNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsFloatNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsFloatNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_FLOAT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  double **arg3 = (double **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsDoubleNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsDoubleNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsDoubleNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_DOUBLE, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsCFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::complex< float > **arg3 = (std::complex< float > **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::complex< float > *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsCFloatNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsCFloatNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsCFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsCFloatNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsCFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsCFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_CFLOAT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_GetVectorImageAsCDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  std::string arg2 ;
  std::complex< double > **arg3 = (std::complex< double > **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::complex< double > *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_GetVectorImageAsCDoubleNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_GetVectorImageAsCDoubleNumpyArray_" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_GetVectorImageAsCDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsCDoubleNumpyArray_(arg1,arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_GetVectorImageAsCDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_GetVectorImageAsCDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_CDOUBLE, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_ConvertPixelTypeToNumpy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  otb::Wrapper::ImagePixelType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_ConvertPixelTypeToNumpy", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_ConvertPixelTypeToNumpy" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_ConvertPixelTypeToNumpy" "', argument " "2"" of type '" "otb::Wrapper::ImagePixelType""'");
  } 
  arg2 = static_cast< otb::Wrapper::ImagePixelType >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = Application_ConvertPixelTypeToNumpy(arg1,arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_ConvertPixelTypeToNumpy: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_ConvertPixelTypeToNumpy" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_SetupImageInformation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  ImageBaseType *arg2 = (ImageBaseType *) 0 ;
  itk::Point< itk::SpacePrecisionType,2 > arg3 ;
  itk::Vector< itk::SpacePrecisionType,2 > arg4 ;
  itk::Size< 2 > arg5 ;
  itk::ImageRegion< 2 > arg6 ;
  otb::ImageMetadata arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  void *argp7 ;
  int res7 = 0 ;
  PyObject *swig_obj[7] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_SetupImageInformation", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_SetupImageInformation" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_SetupImageInformation" "', argument " "2"" of type '" "ImageBaseType *""'"); 
  }
  arg2 = reinterpret_cast< ImageBaseType * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itk__PointT_double_2_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_SetupImageInformation" "', argument " "3"" of type '" "itk::Point< itk::SpacePrecisionType,2 >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetupImageInformation" "', argument " "3"" of type '" "itk::Point< itk::SpacePrecisionType,2 >""'");
    } else {
      itk::Point< itk::SpacePrecisionType,2 > * temp = reinterpret_cast< itk::Point< itk::SpacePrecisionType,2 > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_itk__VectorT_double_2_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_SetupImageInformation" "', argument " "4"" of type '" "itk::Vector< itk::SpacePrecisionType,2 >""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetupImageInformation" "', argument " "4"" of type '" "itk::Vector< itk::SpacePrecisionType,2 >""'");
    } else {
      itk::Vector< itk::SpacePrecisionType,2 > * temp = reinterpret_cast< itk::Vector< itk::SpacePrecisionType,2 > * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_itk__SizeT_2_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Application_SetupImageInformation" "', argument " "5"" of type '" "itk::Size< 2 >""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetupImageInformation" "', argument " "5"" of type '" "itk::Size< 2 >""'");
    } else {
      itk::Size< 2 > * temp = reinterpret_cast< itk::Size< 2 > * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_itk__ImageRegionT_2_t,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Application_SetupImageInformation" "', argument " "6"" of type '" "itk::ImageRegion< 2 >""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetupImageInformation" "', argument " "6"" of type '" "itk::ImageRegion< 2 >""'");
    } else {
      itk::ImageRegion< 2 > * temp = reinterpret_cast< itk::ImageRegion< 2 > * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  {
    res7 = SWIG_ConvertPtr(swig_obj[6], &argp7, SWIGTYPE_p_otb__ImageMetadata,  0  | 0);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "Application_SetupImageInformation" "', argument " "7"" of type '" "otb::ImageMetadata""'"); 
    }  
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_SetupImageInformation" "', argument " "7"" of type '" "otb::ImageMetadata""'");
    } else {
      otb::ImageMetadata * temp = reinterpret_cast< otb::ImageMetadata * >(argp7);
      arg7 = *temp;
      if (SWIG_IsNewObj(res7)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_SetupImageInformation(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_SetupImageInformation: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_SetupImageInformation" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Application(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Application" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_Application(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_Application: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_Application" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Application_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Application, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Application_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  Application_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Application_Pointer *)new Application_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_Application_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_Application_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Application_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Application_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Application_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_Application_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Application_Pointer" "', argument " "1"" of type '" "Application_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Application_Pointer" "', argument " "1"" of type '" "Application_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Application_Pointer *)new Application_Pointer((Application_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_Application_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_Application_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Application_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Application_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application *arg1 = (Application *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  Application_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Application_Pointer" "', argument " "1"" of type '" "Application *""'"); 
  }
  arg1 = reinterpret_cast< Application * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Application_Pointer *)new Application_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_Application_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_Application_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Application_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Application_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Application_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Application_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Application_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Application_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Application_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Application_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application_Pointer::Application_Pointer()\n"
    "    Application_Pointer::Application_Pointer(Application_Pointer const &)\n"
    "    Application_Pointer::Application_Pointer(Application *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Application_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Application_Pointer" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_Application_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_Application_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Application *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer___deref__" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Application *)((Application_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Application, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_IsNotNull" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((Application_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_IsNull" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((Application_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Application *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetPointer" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Application *)((Application_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Application, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetName", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetName" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetName((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetName" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetName" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDescription" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetDescription" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDescription((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDescription" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetDescription" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetDescription" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_Init" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Init();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_Init: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_Init" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_UpdateParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_UpdateParameters" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->UpdateParameters();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_UpdateParameters: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_UpdateParameters" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_Execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_Execute" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (int)(*arg1)->Execute();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_Execute: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_Execute" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_WriteOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_WriteOutput" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->WriteOutput();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_WriteOutput: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_WriteOutput" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_ExecuteAndWriteOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_ExecuteAndWriteOutput" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (int)(*arg1)->ExecuteAndWriteOutput();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_ExecuteAndWriteOutput: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_ExecuteAndWriteOutput" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_ConnectImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  Application *arg3 = (Application *) 0 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[4] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_ConnectImage", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_ConnectImage" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_ConnectImage" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_Application, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_ConnectImage" "', argument " "3"" of type '" "Application *""'"); 
  }
  arg3 = reinterpret_cast< Application * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_ConnectImage" "', argument " "4"" of type '" "std::string""'"); 
    }
    arg4 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->ConnectImage(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_ConnectImage: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_ConnectImage" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_PropagateConnectMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_PropagateConnectMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_PropagateConnectMode" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_PropagateConnectMode" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->PropagateConnectMode(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_PropagateConnectMode: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_PropagateConnectMode" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_LoadParametersFromXML(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_LoadParametersFromXML", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_LoadParametersFromXML" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_LoadParametersFromXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_LoadParametersFromXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->LoadParametersFromXML((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_LoadParametersFromXML: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_LoadParametersFromXML" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SaveParametersToXML(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SaveParametersToXML", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SaveParametersToXML" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SaveParametersToXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SaveParametersToXML" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SaveParametersToXML((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SaveParametersToXML: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SaveParametersToXML" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetLogger(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Logger *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetLogger" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Logger *)(*arg1)->GetLogger();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetLogger: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetLogger" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Logger, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_IsDeprecated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_IsDeprecated" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->IsDeprecated();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_IsDeprecated: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_IsDeprecated" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParametersKeys__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParametersKeys" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_GetParametersKeys" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetParametersKeys(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParametersKeys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParametersKeys" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParametersKeys__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParametersKeys" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetParametersKeys();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParametersKeys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParametersKeys" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParametersKeys(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParametersKeys", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Application_Pointer_GetParametersKeys__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Application_Pointer_GetParametersKeys__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetParametersKeys'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetParametersKeys(bool)\n"
    "    Application::GetParametersKeys()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterByKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  Parameter *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterByKey", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterByKey" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterByKey" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (Parameter *)(*arg1)->GetParameterByKey(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterByKey: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterByKey" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Parameter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterName", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterName" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterName" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetParameterName(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterName" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterDescription" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterDescription" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetParameterDescription(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterDescription" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterDescription", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterDescription" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterDescription" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterDescription" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterDescription(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterDescription" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterUserValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterUserValue", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterUserValue" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterUserValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterUserValue" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterUserValue(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterUserValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterUserValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_EnableParameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_EnableParameter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_EnableParameter" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_EnableParameter" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->EnableParameter(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_EnableParameter: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_EnableParameter" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_DisableParameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_DisableParameter", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_DisableParameter" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_DisableParameter" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->DisableParameter(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_DisableParameter: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_DisableParameter" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_IsParameterEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_IsParameterEnabled", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_IsParameterEnabled" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_IsParameterEnabled" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->IsParameterEnabled(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_IsParameterEnabled: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_IsParameterEnabled" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_IsMandatory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_IsMandatory", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_IsMandatory" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_IsMandatory" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->IsMandatory(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_IsMandatory: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_IsMandatory" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_HasAutomaticValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_HasAutomaticValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_HasAutomaticValue" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_HasAutomaticValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasAutomaticValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_HasAutomaticValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_HasAutomaticValue" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_HasUserValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_HasUserValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_HasUserValue" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_HasUserValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasUserValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_HasUserValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_HasUserValue" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_ClearValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_ClearValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_ClearValue" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_ClearValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->ClearValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_ClearValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_ClearValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_HasValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_HasValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_HasValue" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_HasValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasValue(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_HasValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_HasValue" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterUserLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::UserLevel result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterUserLevel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterUserLevel" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterUserLevel" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::UserLevel)(*arg1)->GetParameterUserLevel(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterUserLevel: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterUserLevel" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::ParameterType result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterType" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterType" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ParameterType)(*arg1)->GetParameterType(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterRole(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::Role result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterRole", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterRole" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterRole" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::Role)(*arg1)->GetParameterRole(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterRole: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterRole" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetChoiceKeys(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetChoiceKeys", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetChoiceKeys" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetChoiceKeys" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetChoiceKeys(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetChoiceKeys: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetChoiceKeys" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetChoiceNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetChoiceNames", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetChoiceNames" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetChoiceNames" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetChoiceNames(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetChoiceNames: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetChoiceNames" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_IsApplicationReady(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_IsApplicationReady" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->IsApplicationReady();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_IsApplicationReady: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_IsApplicationReady" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterInt" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterInt" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_SetParameterInt" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterInt(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterInt" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterInt" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterInt" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterInt(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterInt" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterInt(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterInt", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_SetParameterInt__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_SetParameterInt__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_SetParameterInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterInt(std::string,int,bool)\n"
    "    Application::SetParameterInt(std::string,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterFloat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  float arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterFloat" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterFloat" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_SetParameterFloat" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterFloat(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterFloat: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterFloat" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterFloat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterFloat" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterFloat" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterFloat(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterFloat: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterFloat" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterFloat(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterFloat", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_SetParameterFloat__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_SetParameterFloat__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_SetParameterFloat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterFloat(std::string,float,bool)\n"
    "    Application::SetParameterFloat(std::string,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterDouble__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  double arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterDouble" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterDouble" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterDouble" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_SetParameterDouble" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterDouble(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterDouble" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterDouble__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterDouble" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterDouble" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterDouble" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterDouble(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterDouble" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterDouble(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterDouble", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_SetParameterDouble__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_SetParameterDouble__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_SetParameterDouble'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterDouble(std::string,double,bool)\n"
    "    Application::SetParameterDouble(std::string,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterString" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_SetParameterString" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterString(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterString" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterString" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterString" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterString(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterString" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterString(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterString", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_Pointer_SetParameterString__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_SetParameterString__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_SetParameterString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterString(std::string,std::string,bool)\n"
    "    Application::SetParameterString(std::string,std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterStringList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::vector< std::string,std::allocator< std::string > > arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterStringList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    int res = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterStringList" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > >""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_SetParameterStringList" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterStringList(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterStringList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::vector< std::string,std::allocator< std::string > > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterStringList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    int res = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterStringList" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > >""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterStringList(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterStringList(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterStringList", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::string,std::allocator< std::string > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_Pointer_SetParameterStringList__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::string,std::allocator< std::string > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_SetParameterStringList__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_SetParameterStringList'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetParameterStringList(std::string,std::vector< std::string,std::allocator< std::string > >,bool)\n"
    "    Application::SetParameterStringList(std::string,std::vector< std::string,std::allocator< std::string > >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterOutputImagePixelType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  otb::Wrapper::ImagePixelType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterOutputImagePixelType", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterOutputImagePixelType" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterOutputImagePixelType" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetParameterOutputImagePixelType" "', argument " "3"" of type '" "otb::Wrapper::ImagePixelType""'");
  } 
  arg3 = static_cast< otb::Wrapper::ImagePixelType >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterOutputImagePixelType(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterOutputImagePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterOutputImagePixelType" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterOutputImagePixelType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  otb::Wrapper::ImagePixelType result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterOutputImagePixelType", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterOutputImagePixelType" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterOutputImagePixelType" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ImagePixelType)(*arg1)->GetParameterOutputImagePixelType(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterOutputImagePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterOutputImagePixelType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterInt", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterInt" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterInt" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (int)(*arg1)->GetParameterInt(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterInt: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterInt" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterFloat", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterFloat" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterFloat" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (float)(*arg1)->GetParameterFloat(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterFloat: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterFloat" );
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterDouble", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterDouble" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterDouble" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (double)(*arg1)->GetParameterDouble(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterDouble: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterDouble" );
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterString", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterString" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetParameterString(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterString" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterStringList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterStringList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterStringList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetParameterStringList(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterStringList" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterAsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterAsString", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterAsString" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterAsString" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetParameterAsString(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterAsString: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterAsString" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetListViewSingleSelectionMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetListViewSingleSelectionMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetListViewSingleSelectionMode" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetListViewSingleSelectionMode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetListViewSingleSelectionMode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->GetListViewSingleSelectionMode((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetListViewSingleSelectionMode: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetListViewSingleSelectionMode" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterOutputImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetParameterOutputImage", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterOutputImage" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetParameterOutputImage" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)(*arg1)->GetParameterOutputImage(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterOutputImage: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterOutputImage" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetParameterInputImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  ImageBaseType *arg3 = (ImageBaseType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetParameterInputImage", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetParameterInputImage" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetParameterInputImage" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_SetParameterInputImage" "', argument " "3"" of type '" "ImageBaseType *""'"); 
  }
  arg3 = reinterpret_cast< ImageBaseType * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetParameterInputImage(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetParameterInputImage: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetParameterInputImage" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_AddImageToParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  ImageBaseType *arg3 = (ImageBaseType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_AddImageToParameterInputImageList", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_AddImageToParameterInputImageList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_AddImageToParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_AddImageToParameterInputImageList" "', argument " "3"" of type '" "ImageBaseType *""'"); 
  }
  arg3 = reinterpret_cast< ImageBaseType * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->AddImageToParameterInputImageList(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_AddImageToParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_AddImageToParameterInputImageList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_AddParameterStringList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_AddParameterStringList", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_AddParameterStringList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_AddParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_AddParameterStringList" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_AddParameterStringList" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->AddParameterStringList(arg2,(std::string const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_AddParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_AddParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetNthParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  unsigned int *arg3 = 0 ;
  ImageBaseType *arg4 = (ImageBaseType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetNthParameterInputImageList", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetNthParameterInputImageList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetNthParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetNthParameterInputImageList" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_Pointer_SetNthParameterInputImageList" "', argument " "4"" of type '" "ImageBaseType *""'"); 
  }
  arg4 = reinterpret_cast< ImageBaseType * >(argp4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetNthParameterInputImageList(arg2,(unsigned int const &)*arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetNthParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetNthParameterInputImageList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetNthParameterStringList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  unsigned int *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetNthParameterStringList", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetNthParameterStringList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetNthParameterStringList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetNthParameterStringList" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_Pointer_SetNthParameterStringList" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetNthParameterStringList" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetNthParameterStringList(arg2,(unsigned int const &)*arg3,(std::string const &)*arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetNthParameterStringList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetNthParameterStringList" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_ClearParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_ClearParameterInputImageList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_ClearParameterInputImageList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_ClearParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->ClearParameterInputImageList(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_ClearParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_ClearParameterInputImageList" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetNumberOfElementsInParameterInputImageList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetNumberOfElementsInParameterInputImageList", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetNumberOfElementsInParameterInputImageList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetNumberOfElementsInParameterInputImageList" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(*arg1)->GetNumberOfElementsInParameterInputImageList(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetNumberOfElementsInParameterInputImageList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetNumberOfElementsInParameterInputImageList" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageOrigin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::Point< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageOrigin" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageOrigin" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageOrigin((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageOrigin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageOrigin" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Point< itk::SpacePrecisionType,2 >(static_cast< const itk::Point< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__PointT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageOrigin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::Point< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageOrigin" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageOrigin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageOrigin((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageOrigin: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageOrigin" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Point< itk::SpacePrecisionType,2 >(static_cast< const itk::Point< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__PointT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageOrigin(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageOrigin", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageOrigin__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageOrigin__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageOrigin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageOrigin(std::string const &,unsigned int)\n"
    "    Application::GetImageOrigin(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageSpacing__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::Vector< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageSpacing" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageSpacing" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageSpacing((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageSpacing: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageSpacing" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Vector< itk::SpacePrecisionType,2 >(static_cast< const itk::Vector< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__VectorT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageSpacing__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::Vector< itk::SpacePrecisionType,2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageSpacing" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageSpacing" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageSpacing((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageSpacing: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageSpacing" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Vector< itk::SpacePrecisionType,2 >(static_cast< const itk::Vector< itk::SpacePrecisionType,2 >& >(result))), SWIGTYPE_p_itk__VectorT_double_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageSpacing(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageSpacing", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageSpacing__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageSpacing__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageSpacing'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageSpacing(std::string const &,unsigned int)\n"
    "    Application::GetImageSpacing(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::Size< 2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageSize" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageSize" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageSize((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageSize" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Size< 2 >(static_cast< const itk::Size< 2 >& >(result))), SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::Size< 2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageSize" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageSize" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageSize((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageSize: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageSize" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::Size< 2 >(static_cast< const itk::Size< 2 >& >(result))), SWIGTYPE_p_itk__SizeT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageSize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageSize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageSize__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageSize__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageSize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageSize(std::string const &,unsigned int)\n"
    "    Application::GetImageSize(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageNbBands__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageNbBands" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageNbBands" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(*arg1)->GetImageNbBands((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageNbBands: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageNbBands" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageNbBands__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageNbBands" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageNbBands" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(*arg1)->GetImageNbBands((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageNbBands: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageNbBands" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageNbBands(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageNbBands", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageNbBands__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageNbBands__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageNbBands'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageNbBands(std::string const &,unsigned int)\n"
    "    Application::GetImageNbBands(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageProjection__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  std::string result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageProjection" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageProjection" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageProjection((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageProjection: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageProjection" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageProjection__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::string result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageProjection" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageProjection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageProjection((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageProjection: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageProjection" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageProjection(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageProjection", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageProjection__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageProjection__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageProjection'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageProjection(std::string const &,unsigned int)\n"
    "    Application::GetImageProjection(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_PropagateRequestedRegion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  itk::ImageRegion< 2 > arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned long result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itk__ImageRegionT_2_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'");
    } else {
      itk::ImageRegion< 2 > * temp = reinterpret_cast< itk::ImageRegion< 2 > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->PropagateRequestedRegion((std::string const &)*arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_PropagateRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_PropagateRequestedRegion" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_PropagateRequestedRegion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  itk::ImageRegion< 2 > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned long result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itk__ImageRegionT_2_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_PropagateRequestedRegion" "', argument " "3"" of type '" "itk::ImageRegion< 2 >""'");
    } else {
      itk::ImageRegion< 2 > * temp = reinterpret_cast< itk::ImageRegion< 2 > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->PropagateRequestedRegion((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_PropagateRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_PropagateRequestedRegion" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_PropagateRequestedRegion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_PropagateRequestedRegion", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_Pointer_PropagateRequestedRegion__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_PropagateRequestedRegion__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_PropagateRequestedRegion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::PropagateRequestedRegion(std::string const &,itk::ImageRegion< 2 >,unsigned int)\n"
    "    Application::PropagateRequestedRegion(std::string const &,itk::ImageRegion< 2 >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageRequestedRegion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itk::ImageRegion< 2 > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageRequestedRegion" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageRequestedRegion" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageRequestedRegion((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageRequestedRegion" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::ImageRegion< 2 >(static_cast< const itk::ImageRegion< 2 >& >(result))), SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageRequestedRegion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itk::ImageRegion< 2 > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageRequestedRegion" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageRequestedRegion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetImageRequestedRegion((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageRequestedRegion: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageRequestedRegion" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itk::ImageRegion< 2 >(static_cast< const itk::ImageRegion< 2 >& >(result))), SWIGTYPE_p_itk__ImageRegionT_2_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageRequestedRegion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageRequestedRegion", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageRequestedRegion__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageRequestedRegion__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageRequestedRegion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageRequestedRegion(std::string const &,unsigned int)\n"
    "    Application::GetImageRequestedRegion(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageMetadata__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  otb::ImageMetadata *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageMetadata" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageMetadata" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::ImageMetadata *) &(*arg1)->GetImageMetadata((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageMetadata" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__ImageMetadata, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageMetadata__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  otb::ImageMetadata *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageMetadata" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageMetadata" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::ImageMetadata *) &(*arg1)->GetImageMetadata((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageMetadata" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__ImageMetadata, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageMetadata(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageMetadata", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageMetadata__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageMetadata__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageMetadata'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageMetadata(std::string const &,unsigned int)\n"
    "    Application::GetImageMetadata(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageMetadata__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  otb::ImageMetadata *arg2 = 0 ;
  std::string *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageMetadata" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_otb__ImageMetadata,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  arg2 = reinterpret_cast< otb::ImageMetadata * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_SetImageMetadata" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetImageMetadata((otb::ImageMetadata const &)*arg2,(std::string const &)*arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageMetadata" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageMetadata__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  otb::ImageMetadata *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageMetadata" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_otb__ImageMetadata,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetImageMetadata" "', argument " "2"" of type '" "otb::ImageMetadata const &""'"); 
  }
  arg2 = reinterpret_cast< otb::ImageMetadata * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetImageMetadata" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetImageMetadata((otb::ImageMetadata const &)*arg2,(std::string const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageMetadata: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageMetadata" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageMetadata(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageMetadata", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_otb__ImageMetadata, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_Pointer_SetImageMetadata__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_otb__ImageMetadata, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_SetImageMetadata__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_SetImageMetadata'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetImageMetadata(otb::ImageMetadata const &,std::string const &,unsigned int)\n"
    "    Application::SetImageMetadata(otb::ImageMetadata const &,std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetMetadataDictionary__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  itkMetaDataDictionary result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetMetadataDictionary" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetMetadataDictionary" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetMetadataDictionary((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetMetadataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetMetadataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkMetaDataDictionary(static_cast< const itkMetaDataDictionary& >(result))), SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetMetadataDictionary__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  itkMetaDataDictionary result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetMetadataDictionary" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetMetadataDictionary" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetMetadataDictionary((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetMetadataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetMetadataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkMetaDataDictionary(static_cast< const itkMetaDataDictionary& >(result))), SWIGTYPE_p_itkMetaDataDictionary, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetMetadataDictionary(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetMetadataDictionary", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetMetadataDictionary__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetMetadataDictionary__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetMetadataDictionary'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetMetadataDictionary(std::string const &,unsigned int)\n"
    "    Application::GetMetadataDictionary(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageBasePixelType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  otb::Wrapper::ImagePixelType result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageBasePixelType" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetImageBasePixelType" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ImagePixelType)(*arg1)->GetImageBasePixelType((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageBasePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageBasePixelType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageBasePixelType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  otb::Wrapper::ImagePixelType result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetImageBasePixelType" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_GetImageBasePixelType" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ImagePixelType)(*arg1)->GetImageBasePixelType((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetImageBasePixelType: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetImageBasePixelType" );
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetImageBasePixelType(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_GetImageBasePixelType", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_GetImageBasePixelType__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Application_Pointer_GetImageBasePixelType__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_GetImageBasePixelType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::GetImageBasePixelType(std::string const &,unsigned int)\n"
    "    Application::GetImageBasePixelType(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetProgressSource(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkProcessObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetProgressSource" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject *)(*arg1)->GetProgressSource();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetProgressSource: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetProgressSource" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkProcessObject, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetProgressDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetProgressDescription" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetProgressDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetProgressDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetProgressDescription" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_FreeResources(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_FreeResources" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->FreeResources();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_FreeResources: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_FreeResources" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocLongDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetDocLongDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDocLongDescription" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetDocLongDescription" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDocLongDescription((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDocLongDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDocLongDescription" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetDocLongDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetDocLongDescription" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetDocLongDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetDocLongDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetDocLongDescription" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocAuthors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetDocAuthors", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDocAuthors" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetDocAuthors" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDocAuthors((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDocAuthors: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDocAuthors" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetDocAuthors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetDocAuthors" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetDocAuthors();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetDocAuthors: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetDocAuthors" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocLimitations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetDocLimitations", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDocLimitations" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetDocLimitations" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDocLimitations((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDocLimitations: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDocLimitations" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetDocLimitations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetDocLimitations" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetDocLimitations();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetDocLimitations: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetDocLimitations" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocSeeAlso(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetDocSeeAlso", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDocSeeAlso" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetDocSeeAlso" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDocSeeAlso((char const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDocSeeAlso: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDocSeeAlso" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetDocSeeAlso(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetDocSeeAlso" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetDocSeeAlso();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetDocSeeAlso: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetDocSeeAlso" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocTags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::vector< std::string,std::allocator< std::string > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetDocTags", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDocTags" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::vector< std::string,std::allocator< std::string > > *ptr = (std::vector< std::string,std::allocator< std::string > > *)0;
    int res = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetDocTags" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > >""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDocTags(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDocTags: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDocTags" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_AddDocTag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_AddDocTag", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_AddDocTag" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_AddDocTag" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_AddDocTag" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->AddDocTag((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_AddDocTag: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_AddDocTag" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetDocTags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetDocTags" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetDocTags();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetDocTags: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetDocTags" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_IsMultiWritingEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_IsMultiWritingEnabled" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->IsMultiWritingEnabled();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_IsMultiWritingEnabled: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_IsMultiWritingEnabled" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetParameterList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  otb::Wrapper::ParameterGroup *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetParameterList" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (otb::Wrapper::ParameterGroup *)(*arg1)->GetParameterList();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetParameterList: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetParameterList" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_otb__Wrapper__ParameterGroup, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetNumberOfExamples(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetNumberOfExamples" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(*arg1)->GetNumberOfExamples();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetNumberOfExamples: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetNumberOfExamples" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetExampleComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetExampleComment", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetExampleComment" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_GetExampleComment" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetExampleComment(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetExampleComment: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetExampleComment" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetExampleNumberOfParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetExampleNumberOfParameters", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetExampleNumberOfParameters" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_GetExampleNumberOfParameters" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(*arg1)->GetExampleNumberOfParameters(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetExampleNumberOfParameters: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetExampleNumberOfParameters" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetExampleParameterKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetExampleParameterKey", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetExampleParameterKey" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_GetExampleParameterKey" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetExampleParameterKey" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetExampleParameterKey(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetExampleParameterKey: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetExampleParameterKey" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetExampleParameterValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetExampleParameterValue", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetExampleParameterValue" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_GetExampleParameterValue" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_GetExampleParameterValue" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetExampleParameterValue(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetExampleParameterValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetExampleParameterValue" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocExampleParameterValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDocExampleParameterValue" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetDocExampleParameterValue" "', argument " "2"" of type '" "std::string const""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetDocExampleParameterValue" "', argument " "3"" of type '" "std::string const""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Application_Pointer_SetDocExampleParameterValue" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDocExampleParameterValue(arg2,arg3,arg4);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDocExampleParameterValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDocExampleParameterValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocExampleParameterValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetDocExampleParameterValue" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetDocExampleParameterValue" "', argument " "2"" of type '" "std::string const""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetDocExampleParameterValue" "', argument " "3"" of type '" "std::string const""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetDocExampleParameterValue(arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetDocExampleParameterValue: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetDocExampleParameterValue" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetDocExampleParameterValue(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_SetDocExampleParameterValue", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_Pointer_SetDocExampleParameterValue__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Application_Pointer_SetDocExampleParameterValue__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_SetDocExampleParameterValue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::SetDocExampleParameterValue(std::string const,std::string const,unsigned int)\n"
    "    Application::SetDocExampleParameterValue(std::string const,std::string const)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetExampleComment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetExampleComment", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetExampleComment" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetExampleComment" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetExampleComment" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetExampleComment" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetExampleComment((std::string const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetExampleComment: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetExampleComment" );
    }
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_AddExample__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_AddExample" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_AddExample" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_AddExample" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(*arg1)->AddExample((std::string const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_AddExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_AddExample" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_AddExample__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_AddExample" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned int)(*arg1)->AddExample();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_AddExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_AddExample" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_AddExample(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_AddExample", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Application_Pointer_AddExample__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_AddExample__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_AddExample'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Application::AddExample(std::string const &)\n"
    "    Application::AddExample()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetCLExample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetCLExample" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetCLExample();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetCLExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetCLExample" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetHtmlExample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetHtmlExample" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetHtmlExample();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetHtmlExample: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetHtmlExample" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetOutputParametersSumUp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< std::pair< std::string,std::string >,std::allocator< std::pair< std::string,std::string > > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetOutputParametersSumUp" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->GetOutputParametersSumUp();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetOutputParametersSumUp: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetOutputParametersSumUp" );
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector< std::pair< std::string,std::string >,std::allocator< std::pair< std::string,std::string > > >(static_cast< const std::vector< std::pair< std::string,std::string >,std::allocator< std::pair< std::string,std::string > > >& >(result))), SWIGTYPE_p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromUInt8NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromUInt8NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromUInt8NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromUInt8NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromUInt8NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UBYTE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned char*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromUInt8NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromUInt8NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromUInt8NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  short *arg4 = (short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromInt16NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_SHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromInt16NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromUInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromUInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromUInt16NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromUInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromUInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_USHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromUInt16NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromUInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromUInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromInt32NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_INT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromInt32NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromUInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned int *arg4 = (unsigned int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromUInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromUInt32NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromUInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromUInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UINT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromUInt32NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromUInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromUInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  float *arg4 = (float *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromFloatNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromFloatNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_FLOAT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (float*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromFloatNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  double *arg4 = (double *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromDoubleNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromDoubleNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_DOUBLE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (double*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromDoubleNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromCFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< float > *arg4 = (std::complex< float > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromCFloatNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromCFloatNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromCFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromCFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_Pointer_SetVectorImageFromCFloatNumpyArray_" "', argument " "4"" of type '" "std::complex< float > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< float > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_Pointer_SetVectorImageFromCFloatNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_Pointer_SetVectorImageFromCFloatNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_Pointer_SetVectorImageFromCFloatNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromCFloatNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromCFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromCFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetVectorImageFromCDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< double > *arg4 = (std::complex< double > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" "', argument " "4"" of type '" "std::complex< double > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< double > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetVectorImageFromCDoubleNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetVectorImageFromCDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetVectorImageFromCDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromUInt8NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromUInt8NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromUInt8NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromUInt8NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromUInt8NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UBYTE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned char*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromUInt8NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromUInt8NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromUInt8NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  short *arg4 = (short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromInt16NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_SHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromInt16NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromUInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromUInt16NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromUInt16NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromUInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromUInt16NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_USHORT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned short*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromUInt16NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromUInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromUInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromInt32NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_INT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromInt32NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromUInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  unsigned int *arg4 = (unsigned int *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromUInt32NumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromUInt32NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromUInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromUInt32NumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_UINT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (unsigned int*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromUInt32NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromUInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromUInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  float *arg4 = (float *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromFloatNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromFloatNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_FLOAT);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (float*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromFloatNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  double *arg4 = (double *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyArrayObject *array4 = NULL ;
  PyObject *swig_obj[4] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromDoubleNumpyArray_", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromDoubleNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    array4 = obj_to_array_no_conversion(swig_obj[3], NPY_DOUBLE);
    if (!array4 || !require_dimensions(array4,3) || !require_contiguous(array4) ||
      !require_native(array4)) SWIG_fail;
    arg4 = (double*) array_data(array4);
    arg5 = (int) array_size(array4,0);
    arg6 = (int) array_size(array4,1);
    arg7 = (int) array_size(array4,2);
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromDoubleNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromCFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< float > *arg4 = (std::complex< float > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromCFloatNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromCFloatNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromCFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromCFloatNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_Pointer_SetImageFromCFloatNumpyArray_" "', argument " "4"" of type '" "std::complex< float > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< float > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_Pointer_SetImageFromCFloatNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_Pointer_SetImageFromCFloatNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_Pointer_SetImageFromCFloatNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromCFloatNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromCFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromCFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetImageFromCDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int arg3 ;
  std::complex< double > *arg4 = (std::complex< double > *) 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  ImageBaseType *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetImageFromCDoubleNumpyArray_", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetImageFromCDoubleNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_SetImageFromCDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Application_Pointer_SetImageFromCDoubleNumpyArray_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_std__complexT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_Pointer_SetImageFromCDoubleNumpyArray_" "', argument " "4"" of type '" "std::complex< double > *""'"); 
  }
  arg4 = reinterpret_cast< std::complex< double > * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Application_Pointer_SetImageFromCDoubleNumpyArray_" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Application_Pointer_SetImageFromCDoubleNumpyArray_" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ecode7 = SWIG_AsVal_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Application_Pointer_SetImageFromCDoubleNumpyArray_" "', argument " "7"" of type '" "int""'");
  } 
  arg7 = static_cast< int >(val7);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (ImageBaseType *)Application_SetImageFromCDoubleNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetImageFromCDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetImageFromCDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ImageBaseType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsUInt8NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  unsigned char **arg3 = (unsigned char **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsUInt8NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsUInt8NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsUInt8NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsUInt8NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsUInt8NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsUInt8NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_UBYTE, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  short **arg3 = (short **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsInt16NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsInt16NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsInt16NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_SHORT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsUInt16NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  unsigned short **arg3 = (unsigned short **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsUInt16NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsUInt16NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsUInt16NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsUInt16NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsUInt16NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsUInt16NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_USHORT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  int **arg3 = (int **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsInt32NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsInt32NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsInt32NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_INT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsUInt32NumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  unsigned int **arg3 = (unsigned int **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsUInt32NumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsUInt32NumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsUInt32NumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsUInt32NumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsUInt32NumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsUInt32NumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_UINT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  float **arg3 = (float **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsFloatNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsFloatNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsFloatNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_FLOAT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  double **arg3 = (double **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsDoubleNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsDoubleNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsDoubleNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_DOUBLE, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsCFloatNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::complex< float > **arg3 = (std::complex< float > **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::complex< float > *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsCFloatNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsCFloatNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsCFloatNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsCFloatNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsCFloatNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsCFloatNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_CFLOAT, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetVectorImageAsCDoubleNumpyArray_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::string arg2 ;
  std::complex< double > **arg3 = (std::complex< double > **) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  int *arg6 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::complex< double > *data_temp3 = NULL ;
  int dim1_temp3 ;
  int dim2_temp3 ;
  int dim3_temp3 ;
  PyObject *swig_obj[2] ;
  
  {
    arg3 = &data_temp3;
    arg4 = &dim1_temp3;
    arg5 = &dim2_temp3;
    arg6 = &dim3_temp3;
  }
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetVectorImageAsCDoubleNumpyArray_", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetVectorImageAsCDoubleNumpyArray_" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Application_Pointer_GetVectorImageAsCDoubleNumpyArray_" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_GetVectorImageAsCDoubleNumpyArray_((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetVectorImageAsCDoubleNumpyArray_: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetVectorImageAsCDoubleNumpyArray_" );
    }
  }
  resultobj = SWIG_Py_Void();
  {
    npy_intp dims[3] = {
      *arg4, *arg5, *arg6 
    };
    PyObject* obj = PyArray_SimpleNewFromData(3, dims, NPY_CDOUBLE, (void*)(*arg3));
    PyArrayObject* array = (PyArrayObject*) obj;
    
    if (!array) SWIG_fail;
    resultobj = SWIG_Python_AppendOutput(resultobj,obj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_ConvertPixelTypeToNumpy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  otb::Wrapper::ImagePixelType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_ConvertPixelTypeToNumpy", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_ConvertPixelTypeToNumpy" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_ConvertPixelTypeToNumpy" "', argument " "2"" of type '" "otb::Wrapper::ImagePixelType""'");
  } 
  arg2 = static_cast< otb::Wrapper::ImagePixelType >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = Application_ConvertPixelTypeToNumpy((Application*)(arg1)->operator ->(),arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_ConvertPixelTypeToNumpy: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_ConvertPixelTypeToNumpy" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetupImageInformation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  ImageBaseType *arg2 = (ImageBaseType *) 0 ;
  itk::Point< itk::SpacePrecisionType,2 > arg3 ;
  itk::Vector< itk::SpacePrecisionType,2 > arg4 ;
  itk::Size< 2 > arg5 ;
  itk::ImageRegion< 2 > arg6 ;
  otb::ImageMetadata arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  void *argp7 ;
  int res7 = 0 ;
  PyObject *swig_obj[7] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetupImageInformation", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetupImageInformation" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ImageBaseType, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetupImageInformation" "', argument " "2"" of type '" "ImageBaseType *""'"); 
  }
  arg2 = reinterpret_cast< ImageBaseType * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itk__PointT_double_2_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_SetupImageInformation" "', argument " "3"" of type '" "itk::Point< itk::SpacePrecisionType,2 >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetupImageInformation" "', argument " "3"" of type '" "itk::Point< itk::SpacePrecisionType,2 >""'");
    } else {
      itk::Point< itk::SpacePrecisionType,2 > * temp = reinterpret_cast< itk::Point< itk::SpacePrecisionType,2 > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_itk__VectorT_double_2_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Application_Pointer_SetupImageInformation" "', argument " "4"" of type '" "itk::Vector< itk::SpacePrecisionType,2 >""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetupImageInformation" "', argument " "4"" of type '" "itk::Vector< itk::SpacePrecisionType,2 >""'");
    } else {
      itk::Vector< itk::SpacePrecisionType,2 > * temp = reinterpret_cast< itk::Vector< itk::SpacePrecisionType,2 > * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_itk__SizeT_2_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Application_Pointer_SetupImageInformation" "', argument " "5"" of type '" "itk::Size< 2 >""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetupImageInformation" "', argument " "5"" of type '" "itk::Size< 2 >""'");
    } else {
      itk::Size< 2 > * temp = reinterpret_cast< itk::Size< 2 > * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_itk__ImageRegionT_2_t,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Application_Pointer_SetupImageInformation" "', argument " "6"" of type '" "itk::ImageRegion< 2 >""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetupImageInformation" "', argument " "6"" of type '" "itk::ImageRegion< 2 >""'");
    } else {
      itk::ImageRegion< 2 > * temp = reinterpret_cast< itk::ImageRegion< 2 > * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  {
    res7 = SWIG_ConvertPtr(swig_obj[6], &argp7, SWIGTYPE_p_otb__ImageMetadata,  0  | 0);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "Application_Pointer_SetupImageInformation" "', argument " "7"" of type '" "otb::ImageMetadata""'"); 
    }  
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetupImageInformation" "', argument " "7"" of type '" "otb::ImageMetadata""'");
    } else {
      otb::ImageMetadata * temp = reinterpret_cast< otb::ImageMetadata * >(argp7);
      arg7 = *temp;
      if (SWIG_IsNewObj(res7)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Application_SetupImageInformation((Application*)(arg1)->operator ->(),arg2,arg3,arg4,arg5,arg6,arg7);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetupImageInformation: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetupImageInformation" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkObject_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_New" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_New" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    itkObject * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_itkObject, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetNameOfClass" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_AddObserver" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetCommand" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetCommand" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkCommand, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_InvokeEvent" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_RemoveObserver" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Application_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_HasObserver" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Application_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_Print" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Application_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_Print" "', argument " "1"" of type '" "Application_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Application_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Application_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Application_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Application_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Application_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Application_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Application_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_BreakOnError" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Application_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Application_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Application_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Application_Pointer *arg1 = (Application_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_Application_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Application_Pointer_ToString" "', argument " "1"" of type '" "Application_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< Application_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Application_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Application_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Application_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Registry_GetAvailableApplications(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string,std::allocator< std::string > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "Registry_GetAvailableApplications", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = Registry::GetAvailableApplications();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Registry_GetAvailableApplications: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Registry_GetAvailableApplications" );
    }
  }
  resultobj = swig::from(static_cast< std::vector< std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Registry_CreateApplicationWithoutLogger(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  Application_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Registry_CreateApplicationWithoutLogger" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Registry_CreateApplicationWithoutLogger" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = Registry::CreateApplication((std::string const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Registry_CreateApplicationWithoutLogger: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Registry_CreateApplicationWithoutLogger" );
    }
  }
  {
    // get the raw pointer from the smart pointer
    Application * ptr = result;
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) ptr, SWIGTYPE_p_Application, 1);
    // register the object, it it exists
    if (ptr) {
      ptr->Register();
    }
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Registry_AddApplicationPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Registry_AddApplicationPath" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Registry::AddApplicationPath(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Registry_AddApplicationPath: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Registry_AddApplicationPath" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Registry_SetApplicationPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Registry_SetApplicationPath" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Registry::SetApplicationPath(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Registry_SetApplicationPath: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Registry_SetApplicationPath" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Registry_CleanRegistry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "Registry_CleanRegistry", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        Registry::CleanRegistry();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication Registry_CleanRegistry: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication Registry_CleanRegistry" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Registry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Registry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AddProcessToWatchEvent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (AddProcessToWatchEvent *)new AddProcessToWatchEvent();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_AddProcessToWatchEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_AddProcessToWatchEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_AddProcessToWatchEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AddProcessToWatchEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AddProcessToWatchEvent" "', argument " "1"" of type '" "AddProcessToWatchEvent *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_AddProcessToWatchEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_AddProcessToWatchEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddProcessToWatchEvent_GetEventName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddProcessToWatchEvent_GetEventName" "', argument " "1"" of type '" "AddProcessToWatchEvent const *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((AddProcessToWatchEvent const *)arg1)->GetEventName();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication AddProcessToWatchEvent_GetEventName: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication AddProcessToWatchEvent_GetEventName" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddProcessToWatchEvent_CheckEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  itkEventObject *arg2 = (itkEventObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "AddProcessToWatchEvent_CheckEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddProcessToWatchEvent_CheckEvent" "', argument " "1"" of type '" "AddProcessToWatchEvent const *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkEventObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddProcessToWatchEvent_CheckEvent" "', argument " "2"" of type '" "itkEventObject const *""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((AddProcessToWatchEvent const *)arg1)->CheckEvent((itkEventObject const *)arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication AddProcessToWatchEvent_CheckEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication AddProcessToWatchEvent_CheckEvent" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddProcessToWatchEvent_MakeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkEventObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddProcessToWatchEvent_MakeObject" "', argument " "1"" of type '" "AddProcessToWatchEvent const *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkEventObject *)((AddProcessToWatchEvent const *)arg1)->MakeObject();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication AddProcessToWatchEvent_MakeObject: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication AddProcessToWatchEvent_MakeObject" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkEventObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AddProcessToWatchEvent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  AddProcessToWatchEvent *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_AddProcessToWatchEvent,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AddProcessToWatchEvent" "', argument " "1"" of type '" "AddProcessToWatchEvent const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AddProcessToWatchEvent" "', argument " "1"" of type '" "AddProcessToWatchEvent const &""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (AddProcessToWatchEvent *)new AddProcessToWatchEvent((AddProcessToWatchEvent const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_AddProcessToWatchEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_AddProcessToWatchEvent" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_AddProcessToWatchEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AddProcessToWatchEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_AddProcessToWatchEvent", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_AddProcessToWatchEvent__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_AddProcessToWatchEvent, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_AddProcessToWatchEvent__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_AddProcessToWatchEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddProcessToWatchEvent::AddProcessToWatchEvent()\n"
    "    AddProcessToWatchEvent::AddProcessToWatchEvent(AddProcessToWatchEvent const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AddProcessToWatchEvent_GetProcess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkProcessObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddProcessToWatchEvent_GetProcess" "', argument " "1"" of type '" "AddProcessToWatchEvent const *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkProcessObject *)((AddProcessToWatchEvent const *)arg1)->GetProcess();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication AddProcessToWatchEvent_GetProcess: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication AddProcessToWatchEvent_GetProcess" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkProcessObject, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddProcessToWatchEvent_SetProcess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  itkProcessObject *arg2 = (itkProcessObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AddProcessToWatchEvent_SetProcess", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddProcessToWatchEvent_SetProcess" "', argument " "1"" of type '" "AddProcessToWatchEvent *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkProcessObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddProcessToWatchEvent_SetProcess" "', argument " "2"" of type '" "itkProcessObject *""'"); 
  }
  arg2 = reinterpret_cast< itkProcessObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetProcess(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication AddProcessToWatchEvent_SetProcess: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication AddProcessToWatchEvent_SetProcess" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddProcessToWatchEvent_SetProcessDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AddProcessToWatchEvent_SetProcessDescription", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddProcessToWatchEvent_SetProcessDescription" "', argument " "1"" of type '" "AddProcessToWatchEvent *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "AddProcessToWatchEvent_SetProcessDescription" "', argument " "2"" of type '" "std::string const""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetProcessDescription(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication AddProcessToWatchEvent_SetProcessDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication AddProcessToWatchEvent_SetProcessDescription" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddProcessToWatchEvent_GetProcessDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  AddProcessToWatchEvent *arg1 = (AddProcessToWatchEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_AddProcessToWatchEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddProcessToWatchEvent_GetProcessDescription" "', argument " "1"" of type '" "AddProcessToWatchEvent const *""'"); 
  }
  arg1 = reinterpret_cast< AddProcessToWatchEvent * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = ((AddProcessToWatchEvent const *)arg1)->GetProcessDescription();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication AddProcessToWatchEvent_GetProcessDescription: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication AddProcessToWatchEvent_GetProcessDescription" );
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AddProcessToWatchEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_AddProcessToWatchEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *AddProcessToWatchEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_itkPyCommand_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_New", 0, 0, 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = itkPyCommand::New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkPyCommand_Pointer(static_cast< const itkPyCommand_Pointer& >(result))), SWIGTYPE_p_itkPyCommand_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand *arg1 = (itkPyCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_GetNameOfClass" "', argument " "1"" of type '" "itkPyCommand const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)((itkPyCommand const *)arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_SetCommandCallable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand *arg1 = (itkPyCommand *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_SetCommandCallable", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_SetCommandCallable" "', argument " "1"" of type '" "itkPyCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand * >(argp1);
  arg2 = swig_obj[1];
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->SetCommandCallable(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_SetCommandCallable: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_SetCommandCallable" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_GetCommandCallable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand *arg1 = (itkPyCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_GetCommandCallable" "', argument " "1"" of type '" "itkPyCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PyObject *)(arg1)->GetCommandCallable();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_GetCommandCallable: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_GetCommandCallable" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand *arg1 = (itkPyCommand *) 0 ;
  itkObject *arg2 = (itkObject *) 0 ;
  itkEventObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Execute", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Execute" "', argument " "1"" of type '" "itkPyCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Execute" "', argument " "2"" of type '" "itkObject *""'"); 
  }
  arg2 = reinterpret_cast< itkObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkPyCommand_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  arg3 = reinterpret_cast< itkEventObject * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (arg1)->Execute(arg2,(itkEventObject const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Execute: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Execute" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_itkPyCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand *arg1 = (itkPyCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkPyCommand" "', argument " "1"" of type '" "itkPyCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete_itkPyCommand(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkPyCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkPyCommand" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkPyCommand_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkPyCommand, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_itkPyCommand_Pointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkPyCommand_Pointer *)new itkPyCommand_Pointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkPyCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkPyCommand_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkPyCommand_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkPyCommand_Pointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkPyCommand_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_itkPyCommand_Pointer,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkPyCommand_Pointer" "', argument " "1"" of type '" "itkPyCommand_Pointer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_itkPyCommand_Pointer" "', argument " "1"" of type '" "itkPyCommand_Pointer const &""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkPyCommand_Pointer *)new itkPyCommand_Pointer((itkPyCommand_Pointer const &)*arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkPyCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkPyCommand_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkPyCommand_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkPyCommand_Pointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkPyCommand *arg1 = (itkPyCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  itkPyCommand_Pointer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_itkPyCommand_Pointer" "', argument " "1"" of type '" "itkPyCommand *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkPyCommand_Pointer *)new itkPyCommand_Pointer(arg1);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication new_itkPyCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication new_itkPyCommand_Pointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkPyCommand_Pointer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_itkPyCommand_Pointer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_itkPyCommand_Pointer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_itkPyCommand_Pointer__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_itkPyCommand_Pointer, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkPyCommand_Pointer__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkPyCommand, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_itkPyCommand_Pointer__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_itkPyCommand_Pointer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkPyCommand_Pointer::itkPyCommand_Pointer()\n"
    "    itkPyCommand_Pointer::itkPyCommand_Pointer(itkPyCommand_Pointer const &)\n"
    "    itkPyCommand_Pointer::itkPyCommand_Pointer(itkPyCommand *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_itkPyCommand_Pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_itkPyCommand_Pointer" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        delete arg1;
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication delete_itkPyCommand_Pointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication delete_itkPyCommand_Pointer" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkPyCommand *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer___deref__" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkPyCommand *)((itkPyCommand_Pointer const *)arg1)->operator ->();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer___deref__: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer___deref__" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkPyCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_IsNotNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_IsNotNull" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkPyCommand_Pointer const *)arg1)->IsNotNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_IsNotNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_IsNotNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_IsNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_IsNull" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)((itkPyCommand_Pointer const *)arg1)->IsNull();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_IsNull: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_IsNull" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_GetPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkPyCommand *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_GetPointer" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkPyCommand *)((itkPyCommand_Pointer const *)arg1)->GetPointer();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_GetPointer: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_GetPointer" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkPyCommand, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_New(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkPyCommand_Pointer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_New" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (*arg1)->New();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_New: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_New" );
    }
  }
  resultobj = SWIG_NewPointerObj((new itkPyCommand_Pointer(static_cast< const itkPyCommand_Pointer& >(result))), SWIGTYPE_p_itkPyCommand_Pointer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_GetNameOfClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_GetNameOfClass" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (char *)(*arg1)->GetNameOfClass();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_GetNameOfClass: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_GetNameOfClass" );
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_SetCommandCallable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_SetCommandCallable", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_SetCommandCallable" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  arg2 = swig_obj[1];
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetCommandCallable(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_SetCommandCallable: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_SetCommandCallable" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_GetCommandCallable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_GetCommandCallable" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (PyObject *)(*arg1)->GetCommandCallable();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_GetCommandCallable: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_GetCommandCallable" );
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_Execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  itkObject *arg2 = (itkObject *) 0 ;
  itkEventObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_Execute", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_Execute" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_itkObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Pointer_Execute" "', argument " "2"" of type '" "itkObject *""'"); 
  }
  arg2 = reinterpret_cast< itkObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkPyCommand_Pointer_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_Execute" "', argument " "3"" of type '" "itkEventObject const &""'"); 
  }
  arg3 = reinterpret_cast< itkEventObject * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Execute(arg2,(itkEventObject const &)*arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_Execute: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_Execute" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_AddObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  itkCommand *arg3 = (itkCommand *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned long result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_AddObserver", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_AddObserver" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_AddObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_itkCommand, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkPyCommand_Pointer_AddObserver" "', argument " "3"" of type '" "itkCommand *""'"); 
  }
  arg3 = reinterpret_cast< itkCommand * >(argp3);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (unsigned long)(*arg1)->AddObserver((itkEventObject const &)*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_AddObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_AddObserver" );
    }
  }
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_GetCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  itkCommand *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_GetCommand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_GetCommand" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkPyCommand_Pointer_GetCommand" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkCommand *)(*arg1)->GetCommand(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_GetCommand: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_GetCommand" );
    }
  }
  {
    // always tell SWIG_NewPointerObj we're the owner
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_itkCommand, 1);
    if (result) {
      result->Register();
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_InvokeEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_InvokeEvent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_InvokeEvent" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_InvokeEvent" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->InvokeEvent((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_InvokeEvent: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_InvokeEvent" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_RemoveObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_RemoveObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_RemoveObserver" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "itkPyCommand_Pointer_RemoveObserver" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveObserver(arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_RemoveObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_RemoveObserver" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_RemoveAllObservers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_RemoveAllObservers" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->RemoveAllObservers();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_RemoveAllObservers: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_RemoveAllObservers" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_HasObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  itkEventObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_HasObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_HasObserver" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkEventObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_HasObserver" "', argument " "2"" of type '" "itkEventObject const &""'"); 
  }
  arg2 = reinterpret_cast< itkEventObject * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (bool)(*arg1)->HasObserver((itkEventObject const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_HasObserver: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_HasObserver" );
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_GetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  itkMetaDataDictionary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_GetMetaDataDictionary" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        result = (itkMetaDataDictionary *) &(*arg1)->GetMetaDataDictionary();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_GetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_GetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_itkMetaDataDictionary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_SetMetaDataDictionary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  itkMetaDataDictionary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_SetMetaDataDictionary", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_SetMetaDataDictionary" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_itkMetaDataDictionary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_SetMetaDataDictionary" "', argument " "2"" of type '" "itkMetaDataDictionary const &""'"); 
  }
  arg2 = reinterpret_cast< itkMetaDataDictionary * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->SetMetaDataDictionary((itkMetaDataDictionary const &)*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_SetMetaDataDictionary: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_SetMetaDataDictionary" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_Print__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  itkIndent arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_Print" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_itkIndent,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "itkPyCommand_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_Print" "', argument " "3"" of type '" "itkIndent""'");
    } else {
      itkIndent * temp = reinterpret_cast< itkIndent * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2,arg3);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_Print__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_Print" "', argument " "1"" of type '" "itkPyCommand_Pointer const *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "itkPyCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "itkPyCommand_Pointer_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->Print(*arg2);
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_Print: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_Print" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_Print(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "itkPyCommand_Pointer_Print", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkPyCommand_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_itkPyCommand_Pointer_Print__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_itkPyCommand_Pointer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_itkIndent, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_itkPyCommand_Pointer_Print__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'itkPyCommand_Pointer_Print'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    itkLightObject::Print(std::ostream &,itkIndent) const\n"
    "    itkLightObject::Print(std::ostream &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_BreakOnError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_BreakOnError" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    try {
      {
        SWIG_PYTHON_THREAD_BEGIN_ALLOW;
        (*arg1)->BreakOnError();
        SWIG_PYTHON_THREAD_END_ALLOW;
      }
    } catch(otb::ImageFileReaderException& err) {
      std::ostringstream oss;
      oss << err.GetDescription();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( itk::ExceptionObject &ex ) {
      std::ostringstream oss;
      oss << "Exception thrown in otbApplication itkPyCommand_Pointer_BreakOnError: " << ex.what();
      SWIG_exception( SWIG_RuntimeError, oss.str().c_str() );
    } catch( const std::exception &ex ) {
      SWIG_exception( SWIG_RuntimeError, ex.what() );
    } catch( ... ) {
      SWIG_exception( SWIG_UnknownError, "Unknown exception thrown in otbApplication itkPyCommand_Pointer_BreakOnError" );
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_itkPyCommand_Pointer_ToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  itkPyCommand_Pointer *arg1 = (itkPyCommand_Pointer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_itkPyCommand_Pointer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "itkPyCommand_Pointer_ToString" "', argument " "1"" of type '" "itkPyCommand_Pointer *""'"); 
  }
  arg1 = reinterpret_cast< itkPyCommand_Pointer * >(argp1);
  {
    SWIG_PYTHON_THREAD_BEGIN_ALLOW;
    result = itkLightObject_ToString((itkLightObject*)(arg1)->operator ->());
    SWIG_PYTHON_THREAD_END_ALLOW;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *itkPyCommand_Pointer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_itkPyCommand_Pointer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *itkPyCommand_Pointer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

static PyMethodDef SwigMethods[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { "SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { "SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { "SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { "SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { "SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { "SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { "SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { "SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "vectorstring_iterator", _wrap_vectorstring_iterator, METH_O, NULL},
	 { "vectorstring___nonzero__", _wrap_vectorstring___nonzero__, METH_O, NULL},
	 { "vectorstring___bool__", _wrap_vectorstring___bool__, METH_O, NULL},
	 { "vectorstring___len__", _wrap_vectorstring___len__, METH_O, NULL},
	 { "vectorstring___getslice__", _wrap_vectorstring___getslice__, METH_VARARGS, NULL},
	 { "vectorstring___setslice__", _wrap_vectorstring___setslice__, METH_VARARGS, NULL},
	 { "vectorstring___delslice__", _wrap_vectorstring___delslice__, METH_VARARGS, NULL},
	 { "vectorstring___delitem__", _wrap_vectorstring___delitem__, METH_VARARGS, NULL},
	 { "vectorstring___getitem__", _wrap_vectorstring___getitem__, METH_VARARGS, NULL},
	 { "vectorstring___setitem__", _wrap_vectorstring___setitem__, METH_VARARGS, NULL},
	 { "vectorstring_pop", _wrap_vectorstring_pop, METH_O, NULL},
	 { "vectorstring_append", _wrap_vectorstring_append, METH_VARARGS, NULL},
	 { "vectorstring_empty", _wrap_vectorstring_empty, METH_O, NULL},
	 { "vectorstring_size", _wrap_vectorstring_size, METH_O, NULL},
	 { "vectorstring_swap", _wrap_vectorstring_swap, METH_VARARGS, NULL},
	 { "vectorstring_begin", _wrap_vectorstring_begin, METH_O, NULL},
	 { "vectorstring_end", _wrap_vectorstring_end, METH_O, NULL},
	 { "vectorstring_rbegin", _wrap_vectorstring_rbegin, METH_O, NULL},
	 { "vectorstring_rend", _wrap_vectorstring_rend, METH_O, NULL},
	 { "vectorstring_clear", _wrap_vectorstring_clear, METH_O, NULL},
	 { "vectorstring_get_allocator", _wrap_vectorstring_get_allocator, METH_O, NULL},
	 { "vectorstring_pop_back", _wrap_vectorstring_pop_back, METH_O, NULL},
	 { "vectorstring_erase", _wrap_vectorstring_erase, METH_VARARGS, NULL},
	 { "new_vectorstring", _wrap_new_vectorstring, METH_VARARGS, NULL},
	 { "vectorstring_push_back", _wrap_vectorstring_push_back, METH_VARARGS, NULL},
	 { "vectorstring_front", _wrap_vectorstring_front, METH_O, NULL},
	 { "vectorstring_back", _wrap_vectorstring_back, METH_O, NULL},
	 { "vectorstring_assign", _wrap_vectorstring_assign, METH_VARARGS, NULL},
	 { "vectorstring_resize", _wrap_vectorstring_resize, METH_VARARGS, NULL},
	 { "vectorstring_insert", _wrap_vectorstring_insert, METH_VARARGS, NULL},
	 { "vectorstring_reserve", _wrap_vectorstring_reserve, METH_VARARGS, NULL},
	 { "vectorstring_capacity", _wrap_vectorstring_capacity, METH_O, NULL},
	 { "delete_vectorstring", _wrap_delete_vectorstring, METH_O, NULL},
	 { "vectorstring_swigregister", vectorstring_swigregister, METH_O, NULL},
	 { "vectorstring_swiginit", vectorstring_swiginit, METH_VARARGS, NULL},
	 { "mapstringstring_iterator", _wrap_mapstringstring_iterator, METH_O, NULL},
	 { "mapstringstring___nonzero__", _wrap_mapstringstring___nonzero__, METH_O, NULL},
	 { "mapstringstring___bool__", _wrap_mapstringstring___bool__, METH_O, NULL},
	 { "mapstringstring___len__", _wrap_mapstringstring___len__, METH_O, NULL},
	 { "mapstringstring___getitem__", _wrap_mapstringstring___getitem__, METH_VARARGS, NULL},
	 { "mapstringstring___delitem__", _wrap_mapstringstring___delitem__, METH_VARARGS, NULL},
	 { "mapstringstring_has_key", _wrap_mapstringstring_has_key, METH_VARARGS, NULL},
	 { "mapstringstring_keys", _wrap_mapstringstring_keys, METH_O, NULL},
	 { "mapstringstring_values", _wrap_mapstringstring_values, METH_O, NULL},
	 { "mapstringstring_items", _wrap_mapstringstring_items, METH_O, NULL},
	 { "mapstringstring___contains__", _wrap_mapstringstring___contains__, METH_VARARGS, NULL},
	 { "mapstringstring_key_iterator", _wrap_mapstringstring_key_iterator, METH_O, NULL},
	 { "mapstringstring_value_iterator", _wrap_mapstringstring_value_iterator, METH_O, NULL},
	 { "mapstringstring___setitem__", _wrap_mapstringstring___setitem__, METH_VARARGS, NULL},
	 { "mapstringstring_asdict", _wrap_mapstringstring_asdict, METH_O, NULL},
	 { "new_mapstringstring", _wrap_new_mapstringstring, METH_VARARGS, NULL},
	 { "mapstringstring_empty", _wrap_mapstringstring_empty, METH_O, NULL},
	 { "mapstringstring_size", _wrap_mapstringstring_size, METH_O, NULL},
	 { "mapstringstring_swap", _wrap_mapstringstring_swap, METH_VARARGS, NULL},
	 { "mapstringstring_begin", _wrap_mapstringstring_begin, METH_O, NULL},
	 { "mapstringstring_end", _wrap_mapstringstring_end, METH_O, NULL},
	 { "mapstringstring_rbegin", _wrap_mapstringstring_rbegin, METH_O, NULL},
	 { "mapstringstring_rend", _wrap_mapstringstring_rend, METH_O, NULL},
	 { "mapstringstring_clear", _wrap_mapstringstring_clear, METH_O, NULL},
	 { "mapstringstring_get_allocator", _wrap_mapstringstring_get_allocator, METH_O, NULL},
	 { "mapstringstring_count", _wrap_mapstringstring_count, METH_VARARGS, NULL},
	 { "mapstringstring_erase", _wrap_mapstringstring_erase, METH_VARARGS, NULL},
	 { "mapstringstring_find", _wrap_mapstringstring_find, METH_VARARGS, NULL},
	 { "mapstringstring_lower_bound", _wrap_mapstringstring_lower_bound, METH_VARARGS, NULL},
	 { "mapstringstring_upper_bound", _wrap_mapstringstring_upper_bound, METH_VARARGS, NULL},
	 { "delete_mapstringstring", _wrap_delete_mapstringstring, METH_O, NULL},
	 { "mapstringstring_swigregister", mapstringstring_swigregister, METH_O, NULL},
	 { "mapstringstring_swiginit", mapstringstring_swiginit, METH_VARARGS, NULL},
	 { "vectorbool_iterator", _wrap_vectorbool_iterator, METH_O, NULL},
	 { "vectorbool___nonzero__", _wrap_vectorbool___nonzero__, METH_O, NULL},
	 { "vectorbool___bool__", _wrap_vectorbool___bool__, METH_O, NULL},
	 { "vectorbool___len__", _wrap_vectorbool___len__, METH_O, NULL},
	 { "vectorbool___getslice__", _wrap_vectorbool___getslice__, METH_VARARGS, NULL},
	 { "vectorbool___setslice__", _wrap_vectorbool___setslice__, METH_VARARGS, NULL},
	 { "vectorbool___delslice__", _wrap_vectorbool___delslice__, METH_VARARGS, NULL},
	 { "vectorbool___delitem__", _wrap_vectorbool___delitem__, METH_VARARGS, NULL},
	 { "vectorbool___getitem__", _wrap_vectorbool___getitem__, METH_VARARGS, NULL},
	 { "vectorbool___setitem__", _wrap_vectorbool___setitem__, METH_VARARGS, NULL},
	 { "vectorbool_pop", _wrap_vectorbool_pop, METH_O, NULL},
	 { "vectorbool_append", _wrap_vectorbool_append, METH_VARARGS, NULL},
	 { "vectorbool_empty", _wrap_vectorbool_empty, METH_O, NULL},
	 { "vectorbool_size", _wrap_vectorbool_size, METH_O, NULL},
	 { "vectorbool_swap", _wrap_vectorbool_swap, METH_VARARGS, NULL},
	 { "vectorbool_begin", _wrap_vectorbool_begin, METH_O, NULL},
	 { "vectorbool_end", _wrap_vectorbool_end, METH_O, NULL},
	 { "vectorbool_rbegin", _wrap_vectorbool_rbegin, METH_O, NULL},
	 { "vectorbool_rend", _wrap_vectorbool_rend, METH_O, NULL},
	 { "vectorbool_clear", _wrap_vectorbool_clear, METH_O, NULL},
	 { "vectorbool_get_allocator", _wrap_vectorbool_get_allocator, METH_O, NULL},
	 { "vectorbool_pop_back", _wrap_vectorbool_pop_back, METH_O, NULL},
	 { "vectorbool_erase", _wrap_vectorbool_erase, METH_VARARGS, NULL},
	 { "new_vectorbool", _wrap_new_vectorbool, METH_VARARGS, NULL},
	 { "vectorbool_push_back", _wrap_vectorbool_push_back, METH_VARARGS, NULL},
	 { "vectorbool_front", _wrap_vectorbool_front, METH_O, NULL},
	 { "vectorbool_back", _wrap_vectorbool_back, METH_O, NULL},
	 { "vectorbool_assign", _wrap_vectorbool_assign, METH_VARARGS, NULL},
	 { "vectorbool_resize", _wrap_vectorbool_resize, METH_VARARGS, NULL},
	 { "vectorbool_insert", _wrap_vectorbool_insert, METH_VARARGS, NULL},
	 { "vectorbool_reserve", _wrap_vectorbool_reserve, METH_VARARGS, NULL},
	 { "vectorbool_capacity", _wrap_vectorbool_capacity, METH_O, NULL},
	 { "delete_vectorbool", _wrap_delete_vectorbool, METH_O, NULL},
	 { "vectorbool_swigregister", vectorbool_swigregister, METH_O, NULL},
	 { "vectorbool_swiginit", vectorbool_swiginit, METH_VARARGS, NULL},
	 { "vectordouble_iterator", _wrap_vectordouble_iterator, METH_O, NULL},
	 { "vectordouble___nonzero__", _wrap_vectordouble___nonzero__, METH_O, NULL},
	 { "vectordouble___bool__", _wrap_vectordouble___bool__, METH_O, NULL},
	 { "vectordouble___len__", _wrap_vectordouble___len__, METH_O, NULL},
	 { "vectordouble___getslice__", _wrap_vectordouble___getslice__, METH_VARARGS, NULL},
	 { "vectordouble___setslice__", _wrap_vectordouble___setslice__, METH_VARARGS, NULL},
	 { "vectordouble___delslice__", _wrap_vectordouble___delslice__, METH_VARARGS, NULL},
	 { "vectordouble___delitem__", _wrap_vectordouble___delitem__, METH_VARARGS, NULL},
	 { "vectordouble___getitem__", _wrap_vectordouble___getitem__, METH_VARARGS, NULL},
	 { "vectordouble___setitem__", _wrap_vectordouble___setitem__, METH_VARARGS, NULL},
	 { "vectordouble_pop", _wrap_vectordouble_pop, METH_O, NULL},
	 { "vectordouble_append", _wrap_vectordouble_append, METH_VARARGS, NULL},
	 { "vectordouble_empty", _wrap_vectordouble_empty, METH_O, NULL},
	 { "vectordouble_size", _wrap_vectordouble_size, METH_O, NULL},
	 { "vectordouble_swap", _wrap_vectordouble_swap, METH_VARARGS, NULL},
	 { "vectordouble_begin", _wrap_vectordouble_begin, METH_O, NULL},
	 { "vectordouble_end", _wrap_vectordouble_end, METH_O, NULL},
	 { "vectordouble_rbegin", _wrap_vectordouble_rbegin, METH_O, NULL},
	 { "vectordouble_rend", _wrap_vectordouble_rend, METH_O, NULL},
	 { "vectordouble_clear", _wrap_vectordouble_clear, METH_O, NULL},
	 { "vectordouble_get_allocator", _wrap_vectordouble_get_allocator, METH_O, NULL},
	 { "vectordouble_pop_back", _wrap_vectordouble_pop_back, METH_O, NULL},
	 { "vectordouble_erase", _wrap_vectordouble_erase, METH_VARARGS, NULL},
	 { "new_vectordouble", _wrap_new_vectordouble, METH_VARARGS, NULL},
	 { "vectordouble_push_back", _wrap_vectordouble_push_back, METH_VARARGS, NULL},
	 { "vectordouble_front", _wrap_vectordouble_front, METH_O, NULL},
	 { "vectordouble_back", _wrap_vectordouble_back, METH_O, NULL},
	 { "vectordouble_assign", _wrap_vectordouble_assign, METH_VARARGS, NULL},
	 { "vectordouble_resize", _wrap_vectordouble_resize, METH_VARARGS, NULL},
	 { "vectordouble_insert", _wrap_vectordouble_insert, METH_VARARGS, NULL},
	 { "vectordouble_reserve", _wrap_vectordouble_reserve, METH_VARARGS, NULL},
	 { "vectordouble_capacity", _wrap_vectordouble_capacity, METH_O, NULL},
	 { "delete_vectordouble", _wrap_delete_vectordouble, METH_O, NULL},
	 { "vectordouble_swigregister", vectordouble_swigregister, METH_O, NULL},
	 { "vectordouble_swiginit", vectordouble_swiginit, METH_VARARGS, NULL},
	 { "new_itkSize", _wrap_new_itkSize, METH_NOARGS, NULL},
	 { "delete_itkSize", _wrap_delete_itkSize, METH_O, NULL},
	 { "itkSize_Fill", _wrap_itkSize_Fill, METH_VARARGS, NULL},
	 { "itkSize_GetElement", _wrap_itkSize_GetElement, METH_VARARGS, NULL},
	 { "itkSize_SetElement", _wrap_itkSize_SetElement, METH_VARARGS, NULL},
	 { "itkSize_GetSizeDimension", _wrap_itkSize_GetSizeDimension, METH_NOARGS, NULL},
	 { "itkSize_swigregister", itkSize_swigregister, METH_O, NULL},
	 { "itkSize_swiginit", itkSize_swiginit, METH_VARARGS, NULL},
	 { "new_itkIndex", _wrap_new_itkIndex, METH_NOARGS, NULL},
	 { "delete_itkIndex", _wrap_delete_itkIndex, METH_O, NULL},
	 { "itkIndex_Fill", _wrap_itkIndex_Fill, METH_VARARGS, NULL},
	 { "itkIndex_GetElement", _wrap_itkIndex_GetElement, METH_VARARGS, NULL},
	 { "itkIndex_SetElement", _wrap_itkIndex_SetElement, METH_VARARGS, NULL},
	 { "itkIndex_GetIndexDimension", _wrap_itkIndex_GetIndexDimension, METH_NOARGS, NULL},
	 { "itkIndex_swigregister", itkIndex_swigregister, METH_O, NULL},
	 { "itkIndex_swiginit", itkIndex_swiginit, METH_VARARGS, NULL},
	 { "new_itkRegion", _wrap_new_itkRegion, METH_VARARGS, NULL},
	 { "delete_itkRegion", _wrap_delete_itkRegion, METH_O, NULL},
	 { "itkRegion_SetUpperIndex", _wrap_itkRegion_SetUpperIndex, METH_VARARGS, NULL},
	 { "itkRegion_GetUpperIndex", _wrap_itkRegion_GetUpperIndex, METH_O, NULL},
	 { "itkRegion_IsInside", _wrap_itkRegion_IsInside, METH_VARARGS, NULL},
	 { "itkRegion_SetSize", _wrap_itkRegion_SetSize, METH_VARARGS, NULL},
	 { "itkRegion_GetSize", _wrap_itkRegion_GetSize, METH_VARARGS, NULL},
	 { "itkRegion_SetIndex", _wrap_itkRegion_SetIndex, METH_VARARGS, NULL},
	 { "itkRegion_GetIndex", _wrap_itkRegion_GetIndex, METH_VARARGS, NULL},
	 { "itkRegion_swigregister", itkRegion_swigregister, METH_O, NULL},
	 { "itkRegion_swiginit", itkRegion_swiginit, METH_VARARGS, NULL},
	 { "new_itkFixedArray", _wrap_new_itkFixedArray, METH_NOARGS, NULL},
	 { "delete_itkFixedArray", _wrap_delete_itkFixedArray, METH_O, NULL},
	 { "itkFixedArray_Size", _wrap_itkFixedArray_Size, METH_O, NULL},
	 { "itkFixedArray_SetElement", _wrap_itkFixedArray_SetElement, METH_VARARGS, NULL},
	 { "itkFixedArray_GetElement", _wrap_itkFixedArray_GetElement, METH_VARARGS, NULL},
	 { "itkFixedArray_swigregister", itkFixedArray_swigregister, METH_O, NULL},
	 { "itkFixedArray_swiginit", itkFixedArray_swiginit, METH_VARARGS, NULL},
	 { "new_itkVector", _wrap_new_itkVector, METH_NOARGS, NULL},
	 { "delete_itkVector", _wrap_delete_itkVector, METH_O, NULL},
	 { "itkVector_GetNorm", _wrap_itkVector_GetNorm, METH_O, NULL},
	 { "itkVector_GetSquaredNorm", _wrap_itkVector_GetSquaredNorm, METH_O, NULL},
	 { "itkVector_Normalize", _wrap_itkVector_Normalize, METH_O, NULL},
	 { "itkVector_swigregister", itkVector_swigregister, METH_O, NULL},
	 { "itkVector_swiginit", itkVector_swiginit, METH_VARARGS, NULL},
	 { "new_itkPoint", _wrap_new_itkPoint, METH_NOARGS, NULL},
	 { "delete_itkPoint", _wrap_delete_itkPoint, METH_O, NULL},
	 { "itkPoint_swigregister", itkPoint_swigregister, METH_O, NULL},
	 { "itkPoint_swiginit", itkPoint_swiginit, METH_VARARGS, NULL},
	 { "itkIndent_New", _wrap_itkIndent_New, METH_NOARGS, NULL},
	 { "new_itkIndent", _wrap_new_itkIndent, METH_VARARGS, NULL},
	 { "itkIndent_GetNameOfClass", _wrap_itkIndent_GetNameOfClass, METH_NOARGS, NULL},
	 { "itkIndent_GetNextIndent", _wrap_itkIndent_GetNextIndent, METH_O, NULL},
	 { "delete_itkIndent", _wrap_delete_itkIndent, METH_O, NULL},
	 { "itkIndent_swigregister", itkIndent_swigregister, METH_O, NULL},
	 { "itkIndent_swiginit", itkIndent_swiginit, METH_VARARGS, NULL},
	 { "itkLightObject_New", _wrap_itkLightObject_New, METH_NOARGS, NULL},
	 { "itkLightObject_GetNameOfClass", _wrap_itkLightObject_GetNameOfClass, METH_O, NULL},
	 { "itkLightObject_Print", _wrap_itkLightObject_Print, METH_VARARGS, NULL},
	 { "itkLightObject_BreakOnError", _wrap_itkLightObject_BreakOnError, METH_NOARGS, NULL},
	 { "itkLightObject_ToString", _wrap_itkLightObject_ToString, METH_O, NULL},
	 { "delete_itkLightObject", _wrap_delete_itkLightObject, METH_O, NULL},
	 { "itkLightObject_swigregister", itkLightObject_swigregister, METH_O, NULL},
	 { "new_itkLightObject_Pointer", _wrap_new_itkLightObject_Pointer, METH_VARARGS, NULL},
	 { "delete_itkLightObject_Pointer", _wrap_delete_itkLightObject_Pointer, METH_O, NULL},
	 { "itkLightObject_Pointer___deref__", _wrap_itkLightObject_Pointer___deref__, METH_O, NULL},
	 { "itkLightObject_Pointer_IsNotNull", _wrap_itkLightObject_Pointer_IsNotNull, METH_O, NULL},
	 { "itkLightObject_Pointer_IsNull", _wrap_itkLightObject_Pointer_IsNull, METH_O, NULL},
	 { "itkLightObject_Pointer_GetPointer", _wrap_itkLightObject_Pointer_GetPointer, METH_O, NULL},
	 { "itkLightObject_Pointer_New", _wrap_itkLightObject_Pointer_New, METH_O, NULL},
	 { "itkLightObject_Pointer_GetNameOfClass", _wrap_itkLightObject_Pointer_GetNameOfClass, METH_O, NULL},
	 { "itkLightObject_Pointer_Print", _wrap_itkLightObject_Pointer_Print, METH_VARARGS, NULL},
	 { "itkLightObject_Pointer_BreakOnError", _wrap_itkLightObject_Pointer_BreakOnError, METH_O, NULL},
	 { "itkLightObject_Pointer_ToString", _wrap_itkLightObject_Pointer_ToString, METH_O, NULL},
	 { "itkLightObject_Pointer_swigregister", itkLightObject_Pointer_swigregister, METH_O, NULL},
	 { "itkLightObject_Pointer_swiginit", itkLightObject_Pointer_swiginit, METH_VARARGS, NULL},
	 { "itkObject_New", _wrap_itkObject_New, METH_NOARGS, NULL},
	 { "itkObject_GetNameOfClass", _wrap_itkObject_GetNameOfClass, METH_O, NULL},
	 { "itkObject_AddObserver", _wrap_itkObject_AddObserver, METH_VARARGS, NULL},
	 { "itkObject_GetCommand", _wrap_itkObject_GetCommand, METH_VARARGS, NULL},
	 { "itkObject_InvokeEvent", _wrap_itkObject_InvokeEvent, METH_VARARGS, NULL},
	 { "itkObject_RemoveObserver", _wrap_itkObject_RemoveObserver, METH_VARARGS, NULL},
	 { "itkObject_RemoveAllObservers", _wrap_itkObject_RemoveAllObservers, METH_O, NULL},
	 { "itkObject_HasObserver", _wrap_itkObject_HasObserver, METH_VARARGS, NULL},
	 { "itkObject_GetMetaDataDictionary", _wrap_itkObject_GetMetaDataDictionary, METH_O, NULL},
	 { "itkObject_SetMetaDataDictionary", _wrap_itkObject_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "delete_itkObject", _wrap_delete_itkObject, METH_O, NULL},
	 { "itkObject_swigregister", itkObject_swigregister, METH_O, NULL},
	 { "new_itkObject_Pointer", _wrap_new_itkObject_Pointer, METH_VARARGS, NULL},
	 { "delete_itkObject_Pointer", _wrap_delete_itkObject_Pointer, METH_O, NULL},
	 { "itkObject_Pointer___deref__", _wrap_itkObject_Pointer___deref__, METH_O, NULL},
	 { "itkObject_Pointer_IsNotNull", _wrap_itkObject_Pointer_IsNotNull, METH_O, NULL},
	 { "itkObject_Pointer_IsNull", _wrap_itkObject_Pointer_IsNull, METH_O, NULL},
	 { "itkObject_Pointer_GetPointer", _wrap_itkObject_Pointer_GetPointer, METH_O, NULL},
	 { "itkObject_Pointer_New", _wrap_itkObject_Pointer_New, METH_O, NULL},
	 { "itkObject_Pointer_GetNameOfClass", _wrap_itkObject_Pointer_GetNameOfClass, METH_O, NULL},
	 { "itkObject_Pointer_AddObserver", _wrap_itkObject_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "itkObject_Pointer_GetCommand", _wrap_itkObject_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "itkObject_Pointer_InvokeEvent", _wrap_itkObject_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "itkObject_Pointer_RemoveObserver", _wrap_itkObject_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "itkObject_Pointer_RemoveAllObservers", _wrap_itkObject_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "itkObject_Pointer_HasObserver", _wrap_itkObject_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "itkObject_Pointer_GetMetaDataDictionary", _wrap_itkObject_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "itkObject_Pointer_SetMetaDataDictionary", _wrap_itkObject_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "itkObject_Pointer_Print", _wrap_itkObject_Pointer_Print, METH_VARARGS, NULL},
	 { "itkObject_Pointer_BreakOnError", _wrap_itkObject_Pointer_BreakOnError, METH_O, NULL},
	 { "itkObject_Pointer_ToString", _wrap_itkObject_Pointer_ToString, METH_O, NULL},
	 { "itkObject_Pointer_swigregister", itkObject_Pointer_swigregister, METH_O, NULL},
	 { "itkObject_Pointer_swiginit", itkObject_Pointer_swiginit, METH_VARARGS, NULL},
	 { "itkProcessObject_GetProgress", _wrap_itkProcessObject_GetProgress, METH_O, NULL},
	 { "delete_itkProcessObject", _wrap_delete_itkProcessObject, METH_O, NULL},
	 { "itkProcessObject_swigregister", itkProcessObject_swigregister, METH_O, NULL},
	 { "new_itkProcessObject_Pointer", _wrap_new_itkProcessObject_Pointer, METH_VARARGS, NULL},
	 { "delete_itkProcessObject_Pointer", _wrap_delete_itkProcessObject_Pointer, METH_O, NULL},
	 { "itkProcessObject_Pointer___deref__", _wrap_itkProcessObject_Pointer___deref__, METH_O, NULL},
	 { "itkProcessObject_Pointer_IsNotNull", _wrap_itkProcessObject_Pointer_IsNotNull, METH_O, NULL},
	 { "itkProcessObject_Pointer_IsNull", _wrap_itkProcessObject_Pointer_IsNull, METH_O, NULL},
	 { "itkProcessObject_Pointer_GetPointer", _wrap_itkProcessObject_Pointer_GetPointer, METH_O, NULL},
	 { "itkProcessObject_Pointer_GetProgress", _wrap_itkProcessObject_Pointer_GetProgress, METH_O, NULL},
	 { "itkProcessObject_Pointer_New", _wrap_itkProcessObject_Pointer_New, METH_O, NULL},
	 { "itkProcessObject_Pointer_GetNameOfClass", _wrap_itkProcessObject_Pointer_GetNameOfClass, METH_O, NULL},
	 { "itkProcessObject_Pointer_AddObserver", _wrap_itkProcessObject_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "itkProcessObject_Pointer_GetCommand", _wrap_itkProcessObject_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "itkProcessObject_Pointer_InvokeEvent", _wrap_itkProcessObject_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "itkProcessObject_Pointer_RemoveObserver", _wrap_itkProcessObject_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "itkProcessObject_Pointer_RemoveAllObservers", _wrap_itkProcessObject_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "itkProcessObject_Pointer_HasObserver", _wrap_itkProcessObject_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "itkProcessObject_Pointer_GetMetaDataDictionary", _wrap_itkProcessObject_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "itkProcessObject_Pointer_SetMetaDataDictionary", _wrap_itkProcessObject_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "itkProcessObject_Pointer_Print", _wrap_itkProcessObject_Pointer_Print, METH_VARARGS, NULL},
	 { "itkProcessObject_Pointer_BreakOnError", _wrap_itkProcessObject_Pointer_BreakOnError, METH_O, NULL},
	 { "itkProcessObject_Pointer_ToString", _wrap_itkProcessObject_Pointer_ToString, METH_O, NULL},
	 { "itkProcessObject_Pointer_swigregister", itkProcessObject_Pointer_swigregister, METH_O, NULL},
	 { "itkProcessObject_Pointer_swiginit", itkProcessObject_Pointer_swiginit, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_GetNameOfClass", _wrap_itkObjectFactoryBase_GetNameOfClass, METH_O, NULL},
	 { "itkObjectFactoryBase_CreateInstance", _wrap_itkObjectFactoryBase_CreateInstance, METH_O, NULL},
	 { "itkObjectFactoryBase_CreateAllInstance", _wrap_itkObjectFactoryBase_CreateAllInstance, METH_O, NULL},
	 { "itkObjectFactoryBase_ReHash", _wrap_itkObjectFactoryBase_ReHash, METH_NOARGS, NULL},
	 { "itkObjectFactoryBase_RegisterFactory", _wrap_itkObjectFactoryBase_RegisterFactory, METH_O, NULL},
	 { "itkObjectFactoryBase_UnRegisterFactory", _wrap_itkObjectFactoryBase_UnRegisterFactory, METH_O, NULL},
	 { "itkObjectFactoryBase_UnRegisterAllFactories", _wrap_itkObjectFactoryBase_UnRegisterAllFactories, METH_NOARGS, NULL},
	 { "itkObjectFactoryBase_GetRegisteredFactories", _wrap_itkObjectFactoryBase_GetRegisteredFactories, METH_NOARGS, NULL},
	 { "itkObjectFactoryBase_GetITKSourceVersion", _wrap_itkObjectFactoryBase_GetITKSourceVersion, METH_O, NULL},
	 { "itkObjectFactoryBase_GetDescription", _wrap_itkObjectFactoryBase_GetDescription, METH_O, NULL},
	 { "itkObjectFactoryBase_GetClassOverrideNames", _wrap_itkObjectFactoryBase_GetClassOverrideNames, METH_O, NULL},
	 { "itkObjectFactoryBase_GetClassOverrideWithNames", _wrap_itkObjectFactoryBase_GetClassOverrideWithNames, METH_O, NULL},
	 { "itkObjectFactoryBase_GetClassOverrideDescriptions", _wrap_itkObjectFactoryBase_GetClassOverrideDescriptions, METH_O, NULL},
	 { "itkObjectFactoryBase_GetEnableFlags", _wrap_itkObjectFactoryBase_GetEnableFlags, METH_O, NULL},
	 { "itkObjectFactoryBase_SetEnableFlag", _wrap_itkObjectFactoryBase_SetEnableFlag, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_GetEnableFlag", _wrap_itkObjectFactoryBase_GetEnableFlag, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Disable", _wrap_itkObjectFactoryBase_Disable, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_GetLibraryPath", _wrap_itkObjectFactoryBase_GetLibraryPath, METH_O, NULL},
	 { "delete_itkObjectFactoryBase", _wrap_delete_itkObjectFactoryBase, METH_O, NULL},
	 { "itkObjectFactoryBase_swigregister", itkObjectFactoryBase_swigregister, METH_O, NULL},
	 { "new_itkObjectFactoryBase_Pointer", _wrap_new_itkObjectFactoryBase_Pointer, METH_VARARGS, NULL},
	 { "delete_itkObjectFactoryBase_Pointer", _wrap_delete_itkObjectFactoryBase_Pointer, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer___deref__", _wrap_itkObjectFactoryBase_Pointer___deref__, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_IsNotNull", _wrap_itkObjectFactoryBase_Pointer_IsNotNull, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_IsNull", _wrap_itkObjectFactoryBase_Pointer_IsNull, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetPointer", _wrap_itkObjectFactoryBase_Pointer_GetPointer, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetNameOfClass", _wrap_itkObjectFactoryBase_Pointer_GetNameOfClass, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_CreateInstance", _wrap_itkObjectFactoryBase_Pointer_CreateInstance, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_CreateAllInstance", _wrap_itkObjectFactoryBase_Pointer_CreateAllInstance, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_ReHash", _wrap_itkObjectFactoryBase_Pointer_ReHash, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_RegisterFactory", _wrap_itkObjectFactoryBase_Pointer_RegisterFactory, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_UnRegisterFactory", _wrap_itkObjectFactoryBase_Pointer_UnRegisterFactory, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_UnRegisterAllFactories", _wrap_itkObjectFactoryBase_Pointer_UnRegisterAllFactories, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetRegisteredFactories", _wrap_itkObjectFactoryBase_Pointer_GetRegisteredFactories, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetITKSourceVersion", _wrap_itkObjectFactoryBase_Pointer_GetITKSourceVersion, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetDescription", _wrap_itkObjectFactoryBase_Pointer_GetDescription, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetClassOverrideNames", _wrap_itkObjectFactoryBase_Pointer_GetClassOverrideNames, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetClassOverrideWithNames", _wrap_itkObjectFactoryBase_Pointer_GetClassOverrideWithNames, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetClassOverrideDescriptions", _wrap_itkObjectFactoryBase_Pointer_GetClassOverrideDescriptions, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_GetEnableFlags", _wrap_itkObjectFactoryBase_Pointer_GetEnableFlags, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_SetEnableFlag", _wrap_itkObjectFactoryBase_Pointer_SetEnableFlag, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_GetEnableFlag", _wrap_itkObjectFactoryBase_Pointer_GetEnableFlag, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_Disable", _wrap_itkObjectFactoryBase_Pointer_Disable, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_GetLibraryPath", _wrap_itkObjectFactoryBase_Pointer_GetLibraryPath, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_New", _wrap_itkObjectFactoryBase_Pointer_New, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_AddObserver", _wrap_itkObjectFactoryBase_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_GetCommand", _wrap_itkObjectFactoryBase_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_InvokeEvent", _wrap_itkObjectFactoryBase_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_RemoveObserver", _wrap_itkObjectFactoryBase_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_RemoveAllObservers", _wrap_itkObjectFactoryBase_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_HasObserver", _wrap_itkObjectFactoryBase_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_GetMetaDataDictionary", _wrap_itkObjectFactoryBase_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_SetMetaDataDictionary", _wrap_itkObjectFactoryBase_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_Print", _wrap_itkObjectFactoryBase_Pointer_Print, METH_VARARGS, NULL},
	 { "itkObjectFactoryBase_Pointer_BreakOnError", _wrap_itkObjectFactoryBase_Pointer_BreakOnError, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_ToString", _wrap_itkObjectFactoryBase_Pointer_ToString, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_swigregister", itkObjectFactoryBase_Pointer_swigregister, METH_O, NULL},
	 { "itkObjectFactoryBase_Pointer_swiginit", itkObjectFactoryBase_Pointer_swiginit, METH_VARARGS, NULL},
	 { "itkMetaDataObjectBase_GetMetaDataObjectTypeInfo", _wrap_itkMetaDataObjectBase_GetMetaDataObjectTypeInfo, METH_O, NULL},
	 { "itkMetaDataObjectBase_GetMetaDataObjectTypeName", _wrap_itkMetaDataObjectBase_GetMetaDataObjectTypeName, METH_O, NULL},
	 { "itkMetaDataObjectBase_GetNameOfClass", _wrap_itkMetaDataObjectBase_GetNameOfClass, METH_O, NULL},
	 { "itkMetaDataObjectBase_Print", _wrap_itkMetaDataObjectBase_Print, METH_VARARGS, NULL},
	 { "delete_itkMetaDataObjectBase", _wrap_delete_itkMetaDataObjectBase, METH_O, NULL},
	 { "itkMetaDataObjectBase_swigregister", itkMetaDataObjectBase_swigregister, METH_O, NULL},
	 { "new_itkMetaDataObjectBase_Pointer", _wrap_new_itkMetaDataObjectBase_Pointer, METH_VARARGS, NULL},
	 { "delete_itkMetaDataObjectBase_Pointer", _wrap_delete_itkMetaDataObjectBase_Pointer, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer___deref__", _wrap_itkMetaDataObjectBase_Pointer___deref__, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_IsNotNull", _wrap_itkMetaDataObjectBase_Pointer_IsNotNull, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_IsNull", _wrap_itkMetaDataObjectBase_Pointer_IsNull, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_GetPointer", _wrap_itkMetaDataObjectBase_Pointer_GetPointer, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeInfo", _wrap_itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeInfo, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeName", _wrap_itkMetaDataObjectBase_Pointer_GetMetaDataObjectTypeName, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_GetNameOfClass", _wrap_itkMetaDataObjectBase_Pointer_GetNameOfClass, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_Print", _wrap_itkMetaDataObjectBase_Pointer_Print, METH_VARARGS, NULL},
	 { "itkMetaDataObjectBase_Pointer_New", _wrap_itkMetaDataObjectBase_Pointer_New, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_BreakOnError", _wrap_itkMetaDataObjectBase_Pointer_BreakOnError, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_ToString", _wrap_itkMetaDataObjectBase_Pointer_ToString, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_swigregister", itkMetaDataObjectBase_Pointer_swigregister, METH_O, NULL},
	 { "itkMetaDataObjectBase_Pointer_swiginit", itkMetaDataObjectBase_Pointer_swiginit, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_Print", _wrap_itkMetaDataDictionary_Print, METH_VARARGS, NULL},
	 { "new_itkMetaDataDictionary", _wrap_new_itkMetaDataDictionary, METH_VARARGS, NULL},
	 { "delete_itkMetaDataDictionary", _wrap_delete_itkMetaDataDictionary, METH_O, NULL},
	 { "itkMetaDataDictionary_GetKeys", _wrap_itkMetaDataDictionary_GetKeys, METH_O, NULL},
	 { "itkMetaDataDictionary_HasKey", _wrap_itkMetaDataDictionary_HasKey, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_Get", _wrap_itkMetaDataDictionary_Get, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_Set", _wrap_itkMetaDataDictionary_Set, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetType", _wrap_itkMetaDataDictionary_GetType, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetString", _wrap_itkMetaDataDictionary_GetString, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_SetString", _wrap_itkMetaDataDictionary_SetString, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetInt", _wrap_itkMetaDataDictionary_GetInt, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_SetInt", _wrap_itkMetaDataDictionary_SetInt, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetDouble", _wrap_itkMetaDataDictionary_GetDouble, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_SetDouble", _wrap_itkMetaDataDictionary_SetDouble, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetGCP", _wrap_itkMetaDataDictionary_GetGCP, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_SetGCP", _wrap_itkMetaDataDictionary_SetGCP, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetVector", _wrap_itkMetaDataDictionary_GetVector, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_SetVector", _wrap_itkMetaDataDictionary_SetVector, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetVectorDataKWL", _wrap_itkMetaDataDictionary_GetVectorDataKWL, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_SetVectorDataKWL", _wrap_itkMetaDataDictionary_SetVectorDataKWL, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_GetBoolVector", _wrap_itkMetaDataDictionary_GetBoolVector, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_SetBoolVector", _wrap_itkMetaDataDictionary_SetBoolVector, METH_VARARGS, NULL},
	 { "itkMetaDataDictionary_swigregister", itkMetaDataDictionary_swigregister, METH_O, NULL},
	 { "itkMetaDataDictionary_swiginit", itkMetaDataDictionary_swiginit, METH_VARARGS, NULL},
	 { "itkCommand_GetNameOfClass", _wrap_itkCommand_GetNameOfClass, METH_O, NULL},
	 { "itkCommand_Execute", _wrap_itkCommand_Execute, METH_VARARGS, NULL},
	 { "delete_itkCommand", _wrap_delete_itkCommand, METH_O, NULL},
	 { "itkCommand_swigregister", itkCommand_swigregister, METH_O, NULL},
	 { "new_itkCommand_Pointer", _wrap_new_itkCommand_Pointer, METH_VARARGS, NULL},
	 { "delete_itkCommand_Pointer", _wrap_delete_itkCommand_Pointer, METH_O, NULL},
	 { "itkCommand_Pointer___deref__", _wrap_itkCommand_Pointer___deref__, METH_O, NULL},
	 { "itkCommand_Pointer_IsNotNull", _wrap_itkCommand_Pointer_IsNotNull, METH_O, NULL},
	 { "itkCommand_Pointer_IsNull", _wrap_itkCommand_Pointer_IsNull, METH_O, NULL},
	 { "itkCommand_Pointer_GetPointer", _wrap_itkCommand_Pointer_GetPointer, METH_O, NULL},
	 { "itkCommand_Pointer_GetNameOfClass", _wrap_itkCommand_Pointer_GetNameOfClass, METH_O, NULL},
	 { "itkCommand_Pointer_Execute", _wrap_itkCommand_Pointer_Execute, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_New", _wrap_itkCommand_Pointer_New, METH_O, NULL},
	 { "itkCommand_Pointer_AddObserver", _wrap_itkCommand_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_GetCommand", _wrap_itkCommand_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_InvokeEvent", _wrap_itkCommand_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_RemoveObserver", _wrap_itkCommand_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_RemoveAllObservers", _wrap_itkCommand_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "itkCommand_Pointer_HasObserver", _wrap_itkCommand_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_GetMetaDataDictionary", _wrap_itkCommand_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "itkCommand_Pointer_SetMetaDataDictionary", _wrap_itkCommand_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_Print", _wrap_itkCommand_Pointer_Print, METH_VARARGS, NULL},
	 { "itkCommand_Pointer_BreakOnError", _wrap_itkCommand_Pointer_BreakOnError, METH_O, NULL},
	 { "itkCommand_Pointer_ToString", _wrap_itkCommand_Pointer_ToString, METH_O, NULL},
	 { "itkCommand_Pointer_swigregister", itkCommand_Pointer_swigregister, METH_O, NULL},
	 { "itkCommand_Pointer_swiginit", itkCommand_Pointer_swiginit, METH_VARARGS, NULL},
	 { "delete_itkEventObject", _wrap_delete_itkEventObject, METH_O, NULL},
	 { "itkEventObject_MakeObject", _wrap_itkEventObject_MakeObject, METH_O, NULL},
	 { "itkEventObject_Print", _wrap_itkEventObject_Print, METH_VARARGS, NULL},
	 { "itkEventObject_GetEventName", _wrap_itkEventObject_GetEventName, METH_O, NULL},
	 { "itkEventObject_CheckEvent", _wrap_itkEventObject_CheckEvent, METH_VARARGS, NULL},
	 { "itkEventObject_swigregister", itkEventObject_swigregister, METH_O, NULL},
	 { "delete_itkNoEvent", _wrap_delete_itkNoEvent, METH_O, NULL},
	 { "itkNoEvent_GetEventName", _wrap_itkNoEvent_GetEventName, METH_O, NULL},
	 { "itkNoEvent_CheckEvent", _wrap_itkNoEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkNoEvent_MakeObject", _wrap_itkNoEvent_MakeObject, METH_O, NULL},
	 { "new_itkNoEvent", _wrap_new_itkNoEvent, METH_VARARGS, NULL},
	 { "itkNoEvent_swigregister", itkNoEvent_swigregister, METH_O, NULL},
	 { "itkNoEvent_swiginit", itkNoEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkAnyEvent", _wrap_delete_itkAnyEvent, METH_O, NULL},
	 { "itkAnyEvent_GetEventName", _wrap_itkAnyEvent_GetEventName, METH_O, NULL},
	 { "itkAnyEvent_CheckEvent", _wrap_itkAnyEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkAnyEvent_MakeObject", _wrap_itkAnyEvent_MakeObject, METH_O, NULL},
	 { "new_itkAnyEvent", _wrap_new_itkAnyEvent, METH_VARARGS, NULL},
	 { "itkAnyEvent_swigregister", itkAnyEvent_swigregister, METH_O, NULL},
	 { "itkAnyEvent_swiginit", itkAnyEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkDeleteEvent", _wrap_delete_itkDeleteEvent, METH_O, NULL},
	 { "itkDeleteEvent_GetEventName", _wrap_itkDeleteEvent_GetEventName, METH_O, NULL},
	 { "itkDeleteEvent_CheckEvent", _wrap_itkDeleteEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkDeleteEvent_MakeObject", _wrap_itkDeleteEvent_MakeObject, METH_O, NULL},
	 { "new_itkDeleteEvent", _wrap_new_itkDeleteEvent, METH_VARARGS, NULL},
	 { "itkDeleteEvent_swigregister", itkDeleteEvent_swigregister, METH_O, NULL},
	 { "itkDeleteEvent_swiginit", itkDeleteEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkEndEvent", _wrap_delete_itkEndEvent, METH_O, NULL},
	 { "itkEndEvent_GetEventName", _wrap_itkEndEvent_GetEventName, METH_O, NULL},
	 { "itkEndEvent_CheckEvent", _wrap_itkEndEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkEndEvent_MakeObject", _wrap_itkEndEvent_MakeObject, METH_O, NULL},
	 { "new_itkEndEvent", _wrap_new_itkEndEvent, METH_VARARGS, NULL},
	 { "itkEndEvent_swigregister", itkEndEvent_swigregister, METH_O, NULL},
	 { "itkEndEvent_swiginit", itkEndEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkExitEvent", _wrap_delete_itkExitEvent, METH_O, NULL},
	 { "itkExitEvent_GetEventName", _wrap_itkExitEvent_GetEventName, METH_O, NULL},
	 { "itkExitEvent_CheckEvent", _wrap_itkExitEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkExitEvent_MakeObject", _wrap_itkExitEvent_MakeObject, METH_O, NULL},
	 { "new_itkExitEvent", _wrap_new_itkExitEvent, METH_VARARGS, NULL},
	 { "itkExitEvent_swigregister", itkExitEvent_swigregister, METH_O, NULL},
	 { "itkExitEvent_swiginit", itkExitEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkIterationEvent", _wrap_delete_itkIterationEvent, METH_O, NULL},
	 { "itkIterationEvent_GetEventName", _wrap_itkIterationEvent_GetEventName, METH_O, NULL},
	 { "itkIterationEvent_CheckEvent", _wrap_itkIterationEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkIterationEvent_MakeObject", _wrap_itkIterationEvent_MakeObject, METH_O, NULL},
	 { "new_itkIterationEvent", _wrap_new_itkIterationEvent, METH_VARARGS, NULL},
	 { "itkIterationEvent_swigregister", itkIterationEvent_swigregister, METH_O, NULL},
	 { "itkIterationEvent_swiginit", itkIterationEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkModifiedEvent", _wrap_delete_itkModifiedEvent, METH_O, NULL},
	 { "itkModifiedEvent_GetEventName", _wrap_itkModifiedEvent_GetEventName, METH_O, NULL},
	 { "itkModifiedEvent_CheckEvent", _wrap_itkModifiedEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkModifiedEvent_MakeObject", _wrap_itkModifiedEvent_MakeObject, METH_O, NULL},
	 { "new_itkModifiedEvent", _wrap_new_itkModifiedEvent, METH_VARARGS, NULL},
	 { "itkModifiedEvent_swigregister", itkModifiedEvent_swigregister, METH_O, NULL},
	 { "itkModifiedEvent_swiginit", itkModifiedEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkPickEvent", _wrap_delete_itkPickEvent, METH_O, NULL},
	 { "itkPickEvent_GetEventName", _wrap_itkPickEvent_GetEventName, METH_O, NULL},
	 { "itkPickEvent_CheckEvent", _wrap_itkPickEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkPickEvent_MakeObject", _wrap_itkPickEvent_MakeObject, METH_O, NULL},
	 { "new_itkPickEvent", _wrap_new_itkPickEvent, METH_VARARGS, NULL},
	 { "itkPickEvent_swigregister", itkPickEvent_swigregister, METH_O, NULL},
	 { "itkPickEvent_swiginit", itkPickEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkProgressEvent", _wrap_delete_itkProgressEvent, METH_O, NULL},
	 { "itkProgressEvent_GetEventName", _wrap_itkProgressEvent_GetEventName, METH_O, NULL},
	 { "itkProgressEvent_CheckEvent", _wrap_itkProgressEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkProgressEvent_MakeObject", _wrap_itkProgressEvent_MakeObject, METH_O, NULL},
	 { "new_itkProgressEvent", _wrap_new_itkProgressEvent, METH_VARARGS, NULL},
	 { "itkProgressEvent_swigregister", itkProgressEvent_swigregister, METH_O, NULL},
	 { "itkProgressEvent_swiginit", itkProgressEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkStartEvent", _wrap_delete_itkStartEvent, METH_O, NULL},
	 { "itkStartEvent_GetEventName", _wrap_itkStartEvent_GetEventName, METH_O, NULL},
	 { "itkStartEvent_CheckEvent", _wrap_itkStartEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkStartEvent_MakeObject", _wrap_itkStartEvent_MakeObject, METH_O, NULL},
	 { "new_itkStartEvent", _wrap_new_itkStartEvent, METH_VARARGS, NULL},
	 { "itkStartEvent_swigregister", itkStartEvent_swigregister, METH_O, NULL},
	 { "itkStartEvent_swiginit", itkStartEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkStartPickEvent", _wrap_delete_itkStartPickEvent, METH_O, NULL},
	 { "itkStartPickEvent_GetEventName", _wrap_itkStartPickEvent_GetEventName, METH_O, NULL},
	 { "itkStartPickEvent_CheckEvent", _wrap_itkStartPickEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkStartPickEvent_MakeObject", _wrap_itkStartPickEvent_MakeObject, METH_O, NULL},
	 { "new_itkStartPickEvent", _wrap_new_itkStartPickEvent, METH_VARARGS, NULL},
	 { "itkStartPickEvent_swigregister", itkStartPickEvent_swigregister, METH_O, NULL},
	 { "itkStartPickEvent_swiginit", itkStartPickEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkUserEvent", _wrap_delete_itkUserEvent, METH_O, NULL},
	 { "itkUserEvent_GetEventName", _wrap_itkUserEvent_GetEventName, METH_O, NULL},
	 { "itkUserEvent_CheckEvent", _wrap_itkUserEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkUserEvent_MakeObject", _wrap_itkUserEvent_MakeObject, METH_O, NULL},
	 { "new_itkUserEvent", _wrap_new_itkUserEvent, METH_VARARGS, NULL},
	 { "itkUserEvent_swigregister", itkUserEvent_swigregister, METH_O, NULL},
	 { "itkUserEvent_swiginit", itkUserEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkAbortCheckEvent", _wrap_delete_itkAbortCheckEvent, METH_O, NULL},
	 { "itkAbortCheckEvent_GetEventName", _wrap_itkAbortCheckEvent_GetEventName, METH_O, NULL},
	 { "itkAbortCheckEvent_CheckEvent", _wrap_itkAbortCheckEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkAbortCheckEvent_MakeObject", _wrap_itkAbortCheckEvent_MakeObject, METH_O, NULL},
	 { "new_itkAbortCheckEvent", _wrap_new_itkAbortCheckEvent, METH_VARARGS, NULL},
	 { "itkAbortCheckEvent_swigregister", itkAbortCheckEvent_swigregister, METH_O, NULL},
	 { "itkAbortCheckEvent_swiginit", itkAbortCheckEvent_swiginit, METH_VARARGS, NULL},
	 { "delete_itkEndPickEvent", _wrap_delete_itkEndPickEvent, METH_O, NULL},
	 { "itkEndPickEvent_GetEventName", _wrap_itkEndPickEvent_GetEventName, METH_O, NULL},
	 { "itkEndPickEvent_CheckEvent", _wrap_itkEndPickEvent_CheckEvent, METH_VARARGS, NULL},
	 { "itkEndPickEvent_MakeObject", _wrap_itkEndPickEvent_MakeObject, METH_O, NULL},
	 { "new_itkEndPickEvent", _wrap_new_itkEndPickEvent, METH_VARARGS, NULL},
	 { "itkEndPickEvent_swigregister", itkEndPickEvent_swigregister, METH_O, NULL},
	 { "itkEndPickEvent_swiginit", itkEndPickEvent_swiginit, METH_VARARGS, NULL},
	 { "GCP_m_Id_set", _wrap_GCP_m_Id_set, METH_VARARGS, NULL},
	 { "GCP_m_Id_get", _wrap_GCP_m_Id_get, METH_O, NULL},
	 { "GCP_m_Info_set", _wrap_GCP_m_Info_set, METH_VARARGS, NULL},
	 { "GCP_m_Info_get", _wrap_GCP_m_Info_get, METH_O, NULL},
	 { "GCP_m_GCPCol_set", _wrap_GCP_m_GCPCol_set, METH_VARARGS, NULL},
	 { "GCP_m_GCPCol_get", _wrap_GCP_m_GCPCol_get, METH_O, NULL},
	 { "GCP_m_GCPRow_set", _wrap_GCP_m_GCPRow_set, METH_VARARGS, NULL},
	 { "GCP_m_GCPRow_get", _wrap_GCP_m_GCPRow_get, METH_O, NULL},
	 { "GCP_m_GCPX_set", _wrap_GCP_m_GCPX_set, METH_VARARGS, NULL},
	 { "GCP_m_GCPX_get", _wrap_GCP_m_GCPX_get, METH_O, NULL},
	 { "GCP_m_GCPY_set", _wrap_GCP_m_GCPY_set, METH_VARARGS, NULL},
	 { "GCP_m_GCPY_get", _wrap_GCP_m_GCPY_get, METH_O, NULL},
	 { "GCP_m_GCPZ_set", _wrap_GCP_m_GCPZ_set, METH_VARARGS, NULL},
	 { "GCP_m_GCPZ_get", _wrap_GCP_m_GCPZ_get, METH_O, NULL},
	 { "new_GCP", _wrap_new_GCP, METH_NOARGS, NULL},
	 { "GCP_Print", _wrap_GCP_Print, METH_VARARGS, NULL},
	 { "delete_GCP", _wrap_delete_GCP, METH_O, NULL},
	 { "GCP_swigregister", GCP_swigregister, METH_O, NULL},
	 { "GCP_swiginit", GCP_swiginit, METH_VARARGS, NULL},
	 { "TimePoint_GetJulianDay", _wrap_TimePoint_GetJulianDay, METH_O, NULL},
	 { "TimePoint_GetModifiedJulianDay", _wrap_TimePoint_GetModifiedJulianDay, METH_O, NULL},
	 { "TimePoint___repr__", _wrap_TimePoint___repr__, METH_O, NULL},
	 { "new_TimePoint", _wrap_new_TimePoint, METH_NOARGS, NULL},
	 { "delete_TimePoint", _wrap_delete_TimePoint, METH_O, NULL},
	 { "TimePoint_swigregister", TimePoint_swigregister, METH_O, NULL},
	 { "TimePoint_swiginit", TimePoint_swiginit, METH_VARARGS, NULL},
	 { "LUTAxis_Size_set", _wrap_LUTAxis_Size_set, METH_VARARGS, NULL},
	 { "LUTAxis_Size_get", _wrap_LUTAxis_Size_get, METH_O, NULL},
	 { "LUTAxis_Origin_set", _wrap_LUTAxis_Origin_set, METH_VARARGS, NULL},
	 { "LUTAxis_Origin_get", _wrap_LUTAxis_Origin_get, METH_O, NULL},
	 { "LUTAxis_Spacing_set", _wrap_LUTAxis_Spacing_set, METH_VARARGS, NULL},
	 { "LUTAxis_Spacing_get", _wrap_LUTAxis_Spacing_get, METH_O, NULL},
	 { "LUTAxis_Values_set", _wrap_LUTAxis_Values_set, METH_VARARGS, NULL},
	 { "LUTAxis_Values_get", _wrap_LUTAxis_Values_get, METH_O, NULL},
	 { "LUTAxis_ToJSON", _wrap_LUTAxis_ToJSON, METH_VARARGS, NULL},
	 { "new_LUTAxis", _wrap_new_LUTAxis, METH_NOARGS, NULL},
	 { "delete_LUTAxis", _wrap_delete_LUTAxis, METH_O, NULL},
	 { "LUTAxis_swigregister", LUTAxis_swigregister, METH_O, NULL},
	 { "LUTAxis_swiginit", LUTAxis_swiginit, METH_VARARGS, NULL},
	 { "lut1d_Axis_set", _wrap_lut1d_Axis_set, METH_VARARGS, NULL},
	 { "lut1d_Axis_get", _wrap_lut1d_Axis_get, METH_O, NULL},
	 { "lut1d_Array_set", _wrap_lut1d_Array_set, METH_VARARGS, NULL},
	 { "lut1d_Array_get", _wrap_lut1d_Array_get, METH_O, NULL},
	 { "lut1d_ToJSON", _wrap_lut1d_ToJSON, METH_VARARGS, NULL},
	 { "lut1d_ToString", _wrap_lut1d_ToString, METH_O, NULL},
	 { "lut1d_FromString", _wrap_lut1d_FromString, METH_VARARGS, NULL},
	 { "new_lut1d", _wrap_new_lut1d, METH_NOARGS, NULL},
	 { "delete_lut1d", _wrap_delete_lut1d, METH_O, NULL},
	 { "lut1d_swigregister", lut1d_swigregister, METH_O, NULL},
	 { "lut1d_swiginit", lut1d_swiginit, METH_VARARGS, NULL},
	 { "lut2d_Axis_set", _wrap_lut2d_Axis_set, METH_VARARGS, NULL},
	 { "lut2d_Axis_get", _wrap_lut2d_Axis_get, METH_O, NULL},
	 { "lut2d_Array_set", _wrap_lut2d_Array_set, METH_VARARGS, NULL},
	 { "lut2d_Array_get", _wrap_lut2d_Array_get, METH_O, NULL},
	 { "lut2d_ToJSON", _wrap_lut2d_ToJSON, METH_VARARGS, NULL},
	 { "lut2d_ToString", _wrap_lut2d_ToString, METH_O, NULL},
	 { "lut2d_FromString", _wrap_lut2d_FromString, METH_VARARGS, NULL},
	 { "new_lut2d", _wrap_new_lut2d, METH_NOARGS, NULL},
	 { "delete_lut2d", _wrap_delete_lut2d, METH_O, NULL},
	 { "lut2d_swigregister", lut2d_swigregister, METH_O, NULL},
	 { "lut2d_swiginit", lut2d_swiginit, METH_VARARGS, NULL},
	 { "ImageMetadataBase_GetProjectedGeometry", _wrap_ImageMetadataBase_GetProjectedGeometry, METH_O, NULL},
	 { "ImageMetadataBase_GetProjectionProj", _wrap_ImageMetadataBase_GetProjectionProj, METH_O, NULL},
	 { "ImageMetadataBase_GetKeyListNum", _wrap_ImageMetadataBase_GetKeyListNum, METH_O, NULL},
	 { "ImageMetadataBase_GetKeyListStr", _wrap_ImageMetadataBase_GetKeyListStr, METH_O, NULL},
	 { "ImageMetadataBase_GetKeyListL1D", _wrap_ImageMetadataBase_GetKeyListL1D, METH_O, NULL},
	 { "ImageMetadataBase_GetKeyListTime", _wrap_ImageMetadataBase_GetKeyListTime, METH_O, NULL},
	 { "ImageMetadataBase_is_num", _wrap_ImageMetadataBase_is_num, METH_VARARGS, NULL},
	 { "ImageMetadataBase_get_num", _wrap_ImageMetadataBase_get_num, METH_VARARGS, NULL},
	 { "ImageMetadataBase_is_str", _wrap_ImageMetadataBase_is_str, METH_VARARGS, NULL},
	 { "ImageMetadataBase_get_str", _wrap_ImageMetadataBase_get_str, METH_VARARGS, NULL},
	 { "ImageMetadataBase_is_l1d", _wrap_ImageMetadataBase_is_l1d, METH_VARARGS, NULL},
	 { "ImageMetadataBase_get_l1d", _wrap_ImageMetadataBase_get_l1d, METH_VARARGS, NULL},
	 { "ImageMetadataBase_is_l2d", _wrap_ImageMetadataBase_is_l2d, METH_VARARGS, NULL},
	 { "ImageMetadataBase_get_l2d", _wrap_ImageMetadataBase_get_l2d, METH_VARARGS, NULL},
	 { "ImageMetadataBase_is_time", _wrap_ImageMetadataBase_is_time, METH_VARARGS, NULL},
	 { "ImageMetadataBase_get_time", _wrap_ImageMetadataBase_get_time, METH_VARARGS, NULL},
	 { "ImageMetadataBase_is_geom", _wrap_ImageMetadataBase_is_geom, METH_VARARGS, NULL},
	 { "ImageMetadataBase_is_extra", _wrap_ImageMetadataBase_is_extra, METH_VARARGS, NULL},
	 { "ImageMetadataBase_get_extra", _wrap_ImageMetadataBase_get_extra, METH_VARARGS, NULL},
	 { "ImageMetadataBase_has", _wrap_ImageMetadataBase_has, METH_VARARGS, NULL},
	 { "ImageMetadataBase___setitem__", _wrap_ImageMetadataBase___setitem__, METH_VARARGS, NULL},
	 { "new_ImageMetadataBase", _wrap_new_ImageMetadataBase, METH_NOARGS, NULL},
	 { "delete_ImageMetadataBase", _wrap_delete_ImageMetadataBase, METH_O, NULL},
	 { "ImageMetadataBase_swigregister", ImageMetadataBase_swigregister, METH_O, NULL},
	 { "ImageMetadataBase_swiginit", ImageMetadataBase_swiginit, METH_VARARGS, NULL},
	 { "ImageMetadata_Bands_set", _wrap_ImageMetadata_Bands_set, METH_VARARGS, NULL},
	 { "ImageMetadata_Bands_get", _wrap_ImageMetadata_Bands_get, METH_O, NULL},
	 { "new_ImageMetadata", _wrap_new_ImageMetadata, METH_NOARGS, NULL},
	 { "delete_ImageMetadata", _wrap_delete_ImageMetadata, METH_O, NULL},
	 { "ImageMetadata_swigregister", ImageMetadata_swigregister, METH_O, NULL},
	 { "ImageMetadata_swiginit", ImageMetadata_swiginit, METH_VARARGS, NULL},
	 { "new_VectorDataKeywordlist", _wrap_new_VectorDataKeywordlist, METH_NOARGS, NULL},
	 { "delete_VectorDataKeywordlist", _wrap_delete_VectorDataKeywordlist, METH_O, NULL},
	 { "VectorDataKeywordlist_swigregister", VectorDataKeywordlist_swigregister, METH_O, NULL},
	 { "VectorDataKeywordlist_swiginit", VectorDataKeywordlist_swiginit, METH_VARARGS, NULL},
	 { "new_SwigPrintCallback", _wrap_new_SwigPrintCallback, METH_O, NULL},
	 { "delete_SwigPrintCallback", _wrap_delete_SwigPrintCallback, METH_O, NULL},
	 { "SwigPrintCallback_Call", _wrap_SwigPrintCallback_Call, METH_VARARGS, NULL},
	 { "SwigPrintCallback_Flush", _wrap_SwigPrintCallback_Flush, METH_O, NULL},
	 { "SwigPrintCallback_IsInteractive", _wrap_SwigPrintCallback_IsInteractive, METH_O, NULL},
	 { "disown_SwigPrintCallback", _wrap_disown_SwigPrintCallback, METH_O, NULL},
	 { "SwigPrintCallback_swigregister", SwigPrintCallback_swigregister, METH_O, NULL},
	 { "SwigPrintCallback_swiginit", SwigPrintCallback_swiginit, METH_VARARGS, NULL},
	 { "itkLogOutput_swigregister", itkLogOutput_swigregister, METH_O, NULL},
	 { "PythonLogOutput_New", _wrap_PythonLogOutput_New, METH_NOARGS, NULL},
	 { "PythonLogOutput_SetCallback", _wrap_PythonLogOutput_SetCallback, METH_VARARGS, NULL},
	 { "PythonLogOutput_Write", _wrap_PythonLogOutput_Write, METH_VARARGS, NULL},
	 { "delete_PythonLogOutput", _wrap_delete_PythonLogOutput, METH_O, NULL},
	 { "PythonLogOutput_swigregister", PythonLogOutput_swigregister, METH_O, NULL},
	 { "new_PythonLogOutput_Pointer", _wrap_new_PythonLogOutput_Pointer, METH_VARARGS, NULL},
	 { "delete_PythonLogOutput_Pointer", _wrap_delete_PythonLogOutput_Pointer, METH_O, NULL},
	 { "PythonLogOutput_Pointer___deref__", _wrap_PythonLogOutput_Pointer___deref__, METH_O, NULL},
	 { "PythonLogOutput_Pointer_IsNotNull", _wrap_PythonLogOutput_Pointer_IsNotNull, METH_O, NULL},
	 { "PythonLogOutput_Pointer_IsNull", _wrap_PythonLogOutput_Pointer_IsNull, METH_O, NULL},
	 { "PythonLogOutput_Pointer_GetPointer", _wrap_PythonLogOutput_Pointer_GetPointer, METH_O, NULL},
	 { "PythonLogOutput_Pointer_New", _wrap_PythonLogOutput_Pointer_New, METH_O, NULL},
	 { "PythonLogOutput_Pointer_SetCallback", _wrap_PythonLogOutput_Pointer_SetCallback, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_Write", _wrap_PythonLogOutput_Pointer_Write, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_GetNameOfClass", _wrap_PythonLogOutput_Pointer_GetNameOfClass, METH_O, NULL},
	 { "PythonLogOutput_Pointer_AddObserver", _wrap_PythonLogOutput_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_GetCommand", _wrap_PythonLogOutput_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_InvokeEvent", _wrap_PythonLogOutput_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_RemoveObserver", _wrap_PythonLogOutput_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_RemoveAllObservers", _wrap_PythonLogOutput_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "PythonLogOutput_Pointer_HasObserver", _wrap_PythonLogOutput_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_GetMetaDataDictionary", _wrap_PythonLogOutput_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "PythonLogOutput_Pointer_SetMetaDataDictionary", _wrap_PythonLogOutput_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_Print", _wrap_PythonLogOutput_Pointer_Print, METH_VARARGS, NULL},
	 { "PythonLogOutput_Pointer_BreakOnError", _wrap_PythonLogOutput_Pointer_BreakOnError, METH_O, NULL},
	 { "PythonLogOutput_Pointer_ToString", _wrap_PythonLogOutput_Pointer_ToString, METH_O, NULL},
	 { "PythonLogOutput_Pointer_swigregister", PythonLogOutput_Pointer_swigregister, METH_O, NULL},
	 { "PythonLogOutput_Pointer_swiginit", PythonLogOutput_Pointer_swiginit, METH_VARARGS, NULL},
	 { "Logger_AddLogOutput", _wrap_Logger_AddLogOutput, METH_VARARGS, NULL},
	 { "Logger_Instance", _wrap_Logger_Instance, METH_NOARGS, NULL},
	 { "Logger_ResetOutputs", _wrap_Logger_ResetOutputs, METH_O, NULL},
	 { "Logger_Debug", _wrap_Logger_Debug, METH_VARARGS, NULL},
	 { "Logger_Info", _wrap_Logger_Info, METH_VARARGS, NULL},
	 { "Logger_Warning", _wrap_Logger_Warning, METH_VARARGS, NULL},
	 { "Logger_Critical", _wrap_Logger_Critical, METH_VARARGS, NULL},
	 { "Logger_Error", _wrap_Logger_Error, METH_VARARGS, NULL},
	 { "Logger_Fatal", _wrap_Logger_Fatal, METH_VARARGS, NULL},
	 { "Logger_swigregister", Logger_swigregister, METH_O, NULL},
	 { "ProgressReporterManager_New", _wrap_ProgressReporterManager_New, METH_NOARGS, NULL},
	 { "ProgressReporterManager_DeleteWatcherList", _wrap_ProgressReporterManager_DeleteWatcherList, METH_O, NULL},
	 { "ProgressReporterManager_SetLogOutputCallback", _wrap_ProgressReporterManager_SetLogOutputCallback, METH_VARARGS, NULL},
	 { "ProgressReporterManager_GetAddProcessCommand", _wrap_ProgressReporterManager_GetAddProcessCommand, METH_O, NULL},
	 { "delete_ProgressReporterManager", _wrap_delete_ProgressReporterManager, METH_O, NULL},
	 { "ProgressReporterManager_swigregister", ProgressReporterManager_swigregister, METH_O, NULL},
	 { "new_ProgressReporterManager_Pointer", _wrap_new_ProgressReporterManager_Pointer, METH_VARARGS, NULL},
	 { "delete_ProgressReporterManager_Pointer", _wrap_delete_ProgressReporterManager_Pointer, METH_O, NULL},
	 { "ProgressReporterManager_Pointer___deref__", _wrap_ProgressReporterManager_Pointer___deref__, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_IsNotNull", _wrap_ProgressReporterManager_Pointer_IsNotNull, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_IsNull", _wrap_ProgressReporterManager_Pointer_IsNull, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_GetPointer", _wrap_ProgressReporterManager_Pointer_GetPointer, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_New", _wrap_ProgressReporterManager_Pointer_New, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_DeleteWatcherList", _wrap_ProgressReporterManager_Pointer_DeleteWatcherList, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_SetLogOutputCallback", _wrap_ProgressReporterManager_Pointer_SetLogOutputCallback, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_GetAddProcessCommand", _wrap_ProgressReporterManager_Pointer_GetAddProcessCommand, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_GetNameOfClass", _wrap_ProgressReporterManager_Pointer_GetNameOfClass, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_AddObserver", _wrap_ProgressReporterManager_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_GetCommand", _wrap_ProgressReporterManager_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_InvokeEvent", _wrap_ProgressReporterManager_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_RemoveObserver", _wrap_ProgressReporterManager_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_RemoveAllObservers", _wrap_ProgressReporterManager_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_HasObserver", _wrap_ProgressReporterManager_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_GetMetaDataDictionary", _wrap_ProgressReporterManager_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_SetMetaDataDictionary", _wrap_ProgressReporterManager_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_Print", _wrap_ProgressReporterManager_Pointer_Print, METH_VARARGS, NULL},
	 { "ProgressReporterManager_Pointer_BreakOnError", _wrap_ProgressReporterManager_Pointer_BreakOnError, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_ToString", _wrap_ProgressReporterManager_Pointer_ToString, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_swigregister", ProgressReporterManager_Pointer_swigregister, METH_O, NULL},
	 { "ProgressReporterManager_Pointer_swiginit", ProgressReporterManager_Pointer_swiginit, METH_VARARGS, NULL},
	 { "Application_SetName", _wrap_Application_SetName, METH_VARARGS, NULL},
	 { "Application_GetName", _wrap_Application_GetName, METH_O, NULL},
	 { "Application_SetDescription", _wrap_Application_SetDescription, METH_VARARGS, NULL},
	 { "Application_GetDescription", _wrap_Application_GetDescription, METH_O, NULL},
	 { "Application_Init", _wrap_Application_Init, METH_O, NULL},
	 { "Application_UpdateParameters", _wrap_Application_UpdateParameters, METH_O, NULL},
	 { "Application_Execute", _wrap_Application_Execute, METH_O, NULL},
	 { "Application_WriteOutput", _wrap_Application_WriteOutput, METH_O, NULL},
	 { "Application_ExecuteAndWriteOutput", _wrap_Application_ExecuteAndWriteOutput, METH_O, NULL},
	 { "Application_ConnectImage", _wrap_Application_ConnectImage, METH_VARARGS, NULL},
	 { "Application_PropagateConnectMode", _wrap_Application_PropagateConnectMode, METH_VARARGS, NULL},
	 { "Application_LoadParametersFromXML", _wrap_Application_LoadParametersFromXML, METH_VARARGS, NULL},
	 { "Application_SaveParametersToXML", _wrap_Application_SaveParametersToXML, METH_VARARGS, NULL},
	 { "Application_GetLogger", _wrap_Application_GetLogger, METH_O, NULL},
	 { "Application_IsDeprecated", _wrap_Application_IsDeprecated, METH_O, NULL},
	 { "Application_GetParametersKeys", _wrap_Application_GetParametersKeys, METH_VARARGS, NULL},
	 { "Application_GetParameterByKey", _wrap_Application_GetParameterByKey, METH_VARARGS, NULL},
	 { "Application_GetParameterName", _wrap_Application_GetParameterName, METH_VARARGS, NULL},
	 { "Application_GetParameterDescription", _wrap_Application_GetParameterDescription, METH_VARARGS, NULL},
	 { "Application_SetParameterDescription", _wrap_Application_SetParameterDescription, METH_VARARGS, NULL},
	 { "Application_SetParameterUserValue", _wrap_Application_SetParameterUserValue, METH_VARARGS, NULL},
	 { "Application_EnableParameter", _wrap_Application_EnableParameter, METH_VARARGS, NULL},
	 { "Application_DisableParameter", _wrap_Application_DisableParameter, METH_VARARGS, NULL},
	 { "Application_IsParameterEnabled", _wrap_Application_IsParameterEnabled, METH_VARARGS, NULL},
	 { "Application_IsMandatory", _wrap_Application_IsMandatory, METH_VARARGS, NULL},
	 { "Application_HasAutomaticValue", _wrap_Application_HasAutomaticValue, METH_VARARGS, NULL},
	 { "Application_HasUserValue", _wrap_Application_HasUserValue, METH_VARARGS, NULL},
	 { "Application_ClearValue", _wrap_Application_ClearValue, METH_VARARGS, NULL},
	 { "Application_HasValue", _wrap_Application_HasValue, METH_VARARGS, NULL},
	 { "Application_GetParameterUserLevel", _wrap_Application_GetParameterUserLevel, METH_VARARGS, NULL},
	 { "Application_GetParameterType", _wrap_Application_GetParameterType, METH_VARARGS, NULL},
	 { "Application_GetParameterRole", _wrap_Application_GetParameterRole, METH_VARARGS, NULL},
	 { "Application_GetChoiceKeys", _wrap_Application_GetChoiceKeys, METH_VARARGS, NULL},
	 { "Application_GetChoiceNames", _wrap_Application_GetChoiceNames, METH_VARARGS, NULL},
	 { "Application_IsApplicationReady", _wrap_Application_IsApplicationReady, METH_O, NULL},
	 { "Application_SetParameterInt", _wrap_Application_SetParameterInt, METH_VARARGS, NULL},
	 { "Application_SetParameterFloat", _wrap_Application_SetParameterFloat, METH_VARARGS, NULL},
	 { "Application_SetParameterDouble", _wrap_Application_SetParameterDouble, METH_VARARGS, NULL},
	 { "Application_SetParameterString", _wrap_Application_SetParameterString, METH_VARARGS, NULL},
	 { "Application_SetParameterStringList", _wrap_Application_SetParameterStringList, METH_VARARGS, NULL},
	 { "Application_SetParameterOutputImagePixelType", _wrap_Application_SetParameterOutputImagePixelType, METH_VARARGS, NULL},
	 { "Application_GetParameterOutputImagePixelType", _wrap_Application_GetParameterOutputImagePixelType, METH_VARARGS, NULL},
	 { "Application_GetParameterInt", _wrap_Application_GetParameterInt, METH_VARARGS, NULL},
	 { "Application_GetParameterFloat", _wrap_Application_GetParameterFloat, METH_VARARGS, NULL},
	 { "Application_GetParameterDouble", _wrap_Application_GetParameterDouble, METH_VARARGS, NULL},
	 { "Application_GetParameterString", _wrap_Application_GetParameterString, METH_VARARGS, NULL},
	 { "Application_GetParameterStringList", _wrap_Application_GetParameterStringList, METH_VARARGS, NULL},
	 { "Application_GetParameterAsString", _wrap_Application_GetParameterAsString, METH_VARARGS, NULL},
	 { "Application_GetListViewSingleSelectionMode", _wrap_Application_GetListViewSingleSelectionMode, METH_VARARGS, NULL},
	 { "Application_GetParameterOutputImage", _wrap_Application_GetParameterOutputImage, METH_VARARGS, NULL},
	 { "Application_SetParameterInputImage", _wrap_Application_SetParameterInputImage, METH_VARARGS, NULL},
	 { "Application_AddImageToParameterInputImageList", _wrap_Application_AddImageToParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_AddParameterStringList", _wrap_Application_AddParameterStringList, METH_VARARGS, NULL},
	 { "Application_SetNthParameterInputImageList", _wrap_Application_SetNthParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_SetNthParameterStringList", _wrap_Application_SetNthParameterStringList, METH_VARARGS, NULL},
	 { "Application_ClearParameterInputImageList", _wrap_Application_ClearParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_GetNumberOfElementsInParameterInputImageList", _wrap_Application_GetNumberOfElementsInParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_GetImageOrigin", _wrap_Application_GetImageOrigin, METH_VARARGS, NULL},
	 { "Application_GetImageSpacing", _wrap_Application_GetImageSpacing, METH_VARARGS, NULL},
	 { "Application_GetImageSize", _wrap_Application_GetImageSize, METH_VARARGS, NULL},
	 { "Application_GetImageNbBands", _wrap_Application_GetImageNbBands, METH_VARARGS, NULL},
	 { "Application_GetImageProjection", _wrap_Application_GetImageProjection, METH_VARARGS, NULL},
	 { "Application_PropagateRequestedRegion", _wrap_Application_PropagateRequestedRegion, METH_VARARGS, NULL},
	 { "Application_GetImageRequestedRegion", _wrap_Application_GetImageRequestedRegion, METH_VARARGS, NULL},
	 { "Application_GetImageMetadata", _wrap_Application_GetImageMetadata, METH_VARARGS, NULL},
	 { "Application_SetImageMetadata", _wrap_Application_SetImageMetadata, METH_VARARGS, NULL},
	 { "Application_GetMetadataDictionary", _wrap_Application_GetMetadataDictionary, METH_VARARGS, NULL},
	 { "Application_GetImageBasePixelType", _wrap_Application_GetImageBasePixelType, METH_VARARGS, NULL},
	 { "Application_GetProgressSource", _wrap_Application_GetProgressSource, METH_O, NULL},
	 { "Application_GetProgressDescription", _wrap_Application_GetProgressDescription, METH_O, NULL},
	 { "Application_FreeResources", _wrap_Application_FreeResources, METH_O, NULL},
	 { "Application_SetDocLongDescription", _wrap_Application_SetDocLongDescription, METH_VARARGS, NULL},
	 { "Application_GetDocLongDescription", _wrap_Application_GetDocLongDescription, METH_O, NULL},
	 { "Application_SetDocAuthors", _wrap_Application_SetDocAuthors, METH_VARARGS, NULL},
	 { "Application_GetDocAuthors", _wrap_Application_GetDocAuthors, METH_O, NULL},
	 { "Application_SetDocLimitations", _wrap_Application_SetDocLimitations, METH_VARARGS, NULL},
	 { "Application_GetDocLimitations", _wrap_Application_GetDocLimitations, METH_O, NULL},
	 { "Application_SetDocSeeAlso", _wrap_Application_SetDocSeeAlso, METH_VARARGS, NULL},
	 { "Application_GetDocSeeAlso", _wrap_Application_GetDocSeeAlso, METH_O, NULL},
	 { "Application_SetDocTags", _wrap_Application_SetDocTags, METH_VARARGS, NULL},
	 { "Application_AddDocTag", _wrap_Application_AddDocTag, METH_VARARGS, NULL},
	 { "Application_GetDocTags", _wrap_Application_GetDocTags, METH_O, NULL},
	 { "Application_IsMultiWritingEnabled", _wrap_Application_IsMultiWritingEnabled, METH_O, NULL},
	 { "Application_GetParameterList", _wrap_Application_GetParameterList, METH_O, NULL},
	 { "Application_GetNumberOfExamples", _wrap_Application_GetNumberOfExamples, METH_O, NULL},
	 { "Application_GetExampleComment", _wrap_Application_GetExampleComment, METH_VARARGS, NULL},
	 { "Application_GetExampleNumberOfParameters", _wrap_Application_GetExampleNumberOfParameters, METH_VARARGS, NULL},
	 { "Application_GetExampleParameterKey", _wrap_Application_GetExampleParameterKey, METH_VARARGS, NULL},
	 { "Application_GetExampleParameterValue", _wrap_Application_GetExampleParameterValue, METH_VARARGS, NULL},
	 { "Application_SetDocExampleParameterValue", _wrap_Application_SetDocExampleParameterValue, METH_VARARGS, NULL},
	 { "Application_SetExampleComment", _wrap_Application_SetExampleComment, METH_VARARGS, NULL},
	 { "Application_AddExample", _wrap_Application_AddExample, METH_VARARGS, NULL},
	 { "Application_GetCLExample", _wrap_Application_GetCLExample, METH_O, NULL},
	 { "Application_GetHtmlExample", _wrap_Application_GetHtmlExample, METH_O, NULL},
	 { "Application_GetOutputParametersSumUp", _wrap_Application_GetOutputParametersSumUp, METH_O, NULL},
	 { "Application_SetVectorImageFromUInt8NumpyArray_", _wrap_Application_SetVectorImageFromUInt8NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromInt16NumpyArray_", _wrap_Application_SetVectorImageFromInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromUInt16NumpyArray_", _wrap_Application_SetVectorImageFromUInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromInt32NumpyArray_", _wrap_Application_SetVectorImageFromInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromUInt32NumpyArray_", _wrap_Application_SetVectorImageFromUInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromFloatNumpyArray_", _wrap_Application_SetVectorImageFromFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromDoubleNumpyArray_", _wrap_Application_SetVectorImageFromDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromCFloatNumpyArray_", _wrap_Application_SetVectorImageFromCFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetVectorImageFromCDoubleNumpyArray_", _wrap_Application_SetVectorImageFromCDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromUInt8NumpyArray_", _wrap_Application_SetImageFromUInt8NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromInt16NumpyArray_", _wrap_Application_SetImageFromInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromUInt16NumpyArray_", _wrap_Application_SetImageFromUInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromInt32NumpyArray_", _wrap_Application_SetImageFromInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromUInt32NumpyArray_", _wrap_Application_SetImageFromUInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromFloatNumpyArray_", _wrap_Application_SetImageFromFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromDoubleNumpyArray_", _wrap_Application_SetImageFromDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromCFloatNumpyArray_", _wrap_Application_SetImageFromCFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_SetImageFromCDoubleNumpyArray_", _wrap_Application_SetImageFromCDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsUInt8NumpyArray_", _wrap_Application_GetVectorImageAsUInt8NumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsInt16NumpyArray_", _wrap_Application_GetVectorImageAsInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsUInt16NumpyArray_", _wrap_Application_GetVectorImageAsUInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsInt32NumpyArray_", _wrap_Application_GetVectorImageAsInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsUInt32NumpyArray_", _wrap_Application_GetVectorImageAsUInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsFloatNumpyArray_", _wrap_Application_GetVectorImageAsFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsDoubleNumpyArray_", _wrap_Application_GetVectorImageAsDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsCFloatNumpyArray_", _wrap_Application_GetVectorImageAsCFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_GetVectorImageAsCDoubleNumpyArray_", _wrap_Application_GetVectorImageAsCDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_ConvertPixelTypeToNumpy", _wrap_Application_ConvertPixelTypeToNumpy, METH_VARARGS, NULL},
	 { "Application_SetupImageInformation", _wrap_Application_SetupImageInformation, METH_VARARGS, NULL},
	 { "delete_Application", _wrap_delete_Application, METH_O, NULL},
	 { "Application_swigregister", Application_swigregister, METH_O, NULL},
	 { "new_Application_Pointer", _wrap_new_Application_Pointer, METH_VARARGS, NULL},
	 { "delete_Application_Pointer", _wrap_delete_Application_Pointer, METH_O, NULL},
	 { "Application_Pointer___deref__", _wrap_Application_Pointer___deref__, METH_O, NULL},
	 { "Application_Pointer_IsNotNull", _wrap_Application_Pointer_IsNotNull, METH_O, NULL},
	 { "Application_Pointer_IsNull", _wrap_Application_Pointer_IsNull, METH_O, NULL},
	 { "Application_Pointer_GetPointer", _wrap_Application_Pointer_GetPointer, METH_O, NULL},
	 { "Application_Pointer_SetName", _wrap_Application_Pointer_SetName, METH_VARARGS, NULL},
	 { "Application_Pointer_GetName", _wrap_Application_Pointer_GetName, METH_O, NULL},
	 { "Application_Pointer_SetDescription", _wrap_Application_Pointer_SetDescription, METH_VARARGS, NULL},
	 { "Application_Pointer_GetDescription", _wrap_Application_Pointer_GetDescription, METH_O, NULL},
	 { "Application_Pointer_Init", _wrap_Application_Pointer_Init, METH_O, NULL},
	 { "Application_Pointer_UpdateParameters", _wrap_Application_Pointer_UpdateParameters, METH_O, NULL},
	 { "Application_Pointer_Execute", _wrap_Application_Pointer_Execute, METH_O, NULL},
	 { "Application_Pointer_WriteOutput", _wrap_Application_Pointer_WriteOutput, METH_O, NULL},
	 { "Application_Pointer_ExecuteAndWriteOutput", _wrap_Application_Pointer_ExecuteAndWriteOutput, METH_O, NULL},
	 { "Application_Pointer_ConnectImage", _wrap_Application_Pointer_ConnectImage, METH_VARARGS, NULL},
	 { "Application_Pointer_PropagateConnectMode", _wrap_Application_Pointer_PropagateConnectMode, METH_VARARGS, NULL},
	 { "Application_Pointer_LoadParametersFromXML", _wrap_Application_Pointer_LoadParametersFromXML, METH_VARARGS, NULL},
	 { "Application_Pointer_SaveParametersToXML", _wrap_Application_Pointer_SaveParametersToXML, METH_VARARGS, NULL},
	 { "Application_Pointer_GetLogger", _wrap_Application_Pointer_GetLogger, METH_O, NULL},
	 { "Application_Pointer_IsDeprecated", _wrap_Application_Pointer_IsDeprecated, METH_O, NULL},
	 { "Application_Pointer_GetParametersKeys", _wrap_Application_Pointer_GetParametersKeys, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterByKey", _wrap_Application_Pointer_GetParameterByKey, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterName", _wrap_Application_Pointer_GetParameterName, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterDescription", _wrap_Application_Pointer_GetParameterDescription, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterDescription", _wrap_Application_Pointer_SetParameterDescription, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterUserValue", _wrap_Application_Pointer_SetParameterUserValue, METH_VARARGS, NULL},
	 { "Application_Pointer_EnableParameter", _wrap_Application_Pointer_EnableParameter, METH_VARARGS, NULL},
	 { "Application_Pointer_DisableParameter", _wrap_Application_Pointer_DisableParameter, METH_VARARGS, NULL},
	 { "Application_Pointer_IsParameterEnabled", _wrap_Application_Pointer_IsParameterEnabled, METH_VARARGS, NULL},
	 { "Application_Pointer_IsMandatory", _wrap_Application_Pointer_IsMandatory, METH_VARARGS, NULL},
	 { "Application_Pointer_HasAutomaticValue", _wrap_Application_Pointer_HasAutomaticValue, METH_VARARGS, NULL},
	 { "Application_Pointer_HasUserValue", _wrap_Application_Pointer_HasUserValue, METH_VARARGS, NULL},
	 { "Application_Pointer_ClearValue", _wrap_Application_Pointer_ClearValue, METH_VARARGS, NULL},
	 { "Application_Pointer_HasValue", _wrap_Application_Pointer_HasValue, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterUserLevel", _wrap_Application_Pointer_GetParameterUserLevel, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterType", _wrap_Application_Pointer_GetParameterType, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterRole", _wrap_Application_Pointer_GetParameterRole, METH_VARARGS, NULL},
	 { "Application_Pointer_GetChoiceKeys", _wrap_Application_Pointer_GetChoiceKeys, METH_VARARGS, NULL},
	 { "Application_Pointer_GetChoiceNames", _wrap_Application_Pointer_GetChoiceNames, METH_VARARGS, NULL},
	 { "Application_Pointer_IsApplicationReady", _wrap_Application_Pointer_IsApplicationReady, METH_O, NULL},
	 { "Application_Pointer_SetParameterInt", _wrap_Application_Pointer_SetParameterInt, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterFloat", _wrap_Application_Pointer_SetParameterFloat, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterDouble", _wrap_Application_Pointer_SetParameterDouble, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterString", _wrap_Application_Pointer_SetParameterString, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterStringList", _wrap_Application_Pointer_SetParameterStringList, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterOutputImagePixelType", _wrap_Application_Pointer_SetParameterOutputImagePixelType, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterOutputImagePixelType", _wrap_Application_Pointer_GetParameterOutputImagePixelType, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterInt", _wrap_Application_Pointer_GetParameterInt, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterFloat", _wrap_Application_Pointer_GetParameterFloat, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterDouble", _wrap_Application_Pointer_GetParameterDouble, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterString", _wrap_Application_Pointer_GetParameterString, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterStringList", _wrap_Application_Pointer_GetParameterStringList, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterAsString", _wrap_Application_Pointer_GetParameterAsString, METH_VARARGS, NULL},
	 { "Application_Pointer_GetListViewSingleSelectionMode", _wrap_Application_Pointer_GetListViewSingleSelectionMode, METH_VARARGS, NULL},
	 { "Application_Pointer_GetParameterOutputImage", _wrap_Application_Pointer_GetParameterOutputImage, METH_VARARGS, NULL},
	 { "Application_Pointer_SetParameterInputImage", _wrap_Application_Pointer_SetParameterInputImage, METH_VARARGS, NULL},
	 { "Application_Pointer_AddImageToParameterInputImageList", _wrap_Application_Pointer_AddImageToParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_Pointer_AddParameterStringList", _wrap_Application_Pointer_AddParameterStringList, METH_VARARGS, NULL},
	 { "Application_Pointer_SetNthParameterInputImageList", _wrap_Application_Pointer_SetNthParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_Pointer_SetNthParameterStringList", _wrap_Application_Pointer_SetNthParameterStringList, METH_VARARGS, NULL},
	 { "Application_Pointer_ClearParameterInputImageList", _wrap_Application_Pointer_ClearParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_Pointer_GetNumberOfElementsInParameterInputImageList", _wrap_Application_Pointer_GetNumberOfElementsInParameterInputImageList, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageOrigin", _wrap_Application_Pointer_GetImageOrigin, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageSpacing", _wrap_Application_Pointer_GetImageSpacing, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageSize", _wrap_Application_Pointer_GetImageSize, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageNbBands", _wrap_Application_Pointer_GetImageNbBands, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageProjection", _wrap_Application_Pointer_GetImageProjection, METH_VARARGS, NULL},
	 { "Application_Pointer_PropagateRequestedRegion", _wrap_Application_Pointer_PropagateRequestedRegion, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageRequestedRegion", _wrap_Application_Pointer_GetImageRequestedRegion, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageMetadata", _wrap_Application_Pointer_GetImageMetadata, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageMetadata", _wrap_Application_Pointer_SetImageMetadata, METH_VARARGS, NULL},
	 { "Application_Pointer_GetMetadataDictionary", _wrap_Application_Pointer_GetMetadataDictionary, METH_VARARGS, NULL},
	 { "Application_Pointer_GetImageBasePixelType", _wrap_Application_Pointer_GetImageBasePixelType, METH_VARARGS, NULL},
	 { "Application_Pointer_GetProgressSource", _wrap_Application_Pointer_GetProgressSource, METH_O, NULL},
	 { "Application_Pointer_GetProgressDescription", _wrap_Application_Pointer_GetProgressDescription, METH_O, NULL},
	 { "Application_Pointer_FreeResources", _wrap_Application_Pointer_FreeResources, METH_O, NULL},
	 { "Application_Pointer_SetDocLongDescription", _wrap_Application_Pointer_SetDocLongDescription, METH_VARARGS, NULL},
	 { "Application_Pointer_GetDocLongDescription", _wrap_Application_Pointer_GetDocLongDescription, METH_O, NULL},
	 { "Application_Pointer_SetDocAuthors", _wrap_Application_Pointer_SetDocAuthors, METH_VARARGS, NULL},
	 { "Application_Pointer_GetDocAuthors", _wrap_Application_Pointer_GetDocAuthors, METH_O, NULL},
	 { "Application_Pointer_SetDocLimitations", _wrap_Application_Pointer_SetDocLimitations, METH_VARARGS, NULL},
	 { "Application_Pointer_GetDocLimitations", _wrap_Application_Pointer_GetDocLimitations, METH_O, NULL},
	 { "Application_Pointer_SetDocSeeAlso", _wrap_Application_Pointer_SetDocSeeAlso, METH_VARARGS, NULL},
	 { "Application_Pointer_GetDocSeeAlso", _wrap_Application_Pointer_GetDocSeeAlso, METH_O, NULL},
	 { "Application_Pointer_SetDocTags", _wrap_Application_Pointer_SetDocTags, METH_VARARGS, NULL},
	 { "Application_Pointer_AddDocTag", _wrap_Application_Pointer_AddDocTag, METH_VARARGS, NULL},
	 { "Application_Pointer_GetDocTags", _wrap_Application_Pointer_GetDocTags, METH_O, NULL},
	 { "Application_Pointer_IsMultiWritingEnabled", _wrap_Application_Pointer_IsMultiWritingEnabled, METH_O, NULL},
	 { "Application_Pointer_GetParameterList", _wrap_Application_Pointer_GetParameterList, METH_O, NULL},
	 { "Application_Pointer_GetNumberOfExamples", _wrap_Application_Pointer_GetNumberOfExamples, METH_O, NULL},
	 { "Application_Pointer_GetExampleComment", _wrap_Application_Pointer_GetExampleComment, METH_VARARGS, NULL},
	 { "Application_Pointer_GetExampleNumberOfParameters", _wrap_Application_Pointer_GetExampleNumberOfParameters, METH_VARARGS, NULL},
	 { "Application_Pointer_GetExampleParameterKey", _wrap_Application_Pointer_GetExampleParameterKey, METH_VARARGS, NULL},
	 { "Application_Pointer_GetExampleParameterValue", _wrap_Application_Pointer_GetExampleParameterValue, METH_VARARGS, NULL},
	 { "Application_Pointer_SetDocExampleParameterValue", _wrap_Application_Pointer_SetDocExampleParameterValue, METH_VARARGS, NULL},
	 { "Application_Pointer_SetExampleComment", _wrap_Application_Pointer_SetExampleComment, METH_VARARGS, NULL},
	 { "Application_Pointer_AddExample", _wrap_Application_Pointer_AddExample, METH_VARARGS, NULL},
	 { "Application_Pointer_GetCLExample", _wrap_Application_Pointer_GetCLExample, METH_O, NULL},
	 { "Application_Pointer_GetHtmlExample", _wrap_Application_Pointer_GetHtmlExample, METH_O, NULL},
	 { "Application_Pointer_GetOutputParametersSumUp", _wrap_Application_Pointer_GetOutputParametersSumUp, METH_O, NULL},
	 { "Application_Pointer_SetVectorImageFromUInt8NumpyArray_", _wrap_Application_Pointer_SetVectorImageFromUInt8NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromInt16NumpyArray_", _wrap_Application_Pointer_SetVectorImageFromInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromUInt16NumpyArray_", _wrap_Application_Pointer_SetVectorImageFromUInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromInt32NumpyArray_", _wrap_Application_Pointer_SetVectorImageFromInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromUInt32NumpyArray_", _wrap_Application_Pointer_SetVectorImageFromUInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromFloatNumpyArray_", _wrap_Application_Pointer_SetVectorImageFromFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromDoubleNumpyArray_", _wrap_Application_Pointer_SetVectorImageFromDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromCFloatNumpyArray_", _wrap_Application_Pointer_SetVectorImageFromCFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetVectorImageFromCDoubleNumpyArray_", _wrap_Application_Pointer_SetVectorImageFromCDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromUInt8NumpyArray_", _wrap_Application_Pointer_SetImageFromUInt8NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromInt16NumpyArray_", _wrap_Application_Pointer_SetImageFromInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromUInt16NumpyArray_", _wrap_Application_Pointer_SetImageFromUInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromInt32NumpyArray_", _wrap_Application_Pointer_SetImageFromInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromUInt32NumpyArray_", _wrap_Application_Pointer_SetImageFromUInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromFloatNumpyArray_", _wrap_Application_Pointer_SetImageFromFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromDoubleNumpyArray_", _wrap_Application_Pointer_SetImageFromDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromCFloatNumpyArray_", _wrap_Application_Pointer_SetImageFromCFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_SetImageFromCDoubleNumpyArray_", _wrap_Application_Pointer_SetImageFromCDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsUInt8NumpyArray_", _wrap_Application_Pointer_GetVectorImageAsUInt8NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsInt16NumpyArray_", _wrap_Application_Pointer_GetVectorImageAsInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsUInt16NumpyArray_", _wrap_Application_Pointer_GetVectorImageAsUInt16NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsInt32NumpyArray_", _wrap_Application_Pointer_GetVectorImageAsInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsUInt32NumpyArray_", _wrap_Application_Pointer_GetVectorImageAsUInt32NumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsFloatNumpyArray_", _wrap_Application_Pointer_GetVectorImageAsFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsDoubleNumpyArray_", _wrap_Application_Pointer_GetVectorImageAsDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsCFloatNumpyArray_", _wrap_Application_Pointer_GetVectorImageAsCFloatNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_GetVectorImageAsCDoubleNumpyArray_", _wrap_Application_Pointer_GetVectorImageAsCDoubleNumpyArray_, METH_VARARGS, NULL},
	 { "Application_Pointer_ConvertPixelTypeToNumpy", _wrap_Application_Pointer_ConvertPixelTypeToNumpy, METH_VARARGS, NULL},
	 { "Application_Pointer_SetupImageInformation", _wrap_Application_Pointer_SetupImageInformation, METH_VARARGS, NULL},
	 { "Application_Pointer_New", _wrap_Application_Pointer_New, METH_O, NULL},
	 { "Application_Pointer_GetNameOfClass", _wrap_Application_Pointer_GetNameOfClass, METH_O, NULL},
	 { "Application_Pointer_AddObserver", _wrap_Application_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "Application_Pointer_GetCommand", _wrap_Application_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "Application_Pointer_InvokeEvent", _wrap_Application_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "Application_Pointer_RemoveObserver", _wrap_Application_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "Application_Pointer_RemoveAllObservers", _wrap_Application_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "Application_Pointer_HasObserver", _wrap_Application_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "Application_Pointer_GetMetaDataDictionary", _wrap_Application_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "Application_Pointer_SetMetaDataDictionary", _wrap_Application_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "Application_Pointer_Print", _wrap_Application_Pointer_Print, METH_VARARGS, NULL},
	 { "Application_Pointer_BreakOnError", _wrap_Application_Pointer_BreakOnError, METH_O, NULL},
	 { "Application_Pointer_ToString", _wrap_Application_Pointer_ToString, METH_O, NULL},
	 { "Application_Pointer_swigregister", Application_Pointer_swigregister, METH_O, NULL},
	 { "Application_Pointer_swiginit", Application_Pointer_swiginit, METH_VARARGS, NULL},
	 { "Registry_GetAvailableApplications", _wrap_Registry_GetAvailableApplications, METH_NOARGS, NULL},
	 { "Registry_CreateApplicationWithoutLogger", _wrap_Registry_CreateApplicationWithoutLogger, METH_O, NULL},
	 { "Registry_AddApplicationPath", _wrap_Registry_AddApplicationPath, METH_O, NULL},
	 { "Registry_SetApplicationPath", _wrap_Registry_SetApplicationPath, METH_O, NULL},
	 { "Registry_CleanRegistry", _wrap_Registry_CleanRegistry, METH_NOARGS, NULL},
	 { "Registry_swigregister", Registry_swigregister, METH_O, NULL},
	 { "delete_AddProcessToWatchEvent", _wrap_delete_AddProcessToWatchEvent, METH_O, NULL},
	 { "AddProcessToWatchEvent_GetEventName", _wrap_AddProcessToWatchEvent_GetEventName, METH_O, NULL},
	 { "AddProcessToWatchEvent_CheckEvent", _wrap_AddProcessToWatchEvent_CheckEvent, METH_VARARGS, NULL},
	 { "AddProcessToWatchEvent_MakeObject", _wrap_AddProcessToWatchEvent_MakeObject, METH_O, NULL},
	 { "new_AddProcessToWatchEvent", _wrap_new_AddProcessToWatchEvent, METH_VARARGS, NULL},
	 { "AddProcessToWatchEvent_GetProcess", _wrap_AddProcessToWatchEvent_GetProcess, METH_O, NULL},
	 { "AddProcessToWatchEvent_SetProcess", _wrap_AddProcessToWatchEvent_SetProcess, METH_VARARGS, NULL},
	 { "AddProcessToWatchEvent_SetProcessDescription", _wrap_AddProcessToWatchEvent_SetProcessDescription, METH_VARARGS, NULL},
	 { "AddProcessToWatchEvent_GetProcessDescription", _wrap_AddProcessToWatchEvent_GetProcessDescription, METH_O, NULL},
	 { "AddProcessToWatchEvent_swigregister", AddProcessToWatchEvent_swigregister, METH_O, NULL},
	 { "AddProcessToWatchEvent_swiginit", AddProcessToWatchEvent_swiginit, METH_VARARGS, NULL},
	 { "itkPyCommand_New", _wrap_itkPyCommand_New, METH_NOARGS, NULL},
	 { "itkPyCommand_GetNameOfClass", _wrap_itkPyCommand_GetNameOfClass, METH_O, NULL},
	 { "itkPyCommand_SetCommandCallable", _wrap_itkPyCommand_SetCommandCallable, METH_VARARGS, NULL},
	 { "itkPyCommand_GetCommandCallable", _wrap_itkPyCommand_GetCommandCallable, METH_O, NULL},
	 { "itkPyCommand_Execute", _wrap_itkPyCommand_Execute, METH_VARARGS, NULL},
	 { "delete_itkPyCommand", _wrap_delete_itkPyCommand, METH_O, NULL},
	 { "itkPyCommand_swigregister", itkPyCommand_swigregister, METH_O, NULL},
	 { "new_itkPyCommand_Pointer", _wrap_new_itkPyCommand_Pointer, METH_VARARGS, NULL},
	 { "delete_itkPyCommand_Pointer", _wrap_delete_itkPyCommand_Pointer, METH_O, NULL},
	 { "itkPyCommand_Pointer___deref__", _wrap_itkPyCommand_Pointer___deref__, METH_O, NULL},
	 { "itkPyCommand_Pointer_IsNotNull", _wrap_itkPyCommand_Pointer_IsNotNull, METH_O, NULL},
	 { "itkPyCommand_Pointer_IsNull", _wrap_itkPyCommand_Pointer_IsNull, METH_O, NULL},
	 { "itkPyCommand_Pointer_GetPointer", _wrap_itkPyCommand_Pointer_GetPointer, METH_O, NULL},
	 { "itkPyCommand_Pointer_New", _wrap_itkPyCommand_Pointer_New, METH_O, NULL},
	 { "itkPyCommand_Pointer_GetNameOfClass", _wrap_itkPyCommand_Pointer_GetNameOfClass, METH_O, NULL},
	 { "itkPyCommand_Pointer_SetCommandCallable", _wrap_itkPyCommand_Pointer_SetCommandCallable, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_GetCommandCallable", _wrap_itkPyCommand_Pointer_GetCommandCallable, METH_O, NULL},
	 { "itkPyCommand_Pointer_Execute", _wrap_itkPyCommand_Pointer_Execute, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_AddObserver", _wrap_itkPyCommand_Pointer_AddObserver, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_GetCommand", _wrap_itkPyCommand_Pointer_GetCommand, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_InvokeEvent", _wrap_itkPyCommand_Pointer_InvokeEvent, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_RemoveObserver", _wrap_itkPyCommand_Pointer_RemoveObserver, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_RemoveAllObservers", _wrap_itkPyCommand_Pointer_RemoveAllObservers, METH_O, NULL},
	 { "itkPyCommand_Pointer_HasObserver", _wrap_itkPyCommand_Pointer_HasObserver, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_GetMetaDataDictionary", _wrap_itkPyCommand_Pointer_GetMetaDataDictionary, METH_O, NULL},
	 { "itkPyCommand_Pointer_SetMetaDataDictionary", _wrap_itkPyCommand_Pointer_SetMetaDataDictionary, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_Print", _wrap_itkPyCommand_Pointer_Print, METH_VARARGS, NULL},
	 { "itkPyCommand_Pointer_BreakOnError", _wrap_itkPyCommand_Pointer_BreakOnError, METH_O, NULL},
	 { "itkPyCommand_Pointer_ToString", _wrap_itkPyCommand_Pointer_ToString, METH_O, NULL},
	 { "itkPyCommand_Pointer_swigregister", itkPyCommand_Pointer_swigregister, METH_O, NULL},
	 { "itkPyCommand_Pointer_swiginit", itkPyCommand_Pointer_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};

static PyMethodDef SwigMethods_proxydocs[] = {
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_PythonLogOutputTo_p_itkLogOutput(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLogOutput *)  ((PythonLogOutput *) x));
}
static void *_p_otb__ImageMetadataTo_p_otb__ImageMetadataBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((otb::ImageMetadataBase *)  ((otb::ImageMetadata *) x));
}
static void *_p_itkPyCommandTo_p_itkCommand(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkCommand *)  ((itkPyCommand *) x));
}
static void *_p_itk__VectorT_double_2_tTo_p_itk__FixedArrayT_double_2_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itk::FixedArray< double,2 > *)  ((itk::Vector< double,2 > *) x));
}
static void *_p_itk__PointT_double_2_tTo_p_itk__FixedArrayT_double_2_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itk::FixedArray< double,2 > *)  ((itk::Point< double,2 > *) x));
}
static void *_p_itkCommandTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *) ((itkCommand *) x));
}
static void *_p_ApplicationTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *) ((Application *) x));
}
static void *_p_RegistryTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *) ((Registry *) x));
}
static void *_p_itkPyCommandTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *)(itkCommand *) ((itkPyCommand *) x));
}
static void *_p_itkLogOutputTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *) ((itkLogOutput *) x));
}
static void *_p_PythonLogOutputTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *)(itkLogOutput *) ((PythonLogOutput *) x));
}
static void *_p_itkMetaDataObjectBaseTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *)  ((itkMetaDataObjectBase *) x));
}
static void *_p_ProgressReporterManagerTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *) ((ProgressReporterManager *) x));
}
static void *_p_itkObjectTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *)  ((itkObject *) x));
}
static void *_p_itkProcessObjectTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *) ((itkProcessObject *) x));
}
static void *_p_itkObjectFactoryBaseTo_p_itkLightObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkLightObject *) (itkObject *) ((itkObjectFactoryBase *) x));
}
static void *_p_AddProcessToWatchEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *)  ((AddProcessToWatchEvent *) x));
}
static void *_p_itkUserEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkUserEvent *) x));
}
static void *_p_itkStartEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkStartEvent *) x));
}
static void *_p_itkEndEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkEndEvent *) x));
}
static void *_p_itkProgressEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkProgressEvent *) x));
}
static void *_p_itkEndPickEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *)(itkPickEvent *) ((itkEndPickEvent *) x));
}
static void *_p_itkAbortCheckEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *)(itkPickEvent *) ((itkAbortCheckEvent *) x));
}
static void *_p_itkStartPickEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *)(itkPickEvent *) ((itkStartPickEvent *) x));
}
static void *_p_itkPickEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkPickEvent *) x));
}
static void *_p_itkExitEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkExitEvent *) x));
}
static void *_p_itkDeleteEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkDeleteEvent *) x));
}
static void *_p_itkModifiedEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkModifiedEvent *) x));
}
static void *_p_itkNoEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *)  ((itkNoEvent *) x));
}
static void *_p_itkIterationEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *) (itkAnyEvent *) ((itkIterationEvent *) x));
}
static void *_p_itkAnyEventTo_p_itkEventObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkEventObject *)  ((itkAnyEvent *) x));
}
static void *_p_itkCommandTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *)  ((itkCommand *) x));
}
static void *_p_ApplicationTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *)  ((Application *) x));
}
static void *_p_RegistryTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *)  ((Registry *) x));
}
static void *_p_itkPyCommandTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *) (itkCommand *) ((itkPyCommand *) x));
}
static void *_p_itkLogOutputTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *)  ((itkLogOutput *) x));
}
static void *_p_PythonLogOutputTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *) (itkLogOutput *) ((PythonLogOutput *) x));
}
static void *_p_ProgressReporterManagerTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *)  ((ProgressReporterManager *) x));
}
static void *_p_itkProcessObjectTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *)  ((itkProcessObject *) x));
}
static void *_p_itkObjectFactoryBaseTo_p_itkObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkObject *)  ((itkObjectFactoryBase *) x));
}
static void *_p_itkProgressEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkProgressEvent *) x));
}
static void *_p_itkDeleteEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkDeleteEvent *) x));
}
static void *_p_itkExitEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkExitEvent *) x));
}
static void *_p_itkStartEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkStartEvent *) x));
}
static void *_p_itkIterationEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkIterationEvent *) x));
}
static void *_p_itkModifiedEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkModifiedEvent *) x));
}
static void *_p_itkPickEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkPickEvent *) x));
}
static void *_p_itkStartPickEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *) (itkPickEvent *) ((itkStartPickEvent *) x));
}
static void *_p_itkUserEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkUserEvent *) x));
}
static void *_p_itkAbortCheckEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *) (itkPickEvent *) ((itkAbortCheckEvent *) x));
}
static void *_p_itkEndPickEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *) (itkPickEvent *) ((itkEndPickEvent *) x));
}
static void *_p_itkEndEventTo_p_itkAnyEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkAnyEvent *)  ((itkEndEvent *) x));
}
static void *_p_itkStartPickEventTo_p_itkPickEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkPickEvent *)  ((itkStartPickEvent *) x));
}
static void *_p_itkAbortCheckEventTo_p_itkPickEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkPickEvent *)  ((itkAbortCheckEvent *) x));
}
static void *_p_itkEndPickEventTo_p_itkPickEvent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((itkPickEvent *)  ((itkEndPickEvent *) x));
}
static swig_type_info _swigt__p_AddProcessToWatchEvent = {"_p_AddProcessToWatchEvent", "AddProcessToWatchEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Application = {"_p_Application", "Application *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Application_Pointer = {"_p_Application_Pointer", "Application_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ImageBaseType = {"_p_ImageBaseType", "ImageBaseType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_int16_t = {"_p_KWIML_INT_int16_t", "KWIML_INT_int16_t *|itk::int_least16_t *|itk::int_fast16_t *|itk::int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_int32_t = {"_p_KWIML_INT_int32_t", "KWIML_INT_int32_t *|itk::int_least32_t *|itk::int_fast32_t *|itk::int32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_int64_t = {"_p_KWIML_INT_int64_t", "KWIML_INT_int64_t *|itk::int_least64_t *|itk::int_fast64_t *|itk::int64_t *|itk::intmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_int8_t = {"_p_KWIML_INT_int8_t", "itk::int_least8_t *|itk::int_fast8_t *|KWIML_INT_int8_t *|itk::int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_uint16_t = {"_p_KWIML_INT_uint16_t", "KWIML_INT_uint16_t *|itk::uint_least16_t *|itk::uint_fast16_t *|itk::uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_uint32_t = {"_p_KWIML_INT_uint32_t", "KWIML_INT_uint32_t *|itk::uint_least32_t *|itk::uint_fast32_t *|itk::uint32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_uint64_t = {"_p_KWIML_INT_uint64_t", "KWIML_INT_uint64_t *|itk::uint_least64_t *|itk::uint_fast64_t *|itk::uint64_t *|itk::uintmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_KWIML_INT_uint8_t = {"_p_KWIML_INT_uint8_t", "itk::uint_least8_t *|itk::uint_fast8_t *|KWIML_INT_uint8_t *|itk::uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Logger = {"_p_Logger", "Logger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NumericTraitsT_double_t__RealType = {"_p_NumericTraitsT_double_t__RealType", "NumericTraits< double >::RealType *|itk::Vector< double,2 >::RealValueType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Parameter = {"_p_Parameter", "Parameter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProgressReporterManager = {"_p_ProgressReporterManager", "ProgressReporterManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProgressReporterManager_Pointer = {"_p_ProgressReporterManager_Pointer", "ProgressReporterManager_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PythonLogOutput = {"_p_PythonLogOutput", "PythonLogOutput *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PythonLogOutput_Pointer = {"_p_PythonLogOutput_Pointer", "PythonLogOutput_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RealValueType = {"_p_RealValueType", "RealValueType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Registry = {"_p_Registry", "Registry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__any = {"_p_boost__any", "boost::any *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reference = {"_p_const_reference", "const_reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "itk::SpacePrecisionType *|double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkAbortCheckEvent = {"_p_itkAbortCheckEvent", "itkAbortCheckEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkAnyEvent = {"_p_itkAnyEvent", "itkAnyEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkCommand = {"_p_itkCommand", "itkCommand *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkCommand_Pointer = {"_p_itkCommand_Pointer", "itkCommand_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkDeleteEvent = {"_p_itkDeleteEvent", "itkDeleteEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkEndEvent = {"_p_itkEndEvent", "itkEndEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkEndPickEvent = {"_p_itkEndPickEvent", "itkEndPickEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkEventObject = {"_p_itkEventObject", "itkEventObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkExitEvent = {"_p_itkExitEvent", "itkExitEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkIndent = {"_p_itkIndent", "itkIndent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkIterationEvent = {"_p_itkIterationEvent", "itkIterationEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkLightObject = {"_p_itkLightObject", "itkLightObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkLightObject_Pointer = {"_p_itkLightObject_Pointer", "itkLightObject_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkLogOutput = {"_p_itkLogOutput", "itkLogOutput *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkMetaDataDictionary = {"_p_itkMetaDataDictionary", "itkMetaDataDictionary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkMetaDataObjectBase = {"_p_itkMetaDataObjectBase", "itkMetaDataObjectBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkMetaDataObjectBase_Pointer = {"_p_itkMetaDataObjectBase_Pointer", "itkMetaDataObjectBase_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkModifiedEvent = {"_p_itkModifiedEvent", "itkModifiedEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkNoEvent = {"_p_itkNoEvent", "itkNoEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkObject = {"_p_itkObject", "itkObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkObjectFactoryBase = {"_p_itkObjectFactoryBase", "itkObjectFactoryBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkObjectFactoryBase_Pointer = {"_p_itkObjectFactoryBase_Pointer", "itkObjectFactoryBase_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkObject_Pointer = {"_p_itkObject_Pointer", "itkObject_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkPickEvent = {"_p_itkPickEvent", "itkPickEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkProcessObject = {"_p_itkProcessObject", "itkProcessObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkProcessObject_Pointer = {"_p_itkProcessObject_Pointer", "itkProcessObject_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkProgressEvent = {"_p_itkProgressEvent", "itkProgressEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkPyCommand = {"_p_itkPyCommand", "itkPyCommand *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkPyCommand_Pointer = {"_p_itkPyCommand_Pointer", "itkPyCommand_Pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkStartEvent = {"_p_itkStartEvent", "itkStartEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkStartPickEvent = {"_p_itkStartPickEvent", "itkStartPickEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itkUserEvent = {"_p_itkUserEvent", "itkUserEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itk__FixedArrayT_double_2_t = {"_p_itk__FixedArrayT_double_2_t", "itk::FixedArray< double,2 > *|itk::FixedArray< itk::SpacePrecisionType,2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itk__ImageRegionT_2_t = {"_p_itk__ImageRegionT_2_t", "itk::ImageRegion< 2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itk__IndexT_2_t = {"_p_itk__IndexT_2_t", "itk::Index< 2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itk__PointT_double_2_t = {"_p_itk__PointT_double_2_t", "itk::Point< double,2 > *|itk::Point< itk::SpacePrecisionType,2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itk__SizeT_2_t = {"_p_itk__SizeT_2_t", "itk::Size< 2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_itk__VectorT_double_2_t = {"_p_itk__VectorT_double_2_t", "itk::Vector< double,2 > *|itk::Vector< itk::SpacePrecisionType,2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_key_type = {"_p_key_type", "key_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "itk::IndexValueType *|itk::OffsetValueType *|long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapped_type = {"_p_mapped_type", "mapped_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__GCP = {"_p_otb__GCP", "otb::GCP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__ImageMetadata = {"_p_otb__ImageMetadata", "otb::ImageMetadata *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__ImageMetadataBase = {"_p_otb__ImageMetadataBase", "otb::ImageMetadataBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__MetaData__LUT1D = {"_p_otb__MetaData__LUT1D", "otb::MetaData::LUT1D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__MetaData__LUT2D = {"_p_otb__MetaData__LUT2D", "otb::MetaData::LUT2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__MetaData__LUTAxis = {"_p_otb__MetaData__LUTAxis", "otb::MetaData::LUTAxis *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__MetaData__LUTT_1_t = {"_p_otb__MetaData__LUTT_1_t", "otb::MetaData::LUT< 1 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__MetaData__LUTT_2_t = {"_p_otb__MetaData__LUTT_2_t", "otb::MetaData::LUT< 2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__MetaData__TimePoint = {"_p_otb__MetaData__TimePoint", "otb::MetaData::TimePoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__SwigPrintCallback = {"_p_otb__SwigPrintCallback", "otb::SwigPrintCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__VectorDataKeywordlist = {"_p_otb__VectorDataKeywordlist", "otb::VectorDataKeywordlist *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__Wrapper__ComplexImagePixelType = {"_p_otb__Wrapper__ComplexImagePixelType", "enum otb::Wrapper::ComplexImagePixelType *|otb::Wrapper::ComplexImagePixelType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__Wrapper__ImagePixelType = {"_p_otb__Wrapper__ImagePixelType", "enum otb::Wrapper::ImagePixelType *|otb::Wrapper::ImagePixelType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__Wrapper__ParameterGroup = {"_p_otb__Wrapper__ParameterGroup", "otb::Wrapper::ParameterGroup *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__Wrapper__ParameterType = {"_p_otb__Wrapper__ParameterType", "enum otb::Wrapper::ParameterType *|otb::Wrapper::ParameterType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__Wrapper__Role = {"_p_otb__Wrapper__Role", "enum otb::Wrapper::Role *|otb::Wrapper::Role *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_otb__Wrapper__UserLevel = {"_p_otb__Wrapper__UserLevel", "enum otb::Wrapper::UserLevel *|otb::Wrapper::UserLevel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_PyObject = {"_p_p_PyObject", "PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_double = {"_p_p_double", "double **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_float = {"_p_p_float", "float **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_int = {"_p_p_int", "int **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_short = {"_p_p_short", "short **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_std__complexT_double_t = {"_p_p_std__complexT_double_t", "std::complex< double > **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_std__complexT_float_t = {"_p_p_std__complexT_float_t", "std::complex< float > **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_char = {"_p_p_unsigned_char", "unsigned char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_int = {"_p_p_unsigned_int", "unsigned int **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_short = {"_p_p_unsigned_short", "unsigned short **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ptrdiff_t = {"_p_ptrdiff_t", "::ptrdiff_t *|itk::intptr_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "itk::uintptr_t *|::size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_bool_t = {"_p_std__allocatorT_bool_t", "std::vector< bool >::allocator_type *|std::allocator< bool > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_double_t = {"_p_std__allocatorT_double_t", "std::vector< double >::allocator_type *|std::allocator< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__pairT_std__string_const_std__string_t_t = {"_p_std__allocatorT_std__pairT_std__string_const_std__string_t_t", "std::map< std::string,std::string >::allocator_type *|std::allocator< std::pair< std::string const,std::string > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__string_t = {"_p_std__allocatorT_std__string_t", "std::vector< std::string >::allocator_type *|std::allocator< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__complexT_double_t = {"_p_std__complexT_double_t", "std::complex< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__complexT_float_t = {"_p_std__complexT_float_t", "std::complex< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__lessT_std__string_t = {"_p_std__lessT_std__string_t", "std::less< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_bool_t = {"_p_std__listT_bool_t", "std::list< bool > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_itkLightObject_Pointer_t = {"_p_std__listT_itkLightObject_Pointer_t", "std::list< itkLightObject_Pointer > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_itkObjectFactoryBase_p_t = {"_p_std__listT_itkObjectFactoryBase_p_t", "std::list< itkObjectFactoryBase * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_std__string_t = {"_p_std__listT_std__string_t", "std::list< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t = {"_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t", "std::map< std::string,std::string > *|std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__type_info = {"_p_std__type_info", "std::type_info *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_bool_std__allocatorT_bool_t_t = {"_p_std__vectorT_bool_std__allocatorT_bool_t_t", "std::vector< bool,std::allocator< bool > > *|std::vector< bool > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_double_std__allocatorT_double_t_t = {"_p_std__vectorT_double_std__allocatorT_double_t_t", "std::vector< double,std::allocator< double > > *|std::vector< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t = {"_p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t", "std::vector< otb::ImageMetadataBase,std::allocator< otb::ImageMetadataBase > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t = {"_p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t", "std::vector< std::pair< std::string,std::string >,std::allocator< std::pair< std::string,std::string > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t", "std::vector< std::string,std::allocator< std::string > > *|std::vector< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "itk::ThreadIdType *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "itk::IdentifierType *|itk::ModifiedTimeType *|itk::SizeValueType *|unsigned long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_AddProcessToWatchEvent,
  &_swigt__p_Application,
  &_swigt__p_Application_Pointer,
  &_swigt__p_ImageBaseType,
  &_swigt__p_KWIML_INT_int16_t,
  &_swigt__p_KWIML_INT_int32_t,
  &_swigt__p_KWIML_INT_int64_t,
  &_swigt__p_KWIML_INT_int8_t,
  &_swigt__p_KWIML_INT_uint16_t,
  &_swigt__p_KWIML_INT_uint32_t,
  &_swigt__p_KWIML_INT_uint64_t,
  &_swigt__p_KWIML_INT_uint8_t,
  &_swigt__p_Logger,
  &_swigt__p_NumericTraitsT_double_t__RealType,
  &_swigt__p_Parameter,
  &_swigt__p_ProgressReporterManager,
  &_swigt__p_ProgressReporterManager_Pointer,
  &_swigt__p_PythonLogOutput,
  &_swigt__p_PythonLogOutput_Pointer,
  &_swigt__p_RealValueType,
  &_swigt__p_Registry,
  &_swigt__p_allocator_type,
  &_swigt__p_boost__any,
  &_swigt__p_char,
  &_swigt__p_const_reference,
  &_swigt__p_difference_type,
  &_swigt__p_double,
  &_swigt__p_int,
  &_swigt__p_itkAbortCheckEvent,
  &_swigt__p_itkAnyEvent,
  &_swigt__p_itkCommand,
  &_swigt__p_itkCommand_Pointer,
  &_swigt__p_itkDeleteEvent,
  &_swigt__p_itkEndEvent,
  &_swigt__p_itkEndPickEvent,
  &_swigt__p_itkEventObject,
  &_swigt__p_itkExitEvent,
  &_swigt__p_itkIndent,
  &_swigt__p_itkIterationEvent,
  &_swigt__p_itkLightObject,
  &_swigt__p_itkLightObject_Pointer,
  &_swigt__p_itkLogOutput,
  &_swigt__p_itkMetaDataDictionary,
  &_swigt__p_itkMetaDataObjectBase,
  &_swigt__p_itkMetaDataObjectBase_Pointer,
  &_swigt__p_itkModifiedEvent,
  &_swigt__p_itkNoEvent,
  &_swigt__p_itkObject,
  &_swigt__p_itkObjectFactoryBase,
  &_swigt__p_itkObjectFactoryBase_Pointer,
  &_swigt__p_itkObject_Pointer,
  &_swigt__p_itkPickEvent,
  &_swigt__p_itkProcessObject,
  &_swigt__p_itkProcessObject_Pointer,
  &_swigt__p_itkProgressEvent,
  &_swigt__p_itkPyCommand,
  &_swigt__p_itkPyCommand_Pointer,
  &_swigt__p_itkStartEvent,
  &_swigt__p_itkStartPickEvent,
  &_swigt__p_itkUserEvent,
  &_swigt__p_itk__FixedArrayT_double_2_t,
  &_swigt__p_itk__ImageRegionT_2_t,
  &_swigt__p_itk__IndexT_2_t,
  &_swigt__p_itk__PointT_double_2_t,
  &_swigt__p_itk__SizeT_2_t,
  &_swigt__p_itk__VectorT_double_2_t,
  &_swigt__p_key_type,
  &_swigt__p_long,
  &_swigt__p_mapped_type,
  &_swigt__p_otb__GCP,
  &_swigt__p_otb__ImageMetadata,
  &_swigt__p_otb__ImageMetadataBase,
  &_swigt__p_otb__MetaData__LUT1D,
  &_swigt__p_otb__MetaData__LUT2D,
  &_swigt__p_otb__MetaData__LUTAxis,
  &_swigt__p_otb__MetaData__LUTT_1_t,
  &_swigt__p_otb__MetaData__LUTT_2_t,
  &_swigt__p_otb__MetaData__TimePoint,
  &_swigt__p_otb__SwigPrintCallback,
  &_swigt__p_otb__VectorDataKeywordlist,
  &_swigt__p_otb__Wrapper__ComplexImagePixelType,
  &_swigt__p_otb__Wrapper__ImagePixelType,
  &_swigt__p_otb__Wrapper__ParameterGroup,
  &_swigt__p_otb__Wrapper__ParameterType,
  &_swigt__p_otb__Wrapper__Role,
  &_swigt__p_otb__Wrapper__UserLevel,
  &_swigt__p_p_PyObject,
  &_swigt__p_p_double,
  &_swigt__p_p_float,
  &_swigt__p_p_int,
  &_swigt__p_p_short,
  &_swigt__p_p_std__complexT_double_t,
  &_swigt__p_p_std__complexT_float_t,
  &_swigt__p_p_unsigned_char,
  &_swigt__p_p_unsigned_int,
  &_swigt__p_p_unsigned_short,
  &_swigt__p_ptrdiff_t,
  &_swigt__p_size_t,
  &_swigt__p_size_type,
  &_swigt__p_std__allocatorT_bool_t,
  &_swigt__p_std__allocatorT_double_t,
  &_swigt__p_std__allocatorT_std__pairT_std__string_const_std__string_t_t,
  &_swigt__p_std__allocatorT_std__string_t,
  &_swigt__p_std__complexT_double_t,
  &_swigt__p_std__complexT_float_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__lessT_std__string_t,
  &_swigt__p_std__listT_bool_t,
  &_swigt__p_std__listT_itkLightObject_Pointer_t,
  &_swigt__p_std__listT_itkObjectFactoryBase_p_t,
  &_swigt__p_std__listT_std__string_t,
  &_swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,
  &_swigt__p_std__ostream,
  &_swigt__p_std__type_info,
  &_swigt__p_std__vectorT_bool_std__allocatorT_bool_t_t,
  &_swigt__p_std__vectorT_double_std__allocatorT_double_t_t,
  &_swigt__p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t,
  &_swigt__p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc__p_AddProcessToWatchEvent[] = {  {&_swigt__p_AddProcessToWatchEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Application[] = {  {&_swigt__p_Application, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Application_Pointer[] = {  {&_swigt__p_Application_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ImageBaseType[] = {  {&_swigt__p_ImageBaseType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_int16_t[] = {  {&_swigt__p_KWIML_INT_int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_int32_t[] = {  {&_swigt__p_KWIML_INT_int32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_int64_t[] = {  {&_swigt__p_KWIML_INT_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_int8_t[] = {  {&_swigt__p_KWIML_INT_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_uint16_t[] = {  {&_swigt__p_KWIML_INT_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_uint32_t[] = {  {&_swigt__p_KWIML_INT_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_uint64_t[] = {  {&_swigt__p_KWIML_INT_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_KWIML_INT_uint8_t[] = {  {&_swigt__p_KWIML_INT_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Logger[] = {  {&_swigt__p_Logger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NumericTraitsT_double_t__RealType[] = {  {&_swigt__p_NumericTraitsT_double_t__RealType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Parameter[] = {  {&_swigt__p_Parameter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProgressReporterManager[] = {  {&_swigt__p_ProgressReporterManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProgressReporterManager_Pointer[] = {  {&_swigt__p_ProgressReporterManager_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PythonLogOutput[] = {  {&_swigt__p_PythonLogOutput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PythonLogOutput_Pointer[] = {  {&_swigt__p_PythonLogOutput_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RealValueType[] = {  {&_swigt__p_RealValueType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Registry[] = {  {&_swigt__p_Registry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__any[] = {  {&_swigt__p_boost__any, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reference[] = {  {&_swigt__p_const_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkAbortCheckEvent[] = {  {&_swigt__p_itkAbortCheckEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkAnyEvent[] = {  {&_swigt__p_itkProgressEvent, _p_itkProgressEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkDeleteEvent, _p_itkDeleteEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkExitEvent, _p_itkExitEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkStartEvent, _p_itkStartEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkIterationEvent, _p_itkIterationEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkModifiedEvent, _p_itkModifiedEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkPickEvent, _p_itkPickEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkStartPickEvent, _p_itkStartPickEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkAbortCheckEvent, _p_itkAbortCheckEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkEndPickEvent, _p_itkEndPickEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkUserEvent, _p_itkUserEventTo_p_itkAnyEvent, 0, 0},  {&_swigt__p_itkAnyEvent, 0, 0, 0},  {&_swigt__p_itkEndEvent, _p_itkEndEventTo_p_itkAnyEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkCommand[] = {  {&_swigt__p_itkCommand, 0, 0, 0},  {&_swigt__p_itkPyCommand, _p_itkPyCommandTo_p_itkCommand, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkCommand_Pointer[] = {  {&_swigt__p_itkCommand_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkDeleteEvent[] = {  {&_swigt__p_itkDeleteEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkEndEvent[] = {  {&_swigt__p_itkEndEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkEndPickEvent[] = {  {&_swigt__p_itkEndPickEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkEventObject[] = {  {&_swigt__p_AddProcessToWatchEvent, _p_AddProcessToWatchEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkEventObject, 0, 0, 0},  {&_swigt__p_itkUserEvent, _p_itkUserEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkStartEvent, _p_itkStartEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkEndEvent, _p_itkEndEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkProgressEvent, _p_itkProgressEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkEndPickEvent, _p_itkEndPickEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkAbortCheckEvent, _p_itkAbortCheckEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkStartPickEvent, _p_itkStartPickEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkPickEvent, _p_itkPickEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkExitEvent, _p_itkExitEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkDeleteEvent, _p_itkDeleteEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkModifiedEvent, _p_itkModifiedEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkNoEvent, _p_itkNoEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkIterationEvent, _p_itkIterationEventTo_p_itkEventObject, 0, 0},  {&_swigt__p_itkAnyEvent, _p_itkAnyEventTo_p_itkEventObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkExitEvent[] = {  {&_swigt__p_itkExitEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkIndent[] = {  {&_swigt__p_itkIndent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkIterationEvent[] = {  {&_swigt__p_itkIterationEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkLightObject[] = {  {&_swigt__p_itkCommand, _p_itkCommandTo_p_itkLightObject, 0, 0},  {&_swigt__p_itkPyCommand, _p_itkPyCommandTo_p_itkLightObject, 0, 0},  {&_swigt__p_Application, _p_ApplicationTo_p_itkLightObject, 0, 0},  {&_swigt__p_Registry, _p_RegistryTo_p_itkLightObject, 0, 0},  {&_swigt__p_itkLogOutput, _p_itkLogOutputTo_p_itkLightObject, 0, 0},  {&_swigt__p_PythonLogOutput, _p_PythonLogOutputTo_p_itkLightObject, 0, 0},  {&_swigt__p_itkLightObject, 0, 0, 0},  {&_swigt__p_itkMetaDataObjectBase, _p_itkMetaDataObjectBaseTo_p_itkLightObject, 0, 0},  {&_swigt__p_ProgressReporterManager, _p_ProgressReporterManagerTo_p_itkLightObject, 0, 0},  {&_swigt__p_itkObject, _p_itkObjectTo_p_itkLightObject, 0, 0},  {&_swigt__p_itkProcessObject, _p_itkProcessObjectTo_p_itkLightObject, 0, 0},  {&_swigt__p_itkObjectFactoryBase, _p_itkObjectFactoryBaseTo_p_itkLightObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkLightObject_Pointer[] = {  {&_swigt__p_itkLightObject_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkLogOutput[] = {  {&_swigt__p_itkLogOutput, 0, 0, 0},  {&_swigt__p_PythonLogOutput, _p_PythonLogOutputTo_p_itkLogOutput, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkMetaDataDictionary[] = {  {&_swigt__p_itkMetaDataDictionary, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkMetaDataObjectBase[] = {  {&_swigt__p_itkMetaDataObjectBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkMetaDataObjectBase_Pointer[] = {  {&_swigt__p_itkMetaDataObjectBase_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkModifiedEvent[] = {  {&_swigt__p_itkModifiedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkNoEvent[] = {  {&_swigt__p_itkNoEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkObject[] = {  {&_swigt__p_itkCommand, _p_itkCommandTo_p_itkObject, 0, 0},  {&_swigt__p_itkPyCommand, _p_itkPyCommandTo_p_itkObject, 0, 0},  {&_swigt__p_Application, _p_ApplicationTo_p_itkObject, 0, 0},  {&_swigt__p_Registry, _p_RegistryTo_p_itkObject, 0, 0},  {&_swigt__p_itkLogOutput, _p_itkLogOutputTo_p_itkObject, 0, 0},  {&_swigt__p_PythonLogOutput, _p_PythonLogOutputTo_p_itkObject, 0, 0},  {&_swigt__p_ProgressReporterManager, _p_ProgressReporterManagerTo_p_itkObject, 0, 0},  {&_swigt__p_itkObject, 0, 0, 0},  {&_swigt__p_itkProcessObject, _p_itkProcessObjectTo_p_itkObject, 0, 0},  {&_swigt__p_itkObjectFactoryBase, _p_itkObjectFactoryBaseTo_p_itkObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkObjectFactoryBase[] = {  {&_swigt__p_itkObjectFactoryBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkObjectFactoryBase_Pointer[] = {  {&_swigt__p_itkObjectFactoryBase_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkObject_Pointer[] = {  {&_swigt__p_itkObject_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkPickEvent[] = {  {&_swigt__p_itkPickEvent, 0, 0, 0},  {&_swigt__p_itkStartPickEvent, _p_itkStartPickEventTo_p_itkPickEvent, 0, 0},  {&_swigt__p_itkAbortCheckEvent, _p_itkAbortCheckEventTo_p_itkPickEvent, 0, 0},  {&_swigt__p_itkEndPickEvent, _p_itkEndPickEventTo_p_itkPickEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkProcessObject[] = {  {&_swigt__p_itkProcessObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkProcessObject_Pointer[] = {  {&_swigt__p_itkProcessObject_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkProgressEvent[] = {  {&_swigt__p_itkProgressEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkPyCommand[] = {  {&_swigt__p_itkPyCommand, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkPyCommand_Pointer[] = {  {&_swigt__p_itkPyCommand_Pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkStartEvent[] = {  {&_swigt__p_itkStartEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkStartPickEvent[] = {  {&_swigt__p_itkStartPickEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itkUserEvent[] = {  {&_swigt__p_itkUserEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itk__FixedArrayT_double_2_t[] = {  {&_swigt__p_itk__FixedArrayT_double_2_t, 0, 0, 0},  {&_swigt__p_itk__VectorT_double_2_t, _p_itk__VectorT_double_2_tTo_p_itk__FixedArrayT_double_2_t, 0, 0},  {&_swigt__p_itk__PointT_double_2_t, _p_itk__PointT_double_2_tTo_p_itk__FixedArrayT_double_2_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itk__ImageRegionT_2_t[] = {  {&_swigt__p_itk__ImageRegionT_2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itk__IndexT_2_t[] = {  {&_swigt__p_itk__IndexT_2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itk__PointT_double_2_t[] = {  {&_swigt__p_itk__PointT_double_2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itk__SizeT_2_t[] = {  {&_swigt__p_itk__SizeT_2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_itk__VectorT_double_2_t[] = {  {&_swigt__p_itk__VectorT_double_2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_key_type[] = {  {&_swigt__p_key_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapped_type[] = {  {&_swigt__p_mapped_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__GCP[] = {  {&_swigt__p_otb__GCP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__ImageMetadata[] = {  {&_swigt__p_otb__ImageMetadata, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__ImageMetadataBase[] = {  {&_swigt__p_otb__ImageMetadata, _p_otb__ImageMetadataTo_p_otb__ImageMetadataBase, 0, 0},  {&_swigt__p_otb__ImageMetadataBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__MetaData__LUT1D[] = {  {&_swigt__p_otb__MetaData__LUT1D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__MetaData__LUT2D[] = {  {&_swigt__p_otb__MetaData__LUT2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__MetaData__LUTAxis[] = {  {&_swigt__p_otb__MetaData__LUTAxis, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__MetaData__LUTT_1_t[] = {  {&_swigt__p_otb__MetaData__LUTT_1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__MetaData__LUTT_2_t[] = {  {&_swigt__p_otb__MetaData__LUTT_2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__MetaData__TimePoint[] = {  {&_swigt__p_otb__MetaData__TimePoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__SwigPrintCallback[] = {  {&_swigt__p_otb__SwigPrintCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__VectorDataKeywordlist[] = {  {&_swigt__p_otb__VectorDataKeywordlist, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__Wrapper__ComplexImagePixelType[] = {  {&_swigt__p_otb__Wrapper__ComplexImagePixelType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__Wrapper__ImagePixelType[] = {  {&_swigt__p_otb__Wrapper__ImagePixelType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__Wrapper__ParameterGroup[] = {  {&_swigt__p_otb__Wrapper__ParameterGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__Wrapper__ParameterType[] = {  {&_swigt__p_otb__Wrapper__ParameterType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__Wrapper__Role[] = {  {&_swigt__p_otb__Wrapper__Role, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_otb__Wrapper__UserLevel[] = {  {&_swigt__p_otb__Wrapper__UserLevel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_PyObject[] = {  {&_swigt__p_p_PyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_double[] = {  {&_swigt__p_p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_float[] = {  {&_swigt__p_p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_int[] = {  {&_swigt__p_p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_short[] = {  {&_swigt__p_p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_std__complexT_double_t[] = {  {&_swigt__p_p_std__complexT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_std__complexT_float_t[] = {  {&_swigt__p_p_std__complexT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_char[] = {  {&_swigt__p_p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_int[] = {  {&_swigt__p_p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_short[] = {  {&_swigt__p_p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ptrdiff_t[] = {  {&_swigt__p_ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_bool_t[] = {  {&_swigt__p_std__allocatorT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_double_t[] = {  {&_swigt__p_std__allocatorT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__pairT_std__string_const_std__string_t_t[] = {  {&_swigt__p_std__allocatorT_std__pairT_std__string_const_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__string_t[] = {  {&_swigt__p_std__allocatorT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__complexT_double_t[] = {  {&_swigt__p_std__complexT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__complexT_float_t[] = {  {&_swigt__p_std__complexT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__lessT_std__string_t[] = {  {&_swigt__p_std__lessT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_bool_t[] = {  {&_swigt__p_std__listT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_itkLightObject_Pointer_t[] = {  {&_swigt__p_std__listT_itkLightObject_Pointer_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_itkObjectFactoryBase_p_t[] = {  {&_swigt__p_std__listT_itkObjectFactoryBase_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_std__string_t[] = {  {&_swigt__p_std__listT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t[] = {  {&_swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__type_info[] = {  {&_swigt__p_std__type_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_bool_std__allocatorT_bool_t_t[] = {  {&_swigt__p_std__vectorT_bool_std__allocatorT_bool_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_double_std__allocatorT_double_t_t[] = {  {&_swigt__p_std__vectorT_double_std__allocatorT_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t[] = {  {&_swigt__p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t[] = {  {&_swigt__p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_AddProcessToWatchEvent,
  _swigc__p_Application,
  _swigc__p_Application_Pointer,
  _swigc__p_ImageBaseType,
  _swigc__p_KWIML_INT_int16_t,
  _swigc__p_KWIML_INT_int32_t,
  _swigc__p_KWIML_INT_int64_t,
  _swigc__p_KWIML_INT_int8_t,
  _swigc__p_KWIML_INT_uint16_t,
  _swigc__p_KWIML_INT_uint32_t,
  _swigc__p_KWIML_INT_uint64_t,
  _swigc__p_KWIML_INT_uint8_t,
  _swigc__p_Logger,
  _swigc__p_NumericTraitsT_double_t__RealType,
  _swigc__p_Parameter,
  _swigc__p_ProgressReporterManager,
  _swigc__p_ProgressReporterManager_Pointer,
  _swigc__p_PythonLogOutput,
  _swigc__p_PythonLogOutput_Pointer,
  _swigc__p_RealValueType,
  _swigc__p_Registry,
  _swigc__p_allocator_type,
  _swigc__p_boost__any,
  _swigc__p_char,
  _swigc__p_const_reference,
  _swigc__p_difference_type,
  _swigc__p_double,
  _swigc__p_int,
  _swigc__p_itkAbortCheckEvent,
  _swigc__p_itkAnyEvent,
  _swigc__p_itkCommand,
  _swigc__p_itkCommand_Pointer,
  _swigc__p_itkDeleteEvent,
  _swigc__p_itkEndEvent,
  _swigc__p_itkEndPickEvent,
  _swigc__p_itkEventObject,
  _swigc__p_itkExitEvent,
  _swigc__p_itkIndent,
  _swigc__p_itkIterationEvent,
  _swigc__p_itkLightObject,
  _swigc__p_itkLightObject_Pointer,
  _swigc__p_itkLogOutput,
  _swigc__p_itkMetaDataDictionary,
  _swigc__p_itkMetaDataObjectBase,
  _swigc__p_itkMetaDataObjectBase_Pointer,
  _swigc__p_itkModifiedEvent,
  _swigc__p_itkNoEvent,
  _swigc__p_itkObject,
  _swigc__p_itkObjectFactoryBase,
  _swigc__p_itkObjectFactoryBase_Pointer,
  _swigc__p_itkObject_Pointer,
  _swigc__p_itkPickEvent,
  _swigc__p_itkProcessObject,
  _swigc__p_itkProcessObject_Pointer,
  _swigc__p_itkProgressEvent,
  _swigc__p_itkPyCommand,
  _swigc__p_itkPyCommand_Pointer,
  _swigc__p_itkStartEvent,
  _swigc__p_itkStartPickEvent,
  _swigc__p_itkUserEvent,
  _swigc__p_itk__FixedArrayT_double_2_t,
  _swigc__p_itk__ImageRegionT_2_t,
  _swigc__p_itk__IndexT_2_t,
  _swigc__p_itk__PointT_double_2_t,
  _swigc__p_itk__SizeT_2_t,
  _swigc__p_itk__VectorT_double_2_t,
  _swigc__p_key_type,
  _swigc__p_long,
  _swigc__p_mapped_type,
  _swigc__p_otb__GCP,
  _swigc__p_otb__ImageMetadata,
  _swigc__p_otb__ImageMetadataBase,
  _swigc__p_otb__MetaData__LUT1D,
  _swigc__p_otb__MetaData__LUT2D,
  _swigc__p_otb__MetaData__LUTAxis,
  _swigc__p_otb__MetaData__LUTT_1_t,
  _swigc__p_otb__MetaData__LUTT_2_t,
  _swigc__p_otb__MetaData__TimePoint,
  _swigc__p_otb__SwigPrintCallback,
  _swigc__p_otb__VectorDataKeywordlist,
  _swigc__p_otb__Wrapper__ComplexImagePixelType,
  _swigc__p_otb__Wrapper__ImagePixelType,
  _swigc__p_otb__Wrapper__ParameterGroup,
  _swigc__p_otb__Wrapper__ParameterType,
  _swigc__p_otb__Wrapper__Role,
  _swigc__p_otb__Wrapper__UserLevel,
  _swigc__p_p_PyObject,
  _swigc__p_p_double,
  _swigc__p_p_float,
  _swigc__p_p_int,
  _swigc__p_p_short,
  _swigc__p_p_std__complexT_double_t,
  _swigc__p_p_std__complexT_float_t,
  _swigc__p_p_unsigned_char,
  _swigc__p_p_unsigned_int,
  _swigc__p_p_unsigned_short,
  _swigc__p_ptrdiff_t,
  _swigc__p_size_t,
  _swigc__p_size_type,
  _swigc__p_std__allocatorT_bool_t,
  _swigc__p_std__allocatorT_double_t,
  _swigc__p_std__allocatorT_std__pairT_std__string_const_std__string_t_t,
  _swigc__p_std__allocatorT_std__string_t,
  _swigc__p_std__complexT_double_t,
  _swigc__p_std__complexT_float_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__lessT_std__string_t,
  _swigc__p_std__listT_bool_t,
  _swigc__p_std__listT_itkLightObject_Pointer_t,
  _swigc__p_std__listT_itkObjectFactoryBase_p_t,
  _swigc__p_std__listT_std__string_t,
  _swigc__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,
  _swigc__p_std__ostream,
  _swigc__p_std__type_info,
  _swigc__p_std__vectorT_bool_std__allocatorT_bool_t_t,
  _swigc__p_std__vectorT_double_std__allocatorT_double_t_t,
  _swigc__p_std__vectorT_otb__ImageMetadataBase_std__allocatorT_otb__ImageMetadataBase_t_t,
  _swigc__p_std__vectorT_std__pairT_std__string_std__string_t_std__allocatorT_std__pairT_std__string_std__string_t_t_t,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        "swigvarlink",                      /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        0,                                  /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
        0,                                  /* tp_del */
        0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
        0,                                  /* tp_prev */
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        memcpy(gv->name, name, size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *globals = 0;
    if (!globals) {
      globals = SWIG_newvarlink();
    }
    return globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
  /* -----------------------------------------------------------------------------
   * Method creation and docstring support functions
   * ----------------------------------------------------------------------------- */
  
  /* -----------------------------------------------------------------------------
   * Function to find the method definition with the correct docstring for the
   * proxy module as opposed to the low-level API
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name) {
    /* Find the function in the modified method table */
    size_t offset = 0;
    int found = 0;
    while (SwigMethods_proxydocs[offset].ml_meth != NULL) {
      if (strcmp(SwigMethods_proxydocs[offset].ml_name, name) == 0) {
        found = 1;
        break;
      }
      offset++;
    }
    /* Use the copy with the modified docstring if available */
    return found ? &SwigMethods_proxydocs[offset] : NULL;
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyInstanceMethod_New() used in Python 3
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
#if PY_VERSION_HEX >= 0x03000000
    return PyInstanceMethod_New(func);
#else
    return PyMethod_New(func, NULL, NULL);
#endif
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyStaticMethod_New()
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
    return PyStaticMethod_New(func);
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  
  // thread safe initialization
  swig::container_owner_attribute();
  
  
  import_array();
  
  SWIG_Python_SetConstant(d, "ParameterType_Int",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Int)));
  SWIG_Python_SetConstant(d, "ParameterType_Float",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Float)));
  SWIG_Python_SetConstant(d, "ParameterType_Double",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Double)));
  SWIG_Python_SetConstant(d, "ParameterType_String",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_String)));
  SWIG_Python_SetConstant(d, "ParameterType_StringList",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_StringList)));
  SWIG_Python_SetConstant(d, "ParameterType_InputFilename",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_InputFilename)));
  SWIG_Python_SetConstant(d, "ParameterType_InputFilenameList",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_InputFilenameList)));
  SWIG_Python_SetConstant(d, "ParameterType_OutputFilename",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_OutputFilename)));
  SWIG_Python_SetConstant(d, "ParameterType_Directory",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Directory)));
  SWIG_Python_SetConstant(d, "ParameterType_Choice",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Choice)));
  SWIG_Python_SetConstant(d, "ParameterType_InputImage",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_InputImage)));
  SWIG_Python_SetConstant(d, "ParameterType_InputImageList",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_InputImageList)));
  SWIG_Python_SetConstant(d, "ParameterType_InputVectorData",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_InputVectorData)));
  SWIG_Python_SetConstant(d, "ParameterType_InputVectorDataList",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_InputVectorDataList)));
  SWIG_Python_SetConstant(d, "ParameterType_OutputImage",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_OutputImage)));
  SWIG_Python_SetConstant(d, "ParameterType_OutputVectorData",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_OutputVectorData)));
  SWIG_Python_SetConstant(d, "ParameterType_Radius",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Radius)));
  SWIG_Python_SetConstant(d, "ParameterType_Group",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Group)));
  SWIG_Python_SetConstant(d, "ParameterType_ListView",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_ListView)));
  SWIG_Python_SetConstant(d, "ParameterType_RAM",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_RAM)));
  SWIG_Python_SetConstant(d, "ParameterType_Bool",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Bool)));
  SWIG_Python_SetConstant(d, "ParameterType_Field",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Field)));
  SWIG_Python_SetConstant(d, "ParameterType_Band",SWIG_From_int(static_cast< int >(otb::Wrapper::ParameterType_Band)));
  SWIG_Python_SetConstant(d, "UserLevel_Basic",SWIG_From_int(static_cast< int >(otb::Wrapper::UserLevel_Basic)));
  SWIG_Python_SetConstant(d, "UserLevel_Advanced",SWIG_From_int(static_cast< int >(otb::Wrapper::UserLevel_Advanced)));
  SWIG_Python_SetConstant(d, "ImagePixelType_uint8",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_uint8)));
  SWIG_Python_SetConstant(d, "ImagePixelType_int16",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_int16)));
  SWIG_Python_SetConstant(d, "ImagePixelType_uint16",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_uint16)));
  SWIG_Python_SetConstant(d, "ImagePixelType_int32",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_int32)));
  SWIG_Python_SetConstant(d, "ImagePixelType_uint32",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_uint32)));
  SWIG_Python_SetConstant(d, "ImagePixelType_float",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_float)));
  SWIG_Python_SetConstant(d, "ImagePixelType_double",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_double)));
  SWIG_Python_SetConstant(d, "ImagePixelType_cint16",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_cint16)));
  SWIG_Python_SetConstant(d, "ImagePixelType_cint32",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_cint32)));
  SWIG_Python_SetConstant(d, "ImagePixelType_cfloat",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_cfloat)));
  SWIG_Python_SetConstant(d, "ImagePixelType_cdouble",SWIG_From_int(static_cast< int >(otb::Wrapper::ImagePixelType_cdouble)));
  SWIG_Python_SetConstant(d, "Role_Input",SWIG_From_int(static_cast< int >(otb::Wrapper::Role_Input)));
  SWIG_Python_SetConstant(d, "Role_Output",SWIG_From_int(static_cast< int >(otb::Wrapper::Role_Output)));
  SWIG_Python_SetConstant(d, "ComplexImagePixelType_float",SWIG_From_int(static_cast< int >(otb::Wrapper::ComplexImagePixelType_float)));
  SWIG_Python_SetConstant(d, "ComplexImagePixelType_double",SWIG_From_int(static_cast< int >(otb::Wrapper::ComplexImagePixelType_double)));
  
  /* Initialize threading */
  SWIG_PYTHON_INITIALIZE_THREADS;
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

